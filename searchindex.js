Search.setIndex({"docnames": ["about_openstef", "api_reference", "community", "concepts", "dashboard", "dazls", "index", "modules", "openstef", "openstef.data_classes", "openstef.feature_engineering", "openstef.metrics", "openstef.model", "openstef.model.metamodels", "openstef.model.regressors", "openstef.model_selection", "openstef.monitoring", "openstef.pipeline", "openstef.postprocessing", "openstef.preprocessing", "openstef.tasks", "openstef.tasks.utils", "openstef.validation", "pipelines_user_guide", "sql_database_diagram", "user_guides"], "filenames": ["about_openstef.rst", "api_reference.rst", "community.rst", "concepts.rst", "dashboard.rst", "dazls.rst", "index.rst", "modules.rst", "openstef.rst", "openstef.data_classes.rst", "openstef.feature_engineering.rst", "openstef.metrics.rst", "openstef.model.rst", "openstef.model.metamodels.rst", "openstef.model.regressors.rst", "openstef.model_selection.rst", "openstef.monitoring.rst", "openstef.pipeline.rst", "openstef.postprocessing.rst", "openstef.preprocessing.rst", "openstef.tasks.rst", "openstef.tasks.utils.rst", "openstef.validation.rst", "pipelines_user_guide.rst", "sql_database_diagram.rst", "user_guides.rst"], "titles": ["About OpenSTEF", "API reference", "Community", "Concepts", "&lt;no title&gt;", "Domain Adaptation for Zero Shot Learning in Sequence (DAZLS)", "Welcome to the documentation of OpenSTEF!", "openstef", "openstef package", "openstef.data_classes package", "openstef.feature_engineering package", "openstef.metrics package", "openstef.model package", "openstef.model.metamodels package", "openstef.model.regressors package", "openstef.model_selection package", "openstef.monitoring package", "openstef.pipeline package", "openstef.postprocessing package", "openstef.preprocessing package", "openstef.tasks package", "openstef.tasks.utils package", "openstef.validation package", "Pipelines user guide", "Overview of relational database schema", "User guides"], "terms": {"The": [0, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 25], "energi": [0, 3, 5, 6, 18, 20], "transit": 0, "pose": 0, "new": [0, 3, 8, 10, 16, 17, 20], "challeng": 0, "all": [0, 2, 3, 6, 9, 10, 11, 12, 13, 14, 17, 20, 21, 22, 23], "parti": 0, "sector": [0, 6], "For": [0, 2, 3, 5, 10, 12, 13, 14, 15, 16, 20, 21, 25], "grid": [0, 3], "oper": [0, 9, 10, 13, 15, 17, 23, 25], "rise": 0, "renew": [0, 3, 5, 14], "electrif": 0, "consumpt": [0, 18, 20], "lead": 0, "capac": 0, "its": [0, 6, 9, 10], "fysic": 0, "constraint": 0, "forecast": [0, 1, 3, 6, 7, 8, 9, 10, 11, 12, 17, 18, 20], "load": [0, 3, 5, 8, 9, 10, 11, 12, 14, 17, 18, 20, 22, 23], "next": [0, 12], "hour": [0, 8, 10, 12, 17, 20, 22], "dai": [0, 10, 12, 15, 17, 20], "i": [0, 2, 3, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25], "essenti": 0, "anticip": 0, "local": [0, 3, 25], "congest": 0, "make": [0, 6, 9, 10, 12, 13, 14, 17, 18, 20], "most": [0, 12, 13, 14, 16, 17], "exist": [0, 10, 11, 20], "asset": 0, "provid": [0, 3, 5, 10, 20, 25], "complet": [0, 3, 5, 10, 13, 16, 20, 21, 22], "softwar": 0, "stack": 0, "which": [0, 3, 5, 6, 9, 10, 12, 14, 17, 18, 20, 22, 23], "electr": [0, 3, 5, 14], "given": [0, 8, 9, 10, 11, 15, 16, 17, 18, 20, 21], "timeseri": [0, 22], "measur": [0, 3, 11, 22, 24], "net": [0, 3, 5], "gener": [0, 1, 2, 7, 8, 9, 11, 12, 15, 17, 18, 25], "fulli": [0, 12, 22, 25], "autom": [0, 14], "machin": [0, 3, 6, 8, 12], "learn": [0, 6, 8, 12], "pipelin": [0, 1, 3, 5, 6, 7, 8, 9, 10, 13, 14], "execut": [0, 20, 22], "deliv": 0, "probabilist": 0, "futur": [0, 12], "work": [0, 10, 20], "combin": [0, 3, 5, 20], "both": [0, 14, 23], "perform": [0, 3, 11, 13, 14, 16, 17, 20, 25], "valid": [0, 1, 3, 7, 8, 9, 12, 13, 15, 17, 20], "input": [0, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 22], "data": [0, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25], "extern": [0, 14], "predictor": 0, "weather": [0, 3, 5, 10, 17, 18, 20], "market": 0, "price": [0, 3, 20], "train": [0, 1, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 22, 25], "ani": [0, 9, 10, 12, 14, 16, 17, 20, 21, 23, 25], "scikit": 0, "compat": [0, 12, 22], "model": [0, 1, 3, 5, 7, 8, 9, 10, 11, 17, 20, 22, 25], "via": [0, 3, 16], "an": [0, 2, 3, 5, 8, 10, 12, 13, 15, 17, 21, 23, 24, 25], "api": [0, 3, 6, 14, 23], "expert": 0, "graphic": 0, "user": [0, 3, 6, 20], "interfac": [0, 3, 10, 14, 25], "base": [0, 3, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21], "open": [0, 2, 3], "sourc": [0, 3, 5, 20], "technologi": 0, "standard": [0, 8, 12, 20], "organ": 0, "microservic": 0, "architectur": [0, 2, 25], "optim": [0, 12, 17, 20], "cloud": [0, 15], "deploy": 0, "resili": 0, "As": [0, 18, 23], "avail": [0, 6, 8, 9, 10, 11, 12, 14, 18, 20, 22, 25], "critic": 0, "applic": [0, 10, 23], "deploi": [0, 3, 5], "multipl": [0, 3, 5, 10, 15, 17, 25], "fallback": [0, 1, 7, 8, 16], "stategi": 0, "thi": [0, 2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25], "wai": [0, 10, 12, 17, 23, 25], "alwai": [0, 18, 20], "when": [0, 3, 5, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21], "issu": [0, 2, 3, 5], "label": [0, 10, 14, 16, 22], "possibl": [0, 2, 11], "reconstruct": 0, "decis": 0, "platform": 0, "agnost": 0, "container": 0, "run": [0, 3, 5, 9, 13, 20, 21, 23], "contain": [0, 3, 6, 10, 11, 13, 14, 16, 17, 20, 22, 23, 25], "A": [0, 3, 5, 8, 10, 11, 13, 14, 17, 20, 21, 23], "refer": [0, 6, 9, 11, 14, 20, 23, 25], "implement": [0, 10, 12, 14, 15], "can": [0, 2, 3, 5, 6, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25], "directli": [0, 3, 20], "howev": [0, 11, 12, 23], "have": [0, 2, 3, 5, 8, 9, 10, 14, 15, 20, 21, 23, 25], "uniqu": [0, 11], "IT": 0, "landscap": 0, "case": [0, 10, 11, 14, 17, 20], "modular": 0, "natur": 0, "enabl": 0, "easili": 0, "addapt": 0, "environ": 0, "difficult": 0, "risk": 0, "toward": [0, 25], "polici": 0, "react": 0, "predict": [0, 3, 5, 8, 9, 10, 11, 12, 13, 14, 17, 18, 20, 21, 22, 24], "event": [0, 12], "split": [0, 3, 5, 9, 14, 15, 17, 18, 20], "compon": [0, 3, 5, 6, 8, 14, 17, 18, 20], "With": 0, "increas": 0, "fraction": [0, 9, 15, 17, 22], "mix": 0, "balanc": 0, "insight": 0, "wind": [0, 1, 3, 5, 7, 8, 9, 10, 14, 18, 20], "solar": [0, 1, 3, 5, 7, 8, 9, 10, 14, 18, 20], "power": [0, 3, 5, 10, 14, 18, 20], "relev": [0, 10], "eu": 0, "commis": 0, "regul": 0, "No": [0, 8], "543": 0, "2013": 0, "openstef": [1, 2, 3, 5, 23, 24, 25], "packag": [1, 3, 6, 7, 25], "subpackag": [1, 7], "data_class": [1, 7, 8, 23], "submodul": [1, 7], "model_specif": [1, 7, 8, 23], "modul": [1, 7], "prediction_job": [1, 7, 8, 20, 21, 23], "split_funct": [1, 7, 8], "content": [1, 7], "feature_engin": [1, 7, 8], "apply_featur": [1, 7, 8], "feature_add": [1, 7, 8], "feature_appl": [1, 7, 8], "historic_featur": [1, 7, 8], "holiday_featur": [1, 7, 8], "lag_featur": [1, 7, 8], "weather_featur": [1, 7, 8], "metric": [1, 7, 8, 20, 23], "figur": [1, 7, 8, 20], "report": [1, 7, 8, 12, 17, 23], "basecas": [1, 7, 8, 9, 11, 17, 18, 20, 23], "confidence_interval_appl": [1, 7, 8], "model_cr": [1, 7, 8], "object": [1, 2, 7, 8, 9, 10, 11, 13, 14, 16, 17, 20, 21, 23], "objective_cr": [1, 7, 8], "serial": [1, 7, 8], "standard_deviation_gener": [1, 7, 8], "model_select": [1, 7, 8], "monitor": [1, 7, 8], "performance_met": [1, 7, 8], "team": [1, 2, 6, 7, 8, 20, 21], "create_basecase_forecast": [1, 7, 8, 23, 25], "create_component_forecast": [1, 3, 5, 7, 8, 25], "create_forecast": [1, 7, 8, 23, 25], "optimize_hyperparamet": [1, 7, 8, 23, 25], "train_create_forecast_backtest": [1, 7, 8, 25], "train_model": [1, 7, 8, 23, 25], "util": [1, 7, 8, 13, 20], "postprocess": [1, 7, 8], "preprocess": [1, 7, 8], "task": [1, 3, 7, 8, 9, 16], "calculate_kpi": [1, 7, 8], "create_components_forecast": [1, 7, 8, 23], "create_solar_forecast": [1, 7, 8, 9], "create_wind_forecast": [1, 7, 8, 9], "run_traci": [1, 7, 8], "split_forecast": [1, 7, 8], "enum": [1, 7, 9, 18], "forecasttyp": [1, 7, 8, 18], "demand": [1, 7, 8, 9], "mlmodeltyp": [1, 7, 8, 12], "lgb": [1, 7, 8, 9, 12], "linear": [1, 7, 8, 9, 12, 20], "proloaf": [1, 7, 8, 9, 10, 12], "xgb": [1, 3, 7, 8, 9, 12], "xgb_quantil": [1, 7, 8, 9, 12], "pipelinetyp": [1, 7, 8, 9], "hyper_parmat": [1, 7, 8], "tracyjobresult": [1, 7, 8, 20], "fail": [1, 7, 8, 12, 20], "success": [1, 7, 8, 16, 21], "unknown": [1, 3, 5, 7, 8], "except": [1, 3, 7, 21, 23], "componentforecasttooshorthorizonerror": [1, 7, 8], "inputdatainsufficienterror": [1, 7, 8, 17], "inputdatainvaliderror": [1, 7, 8], "inputdatawrongcolumnordererror": [1, 7, 8, 17], "modelwithoutstdev": [1, 7, 8], "nopredictedloaderror": [1, 7, 8, 20], "norealisedloaderror": [1, 7, 8, 20], "oldmodelhigherscoreerror": [1, 7, 8, 17], "predictionjobexcept": [1, 7, 8, 21], "skipsavetrainingforecast": [1, 7, 8], "here": [2, 25], "you": [2, 3, 6, 8], "find": [2, 6, 21], "inform": [2, 3, 5, 6, 9, 10, 11, 16, 20, 21, 22, 24, 25], "about": [2, 3, 5, 6, 9, 10, 11, 12, 24], "tsc": 2, "respons": 2, "ambit": 2, "goal": 2, "project": [2, 6], "guidelin": 2, "procedur": 2, "tool": 2, "select": [2, 3, 11, 15], "develop": [2, 3, 5, 11], "infrastructur": 2, "choic": 2, "rais": [2, 3, 8, 12, 14, 17, 20, 21, 23], "subject": 2, "ar": [2, 3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "import": [2, 3, 5, 10, 11, 13, 14, 18, 20, 22, 23], "direct": [2, 10, 20, 21], "consist": [2, 10, 17], "follow": [2, 9, 10, 15, 16, 20, 21, 25], "member": 2, "frank": [2, 11], "kreuwel": 2, "jan": 2, "maarten": 2, "van": [2, 3, 5, 14], "doorn": [2, 3, 5, 14], "jona": 2, "den": 2, "bogaard": 2, "david": 2, "swinkel": 2, "frederik": 2, "stoel": 2, "more": [2, 3, 5, 8, 10, 12, 13, 14, 16, 21, 23, 25], "meet": 2, "note": [2, 12, 14, 15, 16, 22, 23], "link": [2, 3, 5, 9, 16, 25], "found": [2, 8, 10, 20, 21, 25], "govern": 2, "actual": [2, 20], "overview": [2, 6], "welcom": 2, "form": [2, 10], "code": [2, 3, 5, 20, 23, 25], "look": [2, 3, 10, 21, 23, 25], "If": [2, 3, 8, 9, 10, 11, 12, 13, 14, 15, 17, 20, 21, 22], "bug": 2, "would": 2, "like": [2, 10, 25], "request": [2, 6, 10, 14], "featur": [2, 3, 9, 10, 11, 13, 14, 15, 16, 17, 20], "pleas": [2, 6], "dure": [2, 9, 10, 12, 21, 22], "bi": 2, "weekli": 2, "refin": 2, "we": [2, 3, 5, 9, 11, 14, 15, 17], "refinem": 2, "anyon": 2, "interest": 2, "detail": [2, 6], "Not": 2, "what": [2, 9, 25], "see": [2, 3, 5, 6, 9, 10, 11, 12, 14, 16, 25], "get": [2, 3, 6, 8, 9, 11, 12, 14, 15, 16, 20, 21, 23, 25], "Or": [2, 11], "post": [2, 3, 16, 18, 20, 21], "your": [2, 10], "question": 2, "channel": [2, 6], "help": 3, "understand": 3, "set": [3, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25], "up": [3, 23, 25], "It": [3, 5, 6, 10, 13, 17, 20], "job": [3, 8, 9, 10, 12, 13, 17, 18, 20, 21, 22, 24], "configur": [3, 9, 12, 21, 23], "e": [3, 9, 11, 14, 16, 20], "g": [3, 9, 11, 14, 20], "certain": [3, 10, 23], "locat": [3, 5, 9, 10, 20], "call": [3, 12, 20, 21], "evalu": [3, 11, 14, 25], "us": [3, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25], "correspond": [3, 10, 13, 15, 17], "includ": [3, 5, 10, 12, 14, 15, 17, 20, 23, 25], "from": [3, 5, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 23, 25], "write": [3, 11, 20, 23], "give": [3, 5, 12], "choos": [3, 9], "fetch": [3, 21], "requir": [3, 6, 9, 10, 11, 12, 14, 17, 23, 25], "yourself": 3, "check": [3, 10, 17, 20, 22], "flatlin": [3, 9, 22], "engin": [3, 10, 17], "creat": [3, 10, 11, 12, 16, 17, 20, 25], "yesterdai": 3, "last": [3, 10, 12, 17, 20], "week": [3, 11, 12, 20], "quantil": [3, 8, 9, 11, 12, 14, 17, 20], "storag": [3, 17, 20], "store": [3, 5, 17, 20, 24], "mlflow": [3, 12, 17], "disk": [3, 11], "s3_bucket": 3, "aw": 3, "process": [3, 6, 9, 11, 13, 18], "datafram": [3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "extra": [3, 9, 10, 18], "usag": [3, 12, 25], "dbc": [3, 21, 23], "read": [3, 6, 11], "current": [3, 12, 16], "mysql": [3, 20], "influx": 3, "just": [3, 9, 22], "itself": 3, "need": [3, 8, 9, 10, 15, 17, 20], "part": 3, "github": [3, 11, 23, 25], "repositori": [3, 5, 23, 25], "fetcher": 3, "schedul": [3, 23], "cron": [3, 20], "kubernet": 3, "other": [3, 5, 14, 16, 18, 21, 22], "rest": [3, 9], "config": [3, 8, 9, 20, 21, 23], "ci": 3, "cd": 3, "cicd": 3, "build": [3, 11, 16, 21], "test": [3, 9, 14, 15, 17, 20, 21], "jenkin": 3, "tekton": 3, "releas": 3, "pypi": [3, 6], "action": [3, 16], "comput": [3, 10, 11, 13, 17, 21], "sql": [3, 16, 20], "dashboard": [3, 25], "visual": 3, "histor": [3, 10, 12, 20], "function": [3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23], "techniqu": [3, 5], "transfer": [3, 5], "knowledg": [3, 5], "substat": [3, 5, 14], "incomplet": [3, 5, 22], "being": [3, 5], "known": [3, 5, 11, 14], "carri": [3, 5, 14, 20], "out": [3, 5, 10, 14, 15, 18, 20, 21], "target": [3, 5, 11, 13, 14, 17, 22], "total": [3, 5, 16, 22], "each": [3, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 25], "method": [3, 5, 10, 12, 13, 14, 21], "becaus": [3, 5, 11, 17], "ha": [3, 5, 8, 9, 10, 14, 17], "purpos": [3, 5], "formul": [3, 5], "2": [3, 5, 6, 11, 13, 20], "step": [3, 5, 20, 22], "approach": [3, 5], "two": [3, 5, 11, 12, 14, 23], "bellow": [3, 5, 24], "depict": [3, 5], "structur": [3, 5], "everi": [3, 5, 10, 17, 20], "metadata": [3, 5, 18], "output": [3, 5, 10, 14, 16, 17, 18, 20], "At": [3, 5], "first": [3, 5, 10, 11, 17, 20, 22, 23], "feed": [3, 5], "togeth": [3, 5, 17, 23], "Then": [3, 5, 14], "final": [3, 5, 10, 13], "teng": [3, 5, 14], "": [3, 5, 6, 11, 12, 13, 14, 17, 22, 23, 25], "y": [3, 5, 13, 14], "nooten": [3, 5, 14], "c": [3, 5, 10, 14], "j": [3, 5, 14], "m": [3, 5, 10, 14], "ottenbro": [3, 5, 14], "huijbregt": [3, 5, 14], "jansen": [3, 5, 14], "improv": [3, 5, 10, 14, 22], "Near": [3, 5, 14], "real": [3, 5, 14], "time": [3, 5, 10, 12, 14, 16, 17, 20, 22], "product": [3, 5, 14, 18], "level": [3, 5, 14, 16, 17, 20], "submit": [3, 5, 6, 14], "how": [3, 5, 11, 20, 22, 23, 25], "TO": [3, 5], "notebook": [3, 5], "file": [3, 5, 10, 11], "05": [3, 5, 11, 17], "ipynb": [3, 5], "dazls_stor": [3, 5], "sav": [3, 5], "produc": [3, 5, 9, 18], "whenev": [3, 5], "chang": [3, 5], "py": [3, 5, 10, 20], "again": [3, 5], "newli": [3, 5, 16, 20], "er": [3, 24], "diagram": [3, 24], "shown": [3, 23, 24], "schema": [5, 6], "python": [6, 9, 10, 13, 20], "short": 6, "term": [6, 23], "instal": [6, 25], "instruct": 6, "http": [6, 10, 11, 16], "org": [6, 10, 11], "start": [6, 10, 12, 15, 17, 20, 22, 25], "guid": 6, "concept": [6, 23, 25], "domain": [6, 14], "adapt": [6, 14], "zero": [6, 11, 13, 18, 22], "shot": 6, "sequenc": [6, 15, 19, 21], "dazl": [6, 8, 12, 17], "relat": [6, 10, 18], "databas": [6, 17, 20, 21, 23, 25], "commun": 6, "latest": [6, 11], "websit": 6, "also": [6, 10, 11, 12, 16, 17, 23], "watch": 6, "video": 6, "instead": [6, 11], "want": [6, 15], "join": 6, "discuss": 6, "our": [6, 11], "md": 6, "code_of_conduct": 6, "project_govern": 6, "pull": 6, "u": [6, 11, 16, 20], "under": 6, "mozilla": [6, 11], "public": 6, "version": 6, "0": [6, 10, 11, 12, 13, 14, 15, 17, 20, 22], "modelspecificationdataclass": [8, 9, 12, 17, 23], "feature_modul": [8, 9, 10], "feature_nam": [8, 9, 10, 12, 13, 14, 17], "hyper_param": [8, 9, 17], "id": [8, 9, 12, 17, 20, 21], "predictionjobdataclass": [8, 9, 10, 12, 17, 18, 20, 21, 23], "alternative_forecast_model_pid": [8, 9], "backtest_split_func": [8, 9], "completeness_treshold": [8, 9], "default_modelspec": [8, 9], "depends_on": [8, 9], "descript": [8, 9, 17, 20, 22], "flatliner_treshold": [8, 9], "forecast_typ": [8, 9, 18], "horizon_minut": [8, 9, 17, 20], "hub_height": [8, 9, 10], "lat": [8, 9, 10, 20], "lon": [8, 9, 10, 20], "minimal_table_length": [8, 9, 22], "n_turbin": [8, 9, 10], "name": [8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21], "pipelines_to_run": [8, 9], "resolution_minut": [8, 9, 17, 20], "save_train_forecast": [8, 9, 17], "sid": [8, 9], "train_compon": [8, 9], "train_horizons_minut": [8, 9], "train_split_func": [8, 9], "turbine_typ": [8, 9], "splitfuncdataclass": [8, 9], "argument": [8, 9, 12, 15, 20, 21], "featureadd": [8, 10], "parse_feature_nam": [8, 10], "required_featur": [8, 10], "featuredispatch": [8, 10], "dispatch_featur": [8, 10], "parsedfeatur": [8, 10], "param": [8, 10, 16], "adders_from_modul": [8, 10], "abstractfeatureappl": [8, 10], "add_featur": [8, 10], "operationalpredictfeatureappl": [8, 10], "trainfeatureappl": [8, 10], "add_missing_feature_column": [8, 10], "enforce_feature_ord": [8, 10], "remove_non_requested_feature_column": [8, 10], "add_historic_load_as_a_featur": [8, 10], "check_for_bridge_dai": [8, 10], "generate_holiday_feature_funct": [8, 10], "extract_lag_featur": [8, 10], "generate_lag_feature_funct": [8, 10], "generate_non_trivial_lag_tim": [8, 10], "generate_trivial_lag_featur": [8, 10], "add_additional_solar_featur": [8, 10], "add_additional_wind_featur": [8, 10], "add_humidity_featur": [8, 10], "calc_air_dens": [8, 10], "calc_dewpoint": [8, 10], "calc_saturation_pressur": [8, 10], "calc_vapour_pressur": [8, 10], "calculate_dni": [8, 10], "calculate_gti": [8, 10], "calculate_windspeed_at_hubheight": [8, 10], "calculate_windturbine_power_output": [8, 10], "humidity_calcul": [8, 10], "convert_to_base64_data_uri": [8, 11], "plot_data_seri": [8, 11], "plot_feature_import": [8, 11], "bia": [8, 11, 20], "frac_in_stdev": [8, 11], "franks_skill_scor": [8, 11], "franks_skill_score_peak": [8, 11], "get_eval_metric_funct": [8, 11], "mae": [8, 11, 12, 14], "nsme": [8, 11, 20], "r_mae": [8, 11], "r_mae_highest": [8, 11], "r_mae_lowest": [8, 11], "r_mne_highest": [8, 11], "r_mpe_highest": [8, 11], "rmse": [8, 11, 14, 20], "skill_scor": [8, 11], "skill_score_positive_peak": [8, 11], "xgb_quantile_ev": [8, 11], "xgb_quantile_obj": [8, 11], "generate_report": [8, 11], "get_metr": [8, 11], "write_report_to_disk": [8, 11], "metamodel": [8, 12, 14], "grouped_regressor": [8, 12], "missing_values_handl": [8, 12], "regressor": [8, 12, 13, 23], "custom_regressor": [8, 12], "lgbm": [8, 12], "basecasemodel": [8, 12], "can_predict_quantil": [8, 12, 14], "fit": [8, 12, 13, 14, 17, 20], "make_basecase_forecast": [8, 12], "confidenceintervalappl": [8, 12], "add_confidence_interv": [8, 12], "generate_fallback": [8, 12], "modelcr": [8, 12], "model_constructor": [8, 12], "create_model": [8, 12], "lgbregressorobject": [8, 12], "get_param": [8, 12], "get_pruning_callback": [8, 12], "linearregressorobject": [8, 12], "proloafregressorobject": [8, 12], "regressorobject": [8, 12, 14, 17], "create_report": [8, 12], "get_default_valu": [8, 12], "get_trial_track": [8, 12], "xgbquantileregressorobject": [8, 12], "xgbregressorobject": [8, 12], "objectivecr": [8, 12], "create_object": [8, 12], "mlflowseri": [8, 12], "get_model_ag": [8, 12], "load_model": [8, 12], "remove_old_model": [8, 12], "save_model": [8, 12], "standarddeviationgener": [8, 12], "generate_standard_deviation_data": [8, 12], "backtest_split_default": [8, 15], "group_kfold": [8, 15], "random_sampl": [8, 15], "sample_indices_train_v": [8, 15], "split_data_train_validation_test": [8, 15], "performancemet": [8, 16], "checkpoint": [8, 16], "complete_level": [8, 16], "start_level": [8, 16], "build_sql_query_str": [8, 16], "format_messag": [8, 16], "get_card_sect": [8, 16], "post_team": [8, 16], "create_basecase_forecast_pipelin": [8, 17, 23], "generate_basecase_confidence_interv": [8, 17], "create_components_forecast_pipelin": [8, 17], "create_input": [8, 17], "create_forecast_pipelin": [8, 17], "create_forecast_pipeline_cor": [8, 17, 23], "optimize_hyperparameters_pipelin": [8, 17, 23], "optimize_hyperparameters_pipeline_cor": [8, 17, 23], "optuna_optim": [8, 17], "train_model_and_forecast_back_test": [8, 17], "train_model_and_forecast_test_cor": [8, 17], "train_model_pipelin": [8, 17], "train_model_pipeline_cor": [8, 17, 23], "train_pipeline_common": [8, 17], "train_pipeline_step_compute_featur": [8, 17], "train_pipeline_step_split_data": [8, 17], "train_pipeline_step_train_model": [8, 17], "generate_forecast_datetime_rang": [8, 17], "add_components_base_case_forecast": [8, 18], "add_prediction_job_properties_to_forecast": [8, 18], "calculate_wind_pow": [8, 18], "normalize_and_convert_weather_data_for_split": [8, 18], "post_process_wind_solar": [8, 18], "split_forecast_in_compon": [8, 18], "replace_repeated_values_with_nan": [8, 19], "depend": [8, 9, 10, 12, 17, 20], "predictionjobloop": [8, 20], "taskcontext": [8, 20], "calc_kpi_for_specific_pid": [8, 20], "check_kpi_task": [8, 20], "main": [8, 20, 23, 25], "set_incomplete_kpi_to_nan": [8, 20], "create_basecase_forecast_task": [8, 20], "create_components_forecast_task": [8, 20], "create_forecast_task": [8, 20], "apply_fit_insol": [8, 20], "apply_persist": [8, 20], "calc_norm": [8, 20], "combine_forecast": [8, 20], "fide": [8, 20], "make_solar_prediction_pj": [8, 20], "make_wind_forecast_pj": [8, 20], "optimize_hyperparameters_task": [8, 20], "run_tracy_job": [8, 20], "convert_coefdict_to_coefsdf": [8, 20], "determine_invalid_coef": [8, 20], "find_compon": [8, 20], "split_forecast_task": [8, 20], "train_model_task": [8, 20], "calc_completeness_datafram": [8, 22], "calc_completeness_featur": [8, 22], "check_data_for_each_trafo": [8, 22], "drop_target_na": [8, 22], "find_nonzero_flatlin": [8, 22], "find_zero_flatlin": [8, 22], "is_data_suffici": [8, 22], "class": [8, 9, 10, 11, 12, 13, 14, 16, 21, 23], "valu": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22], "enumer": 8, "hyper_paramet": 8, "custom": [8, 9, 10, 11, 14, 17, 20], "should": [8, 9, 10, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23], "least": [8, 10, 18, 21], "30": [8, 20], "advanc": [8, 10], "insuffici": [8, 17], "invalid": [8, 10, 12, 16, 17, 20], "wrong": [8, 20], "column": [8, 10, 11, 12, 13, 14, 17, 18, 19, 20, 22, 23], "order": [8, 10, 11, 15, 17, 20, 21], "deviat": [8, 12], "pid": [8, 9, 17, 20, 21], "messag": [8, 16, 18, 20, 21], "datatim": [8, 20], "rang": [8, 11, 17, 20], "realis": [8, 11, 12, 20], "datetim": [8, 10, 12, 17, 18, 20, 22], "old": [8, 12, 17, 20], "higher": 8, "score": [8, 11, 12, 14], "none": [8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23], "One": [8, 16], "better": [8, 17, 20], "too": [8, 17, 20], "young": [8, 17, 20], "don": [8, 10], "t": [8, 10, 12, 20, 22], "save": [8, 9, 12, 20], "tra": 8, "forcast": 8, "specifi": [9, 10, 11, 13, 16, 18, 20, 22], "dataclass": [9, 11, 17], "specif": [9, 10, 12, 14, 16, 17, 20, 21], "basemodel": 9, "hold": [9, 11, 20, 23], "regard": [9, 22], "procc": 9, "list": [9, 10, 11, 13, 14, 15, 17, 21, 22, 23], "dict": [9, 10, 11, 12, 16, 17, 18, 20, 23], "hyperparamet": [9, 11, 12, 17, 20], "int": [9, 10, 11, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23], "str": [9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23], "made": 9, "pydant": [9, 23], "prevent": [9, 10], "convert": [9, 11, 13, 14, 18, 20], "integ": [9, 13, 14], "smart_union": 9, "true": [9, 11, 12, 15, 16, 20, 21, 22], "anoth": [9, 21], "option": [9, 10, 11, 12, 13, 14, 16, 17, 18, 20, 21, 22], "backtest": [9, 17, 25], "float": [9, 10, 11, 13, 14, 15, 17, 22, 23], "minimum": 9, "regular": [9, 12], "default": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21], "union": [9, 10, 11, 12, 13, 16, 17, 21, 22], "might": 9, "human": 9, "number": [9, 10, 11, 13, 15, 17, 20], "consecut": 9, "constant": [9, 13, 14], "detect": [9, 10, 22], "type": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "unsur": 9, "pick": 9, "kei": [9, 10, 12, 13, 16, 17, 20, 25], "allow": [9, 14], "similar": [9, 11, 19], "return": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "horizon": [9, 10, 11, 12, 17, 22, 23], "desir": [9, 12, 14, 15, 19, 20, 21], "minut": [9, 10], "onli": [9, 10, 11, 12, 13, 14, 20, 21, 22], "often": [9, 12], "abrevi": 9, "latitud": [9, 10], "degre": [9, 10], "longitud": [9, 10], "length": [9, 15, 19, 22], "row": [9, 13, 22], "requier": [9, 10], "readm": 9, "pj": [9, 10, 12, 17, 18, 20, 21, 22], "resolut": 9, "bool": [9, 12, 14, 15, 16, 17, 20, 21, 22], "indic": [9, 10, 11, 14, 15, 17, 20, 21, 22], "wether": [9, 14, 21], "whether": [9, 10, 16, 21], "taken": [9, 10], "account": 9, "callabl": [9, 11, 13, 21], "required_argu": 9, "string": [9, 13, 14, 16, 17], "instan": 9, "attribut": [9, 14], "them": [9, 14, 20, 21], "otherwis": [9, 10, 13, 17, 22], "instanc": [9, 12, 13, 23, 25], "paramet": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "must": [9, 15], "tupl": [9, 10, 11, 12, 13, 15, 17, 20, 21, 23], "appli": [10, 13, 15, 17, 20, 21], "accuraci": 10, "exampl": [10, 12, 13, 17, 18, 20, 22, 23], "ad": [10, 12, 17, 18], "1": [10, 11, 13, 14, 15, 17, 20, 22], "7": [10, 20], "ago": 10, "same": [10, 23], "weekdai": 10, "holidai": 10, "extrapol": 10, "windspe": 10, "100m": 10, "normalis": 10, "accord": [10, 11, 15, 17, 23], "turbin": 10, "curv": [10, 18], "24": [10, 20], "defin": [10, 11, 13, 14, 20], "feature_funct": 10, "recent": [10, 12, 17], "omit": 10, "deriven": 10, "onc": [10, 20], "But": 10, "present": [10, 12, 23], "These": [10, 17, 20, 23], "unrequest": 10, "addit": [10, 20, 23], "filter": 10, "later": 10, "panda": [10, 11, 13, 14, 17, 20, 23], "pd": [10, 13, 14, 17, 18, 20, 22, 23], "index": [10, 11, 12, 13, 17, 18, 20, 22], "predictor_1": 10, "predictor_n": 10, "reuqest": 10, "limit": [10, 23], "feature_1": 10, "feature_m": 10, "numpi": [10, 11, 20], "np": [10, 11, 13, 14, 15, 20], "date_rang": [10, 20], "2017": [10, 20], "01": [10, 20], "09": [10, 20], "00": [10, 17, 20], "freq": [10, 20], "15t": [10, 20], "period": [10, 15, 20], "200": [10, 20], "sin": [10, 20], "pi": [10, 20], "random": [10, 15, 20, 21], "uniform": [10, 20], "adder": 10, "abc": 10, "abstract": [10, 14], "basic": 10, "block": [10, 22], "handl": [10, 13, 14], "logic": [10, 22], "syntact": 10, "sugar": 10, "properli": 10, "df": [10, 13, 16, 19, 20, 22], "parsed_feature_nam": 10, "add": [10, 12, 18, 20], "properti": [10, 12, 14], "pars": 10, "charg": 10, "dictionnari": [10, 13], "potenti": [10, 19], "In": [10, 14, 15, 23], "doe": [10, 20, 21, 23], "empti": [10, 17], "dictionari": [10, 12, 16, 20], "mai": [10, 22], "recogn": [10, 20], "calcul": [10, 11, 12, 17, 18, 20, 22], "orchestr": 10, "scan": 10, "assign": [10, 15], "proper": 10, "launch": 10, "effect": [10, 22], "dispatch": 10, "alia": 10, "field": [10, 13], "module_nam": 10, "fly": 10, "sever": [10, 20], "featureappl": 10, "applicatior": 10, "latency_config": 10, "larger": [10, 17], "horzion": 10, "thei": [10, 17], "720min": 10, "720": 10, "25": [10, 17], "due": [10, 15], "latenc": 10, "apx": [10, 20], "sort": [10, 15], "modelu": 10, "variou": 10, "helper": 10, "input_data": [10, 12, 14, 15, 17, 23], "featurelist": 10, "nan": [10, 13, 14, 19, 20, 22], "especi": 10, "useful": [10, 20], "sure": [10, 11, 20], "place": 10, "intend": [10, 15], "error": [10, 11, 12, 20], "predicion": [10, 13], "ideal": 10, "world": 10, "nescarri": 10, "miss": [10, 13, 14, 20, 22], "fill": [10, 13], "n": 10, "enforc": [10, 18], "correct": [10, 22], "alphabet": 10, "remain": 10, "everyth": 10, "between": [10, 12, 15, 17, 20, 21, 22], "eventu": 10, "assum": [10, 15, 20], "variabl": 10, "furthermor": 10, "move": 10, "posit": [10, 11, 18], "pressent": 10, "requested_featur": 10, "remov": [10, 12, 13, 20], "nescesarri": 10, "serv": 10, "failsav": 10, "prediciton": [10, 11, 14, 18], "historic_load": 10, "equal": [10, 11, 18, 20, 22], "date": [10, 15], "holiday_nam": 10, "countri": 10, "year": 10, "holiday_funct": 10, "bridge_dai": 10, "bridgedai": 10, "associ": 10, "append": [10, 16], "dto": 10, "holidayfunciton": 10, "featurefunct": 10, "nl": 10, "path_to_school_holidays_csv": 10, "posixpath": 10, "home": 10, "runner": 10, "openstef_openstef": 10, "dutch_holidays_2020": 10, "2022": 10, "csv": 10, "2020": 10, "nieuwjaarsdag": 10, "12": 10, "2023": 10, "08": 10, "kerstvakanti": 10, "10": [10, 12], "15": [10, 12, 14, 15], "23": 10, "herfstvakantienoord": 10, "manual": [10, 21], "collect": [10, 20], "www": 10, "schoolvakanti": 10, "nederland": 10, "offici": 10, "ducth": 10, "until": 10, "meivakanti": 10, "herstvakanti": 10, "bouwvak": 10, "zomervakanti": 10, "voorjaarsvakanti": 10, "pasen": 10, "koningsdag": 10, "hemelvaart": 10, "pinksteren": 10, "kerst": 10, "brugdagen": 10, "updat": 10, "dec": 10, "agenda": 10, "filepath": 10, "school": 10, "the_name_of_the_holiday_to_be_check": 10, "lag": 10, "were": 10, "dataset": [10, 15, 17, 20], "lagtim": 10, "where": [10, 11, 13, 17, 22], "automat": [10, 11, 21], "lag_funct": 10, "generate_lag_funct": 10, "minute_list": 10, "h_ahead": 10, "height_treshold": 10, "autocorrel": 10, "trace": 10, "subsequ": 10, "minim": [10, 22], "peak": [10, 11, 15, 20], "adit": 10, "non": [10, 11, 12], "trivial": 10, "creation": 10, "mostli": 10, "wheather": 10, "humid": 10, "determin": [10, 12, 18, 20], "humidti": 10, "temperatur": 10, "pressur": 10, "rh": 10, "dewpoint": 10, "ndarrai": [10, 11, 13, 14], "atmospher": 10, "pa": 10, "rel": [10, 11], "air": 10, "densiti": 10, "kg": 10, "3": [10, 13, 14, 20], "vapour_pressur": 10, "en": [10, 11, 16, 20], "wikipedia": 10, "wiki": 10, "dew_point": 10, "mroe": 10, "info": [10, 11], "vapour": 10, "water": 10, "vaisala": 10, "com": [10, 11, 16], "site": 10, "document": [10, 25], "humidity_conversion_formulas_b210973en": 10, "f": 10, "pdf": 10, "satur": 10, "respect": [10, 14, 21], "psat": 10, "radiat": [10, 17, 18], "normal": [10, 12, 14, 18], "irradi": 10, "dni": 10, "deriv": [10, 11, 12], "obtain": [10, 17], "seri": [10, 11, 18, 20, 22], "datetimeindex": [10, 22], "right": 10, "zone": 10, "predictjob": 10, "surface_tilt": 10, "34": 10, "surface_azimuth": 10, "180": 10, "gti": 10, "poa": 10, "global": [10, 13], "tilt": 10, "plane": 10, "arrai": [10, 11, 13, 14, 15, 22], "timezon": 10, "surfac": 10, "photovolta": 10, "system": [10, 20], "face": 10, "south": 10, "north": 10, "east": 10, "90": 10, "west": 10, "270": 10, "fromheight": 10, "100": [10, 14, 17], "hubheight": 10, "hubheigh": 10, "height": 10, "hub": 10, "law": 10, "wind_profile_power_law": 10, "OR": 10, "10m": 10, "turbine_data": [10, 18], "through": [10, 18, 23], "describ": [10, 11, 18], "result": [10, 13, 17, 20], "1mwp": [10, 18], "rate": 10, "windspeedhub": 10, "nturbin": 10, "turbinedata": 10, "slope_cent": 10, "rated_pow": 10, "steep": 10, "hpa": 10, "moistur": 10, "numer": [10, 13, 14], "path_in": 11, "path_out": 11, "content_typ": 11, "data_uri": 11, "path": [11, 17, 23], "uri": [11, 17], "doc": [11, 16], "web": 11, "header": 11, "predict_data": 11, "47": [11, 17], "plot": 11, "pass": [11, 12, 16, 21], "There": 11, "either": [11, 17], "match": 11, "legend": 11, "line": 11, "feature_import": 11, "treemap": 11, "weight": [11, 14, 22], "assess": 11, "qualiti": [11, 12, 18], "absolut": [11, 20], "stdev": [11, 12], "amount": [11, 22], "within": [11, 14, 23], "one": [11, 12, 13, 14, 16, 17, 20, 21], "range_": 11, "skill": 11, "metric_nam": 11, "mean": [11, 12, 13, 14, 20, 21, 22, 23], "nash": 11, "sutcliff": 11, "effici": [11, 20], "previou": [11, 16, 21], "percentil": 11, "95": 11, "5": [11, 14], "percent": 11, "highest": 11, "lowest": 11, "neg": [11, 18, 20], "quantifi": 11, "much": 11, "underestim": 11, "overestim": 11, "root": 11, "squar": 11, "thise": 11, "pred": 11, "dmatrix": 11, "regress": [11, 12], "loss": 11, "pinbal": 11, "estim": [11, 12, 13, 15, 18], "distribut": [11, 12], "condit": 11, "xgboost": [11, 14], "gist": 11, "nikolai": 11, "lysenko": 11, "06769d701c1d9c9acb9a66f2f9d7a6c7": 11, "fucntion": 11, "degener": 11, "substitut": [11, 12], "second": 11, "page": [11, 25], "dmlc": [11, 14], "1825": 11, "why": 11, "trick": 11, "max_delta_step": [11, 14], "small": 11, "enough": [11, 22], "satisfi": 11, "min": [11, 15], "gradient": 11, "hessian": 11, "reason": 11, "gistcom": 11, "2322558": 11, "feature_importance_figur": 11, "data_series_figur": 11, "signatur": 11, "train_data": [11, 17], "validation_data": [11, 12, 17], "test_data": [11, 17], "openstfregressor": [11, 12, 14, 17, 22, 23], "static": [11, 12, 14], "y_pred": 11, "y_true": 11, "report_fold": 11, "view": 11, "grafana": 11, "groupedregressor": [12, 13], "feature_names_": [12, 13], "estimators_": [12, 13], "grouped_comput": [12, 13], "missingvalueshandl": [12, 13, 14], "non_null_columns_": [12, 13], "n_features_in_": [12, 13], "regressor_": [12, 13], "imputer_": [12, 13], "pipeline_": [12, 13], "feature_importances_": [12, 13], "customopenstfregressor": [12, 14], "valid_kwarg": [12, 14], "create_custom_object": [12, 14], "is_custom_typ": [12, 14], "load_custom_model": [12, 14], "lgbmopenstfregressor": [12, 14], "gain_importance_nam": [12, 14], "weight_importance_nam": [12, 14], "linearopenstfregressor": [12, 14], "linearregressor": [12, 14], "set_feature_import": [12, 14], "xgbopenstfregressor": [12, 14], "xgbquantileopenstfregressor": [12, 14], "get_feature_importances_from_boost": [12, 14], "baseestim": [12, 13, 14], "regressormixin": [12, 13, 14], "forecast_input_data": 12, "overwrite_delay_hour": 12, "48": 12, "idea": 12, "els": 12, "still": 12, "befor": [12, 22], "valueerror": [12, 14, 17], "7d": 12, "14d": 12, "comat": 12, "sklearn": [12, 13], "confid": [12, 17], "interv": [12, 17], "confidencegener": 12, "precis": 12, "defenit": 12, "group": [12, 13, 15, 21], "assumpt": [12, 18], "forecast_input": 12, "fallback_strategi": 12, "extreme_dai": 12, "fall": 12, "back": [12, 15, 17], "extrem": [12, 15], "profil": [12, 20], "strategi": [12, 13, 14, 15], "daili": 12, "len": [12, 20], "notimplementederror": 12, "factori": 12, "model_typ": [12, 14, 20], "kwarg": [12, 13, 14, 16, 20, 21], "construct": 12, "keyword": [12, 14, 21], "arg": [12, 20, 21], "trial": [12, 17], "hyperparam": 12, "test_fract": [12, 14, 15, 17], "validation_fract": [12, 14, 15], "eval_metr": [12, 14], "verbos": [12, 14], "fals": [12, 14, 15, 17, 20, 21, 22], "optuna": [12, 17], "studi": [12, 17], "constructor": 12, "some": [12, 21, 25], "he": [12, 14], "initi": [12, 23], "insid": 12, "classmethod": [12, 13, 14], "without": [12, 13, 17, 25], "al": 12, "xgbquantil": [12, 14], "mlflow_tracking_uri": [12, 17], "experiment_nam": 12, "hyperparameter_optimization_onli": 12, "ag": [12, 20], "experi": 12, "predit": 12, "optimais": 12, "consid": [12, 22], "max_n_model": 12, "artifact_fold": [12, 17], "per": [12, 15, 20, 22], "incorpor": 12, "nativ": 12, "2152": 12, "model_spec": [12, 17], "phase": 12, "differ": [12, 15, 22, 23], "std": 12, "base_estim": 13, "group_column": 13, "n_job": [13, 14], "metaestimatormixin": 13, "meta": [13, 18], "groupbi": 13, "moreov": 13, "parallel": [13, 21], "thank": 13, "joblib": 13, "x0": 13, "x1": 13, "x3": 13, "x": [13, 14, 22], "maximum": [13, 19, 20], "concurr": 13, "worker": 13, "backend": 13, "multiprocess": 13, "size": [13, 22], "thread": 13, "pool": 13, "stock": 13, "eval_set": 13, "func": 13, "df_re": 13, "aggreg": 13, "group_r": 13, "gb": 13, "necessari": [13, 17], "take": [13, 17], "conrrespond": 13, "dataframegroupbi": 13, "handler": 13, "missing_valu": [13, 14], "imputation_strategi": [13, 14], "fill_valu": [13, 14], "exclus": 13, "imput": [13, 14], "transform": 13, "placehold": [13, 14], "occurr": [13, 14], "nullabl": [13, 14], "dtype": [13, 14], "sinc": [13, 14, 21], "na": [13, 14, 20, 22], "replac": [13, 14, 19, 22], "along": [13, 14], "median": [13, 14, 22], "most_frequ": [13, 14], "frequent": [13, 14], "than": [13, 14, 17, 20, 22, 23], "smallest": [13, 14], "left": [13, 14, 22], "simpleimput": 13, "missig": 13, "chain": 13, "custom_model_path": 14, "unseen": 14, "driven": 14, "plug": 14, "full": 14, "scale": 14, "separ": [14, 21], "domain_model_input": 14, "adaptation_model_input": 14, "expect": [14, 17, 20], "y_train": 14, "domain_model_input_column": 14, "adaptation_model_input_column": 14, "domain_model_test_data": 14, "adaptation_model_test_data": 14, "after": [14, 22], "truth": 14, "r2": 14, "boosting_typ": 14, "gbdt": 14, "num_leav": 14, "31": 14, "max_depth": 14, "learning_r": 14, "n_estim": 14, "subsample_for_bin": 14, "200000": 14, "class_weight": 14, "min_split_gain": 14, "min_child_weight": 14, "001": 14, "min_child_sampl": 14, "20": 14, "subsampl": 14, "subsample_freq": 14, "colsample_bytre": 14, "reg_alpha": 14, "reg_lambda": 14, "random_st": 14, "silent": 14, "warn": 14, "importance_typ": 14, "lgbmregressor": 14, "openstf": 14, "particular": 14, "retriev": [14, 18], "gain": 14, "wrap": 14, "ml": 14, "adher": 14, "abstractmethod": 14, "concret": 14, "definit": [14, 25], "common": [14, 17], "matrix": 14, "been": [14, 21], "reg": 14, "squarederror": 14, "xgbregressor": 14, "total_gain": 14, "9": 14, "gamma": 14, "6": [14, 20], "alpha": 14, "booster": 14, "feautur": 14, "feature_importance_": 14, "prefer": [14, 21], "n_fold": [15, 17], "stratification_min_max": 15, "randomize_fold_split": 15, "cross": [15, 17], "iter": [15, 21], "val": [15, 17], "lazi": 15, "avoid": 15, "copi": 15, "fold": [15, 17], "all_peak": 15, "k": 15, "sampl": 15, "secur": [15, 16], "sonar": 15, "accept": 15, "built": 15, "evenli": 15, "spread": 15, "clean": [15, 17, 22], "frame": [15, 17], "point": [15, 18], "data_": 15, "back_test": 15, "stratif": 15, "ratio": 15, "max": [15, 20, 22], "ensur": [15, 18], "repres": 15, "logger": 16, "name_checkpoint": 16, "log": [16, 20, 21, 22, 23], "runtim": 16, "self": [16, 23], "inner": 16, "wa": [16, 21], "level_label": 16, "level_nam": 16, "enter": [16, 21], "meter": 16, "could": [16, 22, 25], "tracy_todo": 16, "tabl": [16, 20, 22], "insert": [16, 20], "queri": 16, "statement": [16, 22], "titl": 16, "color": 16, "section_dict": 16, "card": 16, "section": [16, 23], "cardsect": 16, "msg": 16, "invalid_coeffici": 16, "coefficients_df": 16, "url": 16, "proxi": 16, "ktp": [16, 18], "authent": 16, "occur": 16, "keep": 16, "secret": [16, 23], "therefor": [16, 17, 23], "refrain": 16, "enhanc": 16, "button": 16, "simpl": [16, 18], "complex": 16, "support": 16, "text": 16, "imag": 16, "fact": 16, "markdown": 16, "microsoft": 16, "outlook": 16, "send": [16, 18, 20], "connector": [16, 23], "coeffici": [16, 20], "webhook": 16, "optinon": 16, "namespac": 16, "data_with_featur": 17, "weather_data": [17, 18], "windspeed_100m": [17, 18], "forecast_wind_on_shor": 17, "forecast_solar": 17, "forecast_oth": [17, 18], "algtyp": 17, "prepar": 17, "so": 17, "top": [17, 20], "track": 17, "core": 17, "persisit": 17, "n_trial": [17, 23], "raw": 17, "servic": 17, "artifact": 17, "input_d": 17, "best": [17, 20], "round": 17, "validated_data_with_featur": 17, "modelspec": [17, 23], "training_horizon": 17, "entir": 17, "kfold": 17, "testset": 17, "whole": 17, "done": [17, 23], "randomli": 17, "do": [17, 20], "NOT": 17, "FOR": 17, "check_old_model_ag": [17, 20], "middl": 17, "care": 17, "persist": [17, 20], "skip": [17, 20, 22], "old_model": [17, 23], "compar": 17, "fitted_model": 17, "datafrma": 17, "test_data_predefin": 17, "share": 17, "boolean": [17, 20], "predefin": 17, "forecast_data": 17, "cluster": 17, "null": 17, "2021": 17, "11": 17, "19": 17, "17": 17, "04": 17, "end": [17, 20, 22], "basecase_forecast": 18, "sum": 18, "glmd": 18, "correctli": 18, "tennet": 18, "algorithm_typ": 18, "forecast_qu": 18, "algirithm": 18, "speed": 18, "windenergi": 18, "windpow": 18, "cari": [18, 20], "consupt": 18, "split_coef": 18, "previous": 18, "coef": 18, "max_length": 19, "column_nam": 19, "sequenti": 19, "repeat": [19, 22], "abov": [19, 20, 22, 25], "build_graph_structur": [20, 21], "build_nx_graph": [20, 21], "find_group": [20, 21], "has_depend": [20, 21], "map": [20, 21], "kpi": 20, "prognos": 20, "folow": 20, "ignor": [20, 22], "splitenergi": 20, "meant": 20, "altern": 20, "predicted_load": 20, "inf": 20, "dictonari": 20, "t_ahead": 20, "enddat": 20, "window": 20, "clarif": 20, "To": [20, 23], "rmae": 20, "ahead": 20, "24h": 20, "context": [20, 21], "start_tim": 20, "end_tim": 20, "t_ahead_h": 20, "less": 20, "accur": 20, "almost": 20, "now": 20, "earlier": 20, "datapoint": 20, "interpol": 20, "k8": 20, "cronjob": [20, 23], "folder": 20, "On": 20, "manag": [20, 21], "resolv": 20, "contect": 20, "connect": [20, 23], "model_train": 20, "tdcv": 20, "someth": 20, "goe": 20, "contribut": 20, "add_to_df": 20, "hours_delta": 20, "polynomi": 20, "insol": 20, "pv": 20, "yield": 20, "2nd": 20, "hoursdelta": 20, "knmi": 20, "addtodf": 20, "norm": 20, "forecaopenstefitinsol": 20, "nb": 20, "300": 20, "8": 20, "loc": 20, "smooth_entri": 20, "4": 20, "colnam": 20, "script": 20, "well": [20, 23], "ab": 20, "smoothentri": 20, "entri": 20, "over": [20, 21], "smooth": 20, "combination_coef": 20, "independ": 20, "predetermin": 20, "algorithm1": 20, "algorithmn": 20, "combinationcoef": 20, "param1": 20, "paramn": 20, "all_forecast": 20, "radiu": 20, "peak_pow": 20, "180961000": 20, "optimize_hyper_param": 20, "prognosi": 20, "check_hyper_param_ag": 20, "exce": 20, "traci": 20, "todolist": 20, "tri": 20, "her": 20, "alreadi": [20, 21], "progress": 20, "acquir": 20, "interpret": 20, "abl": 20, "available_funct": 20, "jon": 20, "achiev": 20, "typic": 20, "domest": 20, "coefici": 20, "input_split_funct": 20, "coefdict": 20, "db": 20, "household": 20, "new_coef": 20, "last_coef": 20, "zero_bound": 20, "exactli": 20, "wind_ref": 20, "pv_ref": 20, "mulitpl": 20, "colum": 20, "retrain": 20, "slack": 20, "datetime_start": 20, "datetime_end": 20, "beast": 20, "graph": 21, "node": 21, "edg": 21, "networkx": 21, "digraph": 21, "randomize_group": 21, "treat": 21, "subgroup": 21, "stop_on_except": 21, "random_ord": 21, "on_exception_callback": 21, "on_successful_callback": 21, "on_end_callback": 21, "debug_pid": 21, "pj_kwarg": 21, "conveni": 21, "behaviour": 21, "tip": 21, "debug": 21, "specific_pid": 21, "loop": 21, "break": 21, "callback": 21, "everytim": 21, "willed": 21, "highli": 21, "suppress_except": 21, "post_teams_on_except": 21, "on_except": 21, "on_success": 21, "on_end": 21, "my_task_nam": 21, "encount": 21, "exc_typ": 21, "exc_info": 21, "stack_info": 21, "time_delai": 22, "homogenis": 22, "count": 22, "resampl": 22, "delta": 22, "excl": 22, "col": 22, "dataframa": 22, "load1": 22, "loadn": 22, "load_correct": 22, "lc_": 22, "threshold": 22, "stationflatlin": 22, "mani": 22, "timestep": 22, "moment": 22, "todo": 22, "lot": 22, "mnt": 22, "scipi": 22, "ndimag": 22, "flatliner_window": 22, "flatliner_load_threshold": 22, "compens": 22, "trafo": 22, "station": 22, "timedelta": 22, "big": 22, "timestamp": 22, "completeness_threshold": 22, "continu": 22, "anyth": 22, "suffici": 22, "pj_id": 22, "flatliner_threshold": 22, "longer": 22, "suggest": 22, "appear": 22, "observ": 22, "ind": 22, "identifi": 22, "repetit": 22, "mention": [23, 25], "extens": 23, "leverag": 23, "fuction": 23, "easier": 23, "wherea": 23, "offer": [23, 25], "flexibl": 23, "design": 23, "scalabl": 23, "illustr": 23, "snippet": 23, "below": 23, "show": [23, 25], "integr": 23, "let": 23, "tune": 23, "suppos": 23, "ran": [23, 25], "easi": [23, 25], "addition": 23, "reli": 23, "demonstr": [23, 25], "apart": [23, 25], "baseset": 23, "relevanyt": 23, "usernam": 23, "host": 23, "etc": 23, "sy": 23, "pathlib": 23, "openstef_dbc": 23, "def": 23, "configure_log": 23, "loglevel": 23, "runtime_env": 23, "env": 23, "__name__": 23, "__main__": 23, "kind": 23, "setup": [23, 25], "unlik": 23, "arguabl": 23, "neat": 23, "expos": 23, "fastapi": 23, "framework": 23, "pattern": 23, "openstefrepositori": 23, "interact": 23, "forecast_pipelin": 23, "wrapper": 23, "around": 23, "basecase_forecast_pipelin": 23, "train_pipelin": 23, "resourc": 25, "easiest": 25, "familiar": 25, "assort": 25, "aim": 25, "depth": 25, "those": 25, "who": 25, "wish": 25, "readi": 25, "screenshot": 25, "offlin": 25}, "objects": {"": [[8, 0, 0, "-", "openstef"]], "openstef": [[9, 0, 0, "-", "data_classes"], [8, 0, 0, "-", "enums"], [8, 0, 0, "-", "exceptions"], [10, 0, 0, "-", "feature_engineering"], [11, 0, 0, "-", "metrics"], [12, 0, 0, "-", "model"], [15, 0, 0, "-", "model_selection"], [16, 0, 0, "-", "monitoring"], [17, 0, 0, "-", "pipeline"], [18, 0, 0, "-", "postprocessing"], [19, 0, 0, "-", "preprocessing"], [20, 0, 0, "-", "tasks"], [22, 0, 0, "-", "validation"]], "openstef.data_classes": [[9, 0, 0, "-", "model_specifications"], [9, 0, 0, "-", "prediction_job"], [9, 0, 0, "-", "split_function"]], "openstef.data_classes.model_specifications": [[9, 1, 1, "", "ModelSpecificationDataClass"]], "openstef.data_classes.model_specifications.ModelSpecificationDataClass": [[9, 2, 1, "", "feature_modules"], [9, 2, 1, "", "feature_names"], [9, 2, 1, "", "hyper_params"], [9, 2, 1, "", "id"]], "openstef.data_classes.prediction_job": [[9, 1, 1, "", "PredictionJobDataClass"]], "openstef.data_classes.prediction_job.PredictionJobDataClass": [[9, 1, 1, "", "Config"], [9, 2, 1, "", "alternative_forecast_model_pid"], [9, 2, 1, "", "backtest_split_func"], [9, 2, 1, "", "completeness_treshold"], [9, 2, 1, "", "default_modelspecs"], [9, 2, 1, "", "depends_on"], [9, 2, 1, "", "description"], [9, 2, 1, "", "flatliner_treshold"], [9, 2, 1, "", "forecast_type"], [9, 3, 1, "", "get"], [9, 2, 1, "", "horizon_minutes"], [9, 2, 1, "", "hub_height"], [9, 2, 1, "", "id"], [9, 2, 1, "", "lat"], [9, 2, 1, "", "lon"], [9, 2, 1, "", "minimal_table_length"], [9, 2, 1, "", "model"], [9, 2, 1, "", "n_turbines"], [9, 2, 1, "", "name"], [9, 2, 1, "", "pipelines_to_run"], [9, 2, 1, "", "quantiles"], [9, 2, 1, "", "resolution_minutes"], [9, 2, 1, "", "save_train_forecasts"], [9, 2, 1, "", "sid"], [9, 2, 1, "", "train_components"], [9, 2, 1, "", "train_horizons_minutes"], [9, 2, 1, "", "train_split_func"], [9, 2, 1, "", "turbine_type"]], "openstef.data_classes.prediction_job.PredictionJobDataClass.Config": [[9, 2, 1, "", "smart_union"]], "openstef.data_classes.split_function": [[9, 1, 1, "", "SplitFuncDataClass"]], "openstef.data_classes.split_function.SplitFuncDataClass": [[9, 2, 1, "", "arguments"], [9, 2, 1, "", "function"], [9, 3, 1, "", "load"]], "openstef.enums": [[8, 1, 1, "", "ForecastType"], [8, 1, 1, "", "MLModelType"], [8, 1, 1, "", "PipelineType"], [8, 1, 1, "", "TracyJobResult"]], "openstef.enums.ForecastType": [[8, 2, 1, "", "BASECASE"], [8, 2, 1, "", "DEMAND"], [8, 2, 1, "", "SOLAR"], [8, 2, 1, "", "WIND"]], "openstef.enums.MLModelType": [[8, 2, 1, "", "LGB"], [8, 2, 1, "", "LINEAR"], [8, 2, 1, "", "ProLoaf"], [8, 2, 1, "", "XGB"], [8, 2, 1, "", "XGB_QUANTILE"]], "openstef.enums.PipelineType": [[8, 2, 1, "", "FORECAST"], [8, 2, 1, "", "HYPER_PARMATERS"], [8, 2, 1, "", "TRAIN"]], "openstef.enums.TracyJobResult": [[8, 2, 1, "", "FAILED"], [8, 2, 1, "", "SUCCESS"], [8, 2, 1, "", "UNKNOWN"]], "openstef.exceptions": [[8, 4, 1, "", "ComponentForecastTooShortHorizonError"], [8, 4, 1, "", "InputDataInsufficientError"], [8, 4, 1, "", "InputDataInvalidError"], [8, 4, 1, "", "InputDataWrongColumnOrderError"], [8, 4, 1, "", "ModelWithoutStDev"], [8, 4, 1, "", "NoPredictedLoadError"], [8, 4, 1, "", "NoRealisedLoadError"], [8, 4, 1, "", "OldModelHigherScoreError"], [8, 4, 1, "", "PredictionJobException"], [8, 4, 1, "", "SkipSaveTrainingForecasts"]], "openstef.feature_engineering": [[10, 0, 0, "-", "apply_features"], [10, 0, 0, "-", "feature_adder"], [10, 0, 0, "-", "feature_applicator"], [10, 0, 0, "-", "general"], [10, 0, 0, "-", "historic_features"], [10, 0, 0, "-", "holiday_features"], [10, 0, 0, "-", "lag_features"], [10, 0, 0, "-", "weather_features"]], "openstef.feature_engineering.apply_features": [[10, 5, 1, "", "apply_features"]], "openstef.feature_engineering.feature_adder": [[10, 1, 1, "", "FeatureAdder"], [10, 1, 1, "", "FeatureDispatcher"], [10, 1, 1, "", "ParsedFeature"], [10, 5, 1, "", "adders_from_module"], [10, 5, 1, "", "adders_from_modules"]], "openstef.feature_engineering.feature_adder.FeatureAdder": [[10, 3, 1, "", "apply_features"], [10, 6, 1, "", "name"], [10, 3, 1, "", "parse_feature_name"], [10, 3, 1, "", "required_features"]], "openstef.feature_engineering.feature_adder.FeatureDispatcher": [[10, 3, 1, "", "apply_features"], [10, 3, 1, "", "dispatch_features"]], "openstef.feature_engineering.feature_adder.ParsedFeature": [[10, 2, 1, "", "name"], [10, 2, 1, "", "params"]], "openstef.feature_engineering.feature_applicator": [[10, 1, 1, "", "AbstractFeatureApplicator"], [10, 1, 1, "", "OperationalPredictFeatureApplicator"], [10, 1, 1, "", "TrainFeatureApplicator"]], "openstef.feature_engineering.feature_applicator.AbstractFeatureApplicator": [[10, 3, 1, "", "add_features"]], "openstef.feature_engineering.feature_applicator.OperationalPredictFeatureApplicator": [[10, 3, 1, "", "add_features"]], "openstef.feature_engineering.feature_applicator.TrainFeatureApplicator": [[10, 3, 1, "", "add_features"]], "openstef.feature_engineering.general": [[10, 5, 1, "", "add_missing_feature_columns"], [10, 5, 1, "", "enforce_feature_order"], [10, 5, 1, "", "remove_non_requested_feature_columns"]], "openstef.feature_engineering.historic_features": [[10, 5, 1, "", "add_historic_load_as_a_feature"]], "openstef.feature_engineering.holiday_features": [[10, 5, 1, "", "check_for_bridge_day"], [10, 5, 1, "", "generate_holiday_feature_functions"]], "openstef.feature_engineering.lag_features": [[10, 5, 1, "", "extract_lag_features"], [10, 5, 1, "", "generate_lag_feature_functions"], [10, 5, 1, "", "generate_non_trivial_lag_times"], [10, 5, 1, "", "generate_trivial_lag_features"]], "openstef.feature_engineering.weather_features": [[10, 5, 1, "", "add_additional_solar_features"], [10, 5, 1, "", "add_additional_wind_features"], [10, 5, 1, "", "add_humidity_features"], [10, 5, 1, "", "calc_air_density"], [10, 5, 1, "", "calc_dewpoint"], [10, 5, 1, "", "calc_saturation_pressure"], [10, 5, 1, "", "calc_vapour_pressure"], [10, 5, 1, "", "calculate_dni"], [10, 5, 1, "", "calculate_gti"], [10, 5, 1, "", "calculate_windspeed_at_hubheight"], [10, 5, 1, "", "calculate_windturbine_power_output"], [10, 5, 1, "", "humidity_calculations"]], "openstef.metrics": [[11, 0, 0, "-", "figure"], [11, 0, 0, "-", "metrics"], [11, 0, 0, "-", "reporter"]], "openstef.metrics.figure": [[11, 5, 1, "", "convert_to_base64_data_uri"], [11, 5, 1, "", "plot_data_series"], [11, 5, 1, "", "plot_feature_importance"]], "openstef.metrics.metrics": [[11, 5, 1, "", "bias"], [11, 5, 1, "", "frac_in_stdev"], [11, 5, 1, "", "franks_skill_score"], [11, 5, 1, "", "franks_skill_score_peaks"], [11, 5, 1, "", "get_eval_metric_function"], [11, 5, 1, "", "mae"], [11, 5, 1, "", "nsme"], [11, 5, 1, "", "r_mae"], [11, 5, 1, "", "r_mae_highest"], [11, 5, 1, "", "r_mae_lowest"], [11, 5, 1, "", "r_mne_highest"], [11, 5, 1, "", "r_mpe_highest"], [11, 5, 1, "", "rmse"], [11, 5, 1, "", "skill_score"], [11, 5, 1, "", "skill_score_positive_peaks"], [11, 5, 1, "", "xgb_quantile_eval"], [11, 5, 1, "", "xgb_quantile_obj"]], "openstef.metrics.reporter": [[11, 1, 1, "", "Report"], [11, 1, 1, "", "Reporter"]], "openstef.metrics.reporter.Reporter": [[11, 3, 1, "", "generate_report"], [11, 3, 1, "", "get_metrics"], [11, 3, 1, "", "write_report_to_disk"]], "openstef.model": [[12, 0, 0, "-", "basecase"], [12, 0, 0, "-", "confidence_interval_applicator"], [12, 0, 0, "-", "fallback"], [13, 0, 0, "-", "metamodels"], [12, 0, 0, "-", "model_creator"], [12, 0, 0, "-", "objective"], [12, 0, 0, "-", "objective_creator"], [14, 0, 0, "-", "regressors"], [12, 0, 0, "-", "serializer"], [12, 0, 0, "-", "standard_deviation_generator"]], "openstef.model.basecase": [[12, 1, 1, "", "BaseCaseModel"]], "openstef.model.basecase.BaseCaseModel": [[12, 6, 1, "", "can_predict_quantiles"], [12, 3, 1, "", "fit"], [12, 3, 1, "", "make_basecase_forecast"], [12, 3, 1, "", "predict"]], "openstef.model.confidence_interval_applicator": [[12, 1, 1, "", "ConfidenceIntervalApplicator"]], "openstef.model.confidence_interval_applicator.ConfidenceIntervalApplicator": [[12, 3, 1, "", "add_confidence_interval"]], "openstef.model.fallback": [[12, 5, 1, "", "generate_fallback"]], "openstef.model.metamodels": [[13, 0, 0, "-", "grouped_regressor"], [13, 0, 0, "-", "missing_values_handler"]], "openstef.model.metamodels.grouped_regressor": [[13, 1, 1, "", "GroupedRegressor"]], "openstef.model.metamodels.grouped_regressor.GroupedRegressor": [[13, 2, 1, "", "estimators_"], [13, 2, 1, "", "feature_names_"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "grouped_compute"], [13, 3, 1, "", "predict"]], "openstef.model.metamodels.missing_values_handler": [[13, 1, 1, "", "MissingValuesHandler"]], "openstef.model.metamodels.missing_values_handler.MissingValuesHandler": [[13, 2, 1, "", "feature_importances_"], [13, 2, 1, "", "feature_names"], [13, 3, 1, "", "fit"], [13, 2, 1, "", "imputer_"], [13, 2, 1, "", "n_features_in_"], [13, 2, 1, "", "non_null_columns_"], [13, 2, 1, "", "pipeline_"], [13, 3, 1, "", "predict"], [13, 2, 1, "", "regressor_"]], "openstef.model.model_creator": [[12, 1, 1, "", "ModelCreator"]], "openstef.model.model_creator.ModelCreator": [[12, 2, 1, "", "MODEL_CONSTRUCTORS"], [12, 3, 1, "", "create_model"]], "openstef.model.objective": [[12, 1, 1, "", "LGBRegressorObjective"], [12, 1, 1, "", "LinearRegressorObjective"], [12, 1, 1, "", "ProLoafRegressorObjective"], [12, 1, 1, "", "RegressorObjective"], [12, 1, 1, "", "XGBQuantileRegressorObjective"], [12, 1, 1, "", "XGBRegressorObjective"]], "openstef.model.objective.LGBRegressorObjective": [[12, 3, 1, "", "get_params"], [12, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective.LinearRegressorObjective": [[12, 3, 1, "", "get_params"]], "openstef.model.objective.ProLoafRegressorObjective": [[12, 3, 1, "", "get_params"], [12, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective.RegressorObjective": [[12, 3, 1, "", "create_report"], [12, 3, 1, "", "get_default_values"], [12, 3, 1, "", "get_params"], [12, 3, 1, "", "get_pruning_callback"], [12, 3, 1, "", "get_trial_track"]], "openstef.model.objective.XGBQuantileRegressorObjective": [[12, 3, 1, "", "get_params"], [12, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective.XGBRegressorObjective": [[12, 3, 1, "", "get_default_values"], [12, 3, 1, "", "get_params"], [12, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective_creator": [[12, 1, 1, "", "ObjectiveCreator"]], "openstef.model.objective_creator.ObjectiveCreator": [[12, 2, 1, "", "OBJECTIVES"], [12, 3, 1, "", "create_objective"]], "openstef.model.regressors": [[14, 0, 0, "-", "custom_regressor"], [14, 0, 0, "-", "dazls"], [14, 0, 0, "-", "lgbm"], [14, 0, 0, "-", "linear"], [14, 0, 0, "-", "regressor"], [14, 0, 0, "-", "xgb"], [14, 0, 0, "-", "xgb_quantile"]], "openstef.model.regressors.custom_regressor": [[14, 1, 1, "", "CustomOpenstfRegressor"], [14, 5, 1, "", "create_custom_objective"], [14, 5, 1, "", "is_custom_type"], [14, 5, 1, "", "load_custom_model"]], "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor": [[14, 6, 1, "", "objective"], [14, 3, 1, "", "valid_kwargs"]], "openstef.model.regressors.dazls": [[14, 1, 1, "", "Dazls"]], "openstef.model.regressors.dazls.Dazls": [[14, 3, 1, "", "fit"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"]], "openstef.model.regressors.lgbm": [[14, 1, 1, "", "LGBMOpenstfRegressor"]], "openstef.model.regressors.lgbm.LGBMOpenstfRegressor": [[14, 6, 1, "", "can_predict_quantiles"], [14, 6, 1, "", "feature_names"], [14, 2, 1, "", "gain_importance_name"], [14, 2, 1, "", "weight_importance_name"]], "openstef.model.regressors.linear": [[14, 1, 1, "", "LinearOpenstfRegressor"], [14, 1, 1, "", "LinearRegressor"]], "openstef.model.regressors.linear.LinearOpenstfRegressor": [[14, 6, 1, "", "can_predict_quantiles"], [14, 6, 1, "", "feature_names"], [14, 3, 1, "", "fit"]], "openstef.model.regressors.regressor": [[14, 1, 1, "", "OpenstfRegressor"]], "openstef.model.regressors.regressor.OpenstfRegressor": [[14, 6, 1, "", "can_predict_quantiles"], [14, 6, 1, "", "feature_names"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "score"], [14, 3, 1, "", "set_feature_importance"]], "openstef.model.regressors.xgb": [[14, 1, 1, "", "XGBOpenstfRegressor"]], "openstef.model.regressors.xgb.XGBOpenstfRegressor": [[14, 6, 1, "", "can_predict_quantiles"], [14, 6, 1, "", "feature_names"], [14, 2, 1, "", "gain_importance_name"], [14, 2, 1, "", "weight_importance_name"]], "openstef.model.regressors.xgb_quantile": [[14, 1, 1, "", "XGBQuantileOpenstfRegressor"]], "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor": [[14, 6, 1, "", "can_predict_quantiles"], [14, 6, 1, "", "feature_names"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "get_feature_importances_from_booster"], [14, 3, 1, "", "predict"]], "openstef.model.serializer": [[12, 1, 1, "", "MLflowSerializer"]], "openstef.model.serializer.MLflowSerializer": [[12, 3, 1, "", "get_model_age"], [12, 3, 1, "", "load_model"], [12, 3, 1, "", "remove_old_models"], [12, 3, 1, "", "save_model"]], "openstef.model.standard_deviation_generator": [[12, 1, 1, "", "StandardDeviationGenerator"]], "openstef.model.standard_deviation_generator.StandardDeviationGenerator": [[12, 3, 1, "", "generate_standard_deviation_data"]], "openstef.model_selection": [[15, 0, 0, "-", "model_selection"]], "openstef.model_selection.model_selection": [[15, 5, 1, "", "backtest_split_default"], [15, 5, 1, "", "group_kfold"], [15, 5, 1, "", "random_sample"], [15, 5, 1, "", "sample_indices_train_val"], [15, 5, 1, "", "split_data_train_validation_test"]], "openstef.monitoring": [[16, 0, 0, "-", "performance_meter"], [16, 0, 0, "-", "teams"]], "openstef.monitoring.performance_meter": [[16, 1, 1, "", "PerformanceMeter"]], "openstef.monitoring.performance_meter.PerformanceMeter": [[16, 3, 1, "", "checkpoint"], [16, 3, 1, "", "complete_level"], [16, 3, 1, "", "start_level"]], "openstef.monitoring.teams": [[16, 5, 1, "", "build_sql_query_string"], [16, 5, 1, "", "format_message"], [16, 5, 1, "", "get_card_section"], [16, 5, 1, "", "post_teams"]], "openstef.pipeline": [[17, 0, 0, "-", "create_basecase_forecast"], [17, 0, 0, "-", "create_component_forecast"], [17, 0, 0, "-", "create_forecast"], [17, 0, 0, "-", "optimize_hyperparameters"], [17, 0, 0, "-", "train_create_forecast_backtest"], [17, 0, 0, "-", "train_model"], [17, 0, 0, "-", "utils"]], "openstef.pipeline.create_basecase_forecast": [[17, 5, 1, "", "create_basecase_forecast_pipeline"], [17, 5, 1, "", "generate_basecase_confidence_interval"]], "openstef.pipeline.create_component_forecast": [[17, 5, 1, "", "create_components_forecast_pipeline"], [17, 5, 1, "", "create_input"]], "openstef.pipeline.create_forecast": [[17, 5, 1, "", "create_forecast_pipeline"], [17, 5, 1, "", "create_forecast_pipeline_core"]], "openstef.pipeline.optimize_hyperparameters": [[17, 5, 1, "", "optimize_hyperparameters_pipeline"], [17, 5, 1, "", "optimize_hyperparameters_pipeline_core"], [17, 5, 1, "", "optuna_optimization"]], "openstef.pipeline.train_create_forecast_backtest": [[17, 5, 1, "", "train_model_and_forecast_back_test"], [17, 5, 1, "", "train_model_and_forecast_test_core"]], "openstef.pipeline.train_model": [[17, 5, 1, "", "train_model_pipeline"], [17, 5, 1, "", "train_model_pipeline_core"], [17, 5, 1, "", "train_pipeline_common"], [17, 5, 1, "", "train_pipeline_step_compute_features"], [17, 5, 1, "", "train_pipeline_step_split_data"], [17, 5, 1, "", "train_pipeline_step_train_model"]], "openstef.pipeline.utils": [[17, 5, 1, "", "generate_forecast_datetime_range"]], "openstef.postprocessing": [[18, 0, 0, "-", "postprocessing"]], "openstef.postprocessing.postprocessing": [[18, 5, 1, "", "add_components_base_case_forecast"], [18, 5, 1, "", "add_prediction_job_properties_to_forecast"], [18, 5, 1, "", "calculate_wind_power"], [18, 5, 1, "", "normalize_and_convert_weather_data_for_splitting"], [18, 5, 1, "", "post_process_wind_solar"], [18, 5, 1, "", "split_forecast_in_components"]], "openstef.preprocessing": [[19, 0, 0, "-", "preprocessing"]], "openstef.preprocessing.preprocessing": [[19, 5, 1, "", "replace_repeated_values_with_nan"]], "openstef.tasks": [[20, 0, 0, "-", "calculate_kpi"], [20, 0, 0, "-", "create_basecase_forecast"], [20, 0, 0, "-", "create_components_forecast"], [20, 0, 0, "-", "create_forecast"], [20, 0, 0, "-", "create_solar_forecast"], [20, 0, 0, "-", "create_wind_forecast"], [20, 0, 0, "-", "optimize_hyperparameters"], [20, 0, 0, "-", "run_tracy"], [20, 0, 0, "-", "split_forecast"], [20, 0, 0, "-", "train_model"], [21, 0, 0, "-", "utils"]], "openstef.tasks.calculate_kpi": [[20, 5, 1, "", "calc_kpi_for_specific_pid"], [20, 5, 1, "", "check_kpi_task"], [20, 5, 1, "", "main"], [20, 5, 1, "", "set_incomplete_kpi_to_nan"]], "openstef.tasks.create_basecase_forecast": [[20, 5, 1, "", "create_basecase_forecast_task"], [20, 5, 1, "", "main"]], "openstef.tasks.create_components_forecast": [[20, 5, 1, "", "create_components_forecast_task"], [20, 5, 1, "", "main"]], "openstef.tasks.create_forecast": [[20, 5, 1, "", "create_forecast_task"], [20, 5, 1, "", "main"]], "openstef.tasks.create_solar_forecast": [[20, 5, 1, "", "apply_fit_insol"], [20, 5, 1, "", "apply_persistence"], [20, 5, 1, "", "calc_norm"], [20, 5, 1, "", "combine_forecasts"], [20, 5, 1, "", "fides"], [20, 5, 1, "", "main"], [20, 5, 1, "", "make_solar_prediction_pj"]], "openstef.tasks.create_wind_forecast": [[20, 5, 1, "", "main"], [20, 5, 1, "", "make_wind_forecast_pj"]], "openstef.tasks.optimize_hyperparameters": [[20, 5, 1, "", "main"], [20, 5, 1, "", "optimize_hyperparameters_task"]], "openstef.tasks.run_tracy": [[20, 5, 1, "", "main"], [20, 5, 1, "", "run_tracy"], [20, 5, 1, "", "run_tracy_job"]], "openstef.tasks.split_forecast": [[20, 5, 1, "", "convert_coefdict_to_coefsdf"], [20, 5, 1, "", "determine_invalid_coefs"], [20, 5, 1, "", "find_components"], [20, 5, 1, "", "main"], [20, 5, 1, "", "split_forecast_task"]], "openstef.tasks.train_model": [[20, 5, 1, "", "main"], [20, 5, 1, "", "train_model_task"]], "openstef.tasks.utils": [[21, 0, 0, "-", "dependencies"], [21, 0, 0, "-", "predictionjobloop"], [21, 0, 0, "-", "taskcontext"]], "openstef.tasks.utils.dependencies": [[21, 5, 1, "", "build_graph_structure"], [21, 5, 1, "", "build_nx_graph"], [21, 5, 1, "", "find_groups"], [21, 5, 1, "", "has_dependencies"]], "openstef.tasks.utils.predictionjobloop": [[21, 1, 1, "", "PredictionJobLoop"]], "openstef.tasks.utils.predictionjobloop.PredictionJobLoop": [[21, 3, 1, "", "map"]], "openstef.tasks.utils.taskcontext": [[21, 1, 1, "", "TaskContext"]], "openstef.validation": [[22, 0, 0, "-", "validation"]], "openstef.validation.validation": [[22, 5, 1, "", "calc_completeness_dataframe"], [22, 5, 1, "", "calc_completeness_features"], [22, 5, 1, "", "check_data_for_each_trafo"], [22, 5, 1, "", "drop_target_na"], [22, 5, 1, "", "find_nonzero_flatliner"], [22, 5, 1, "", "find_zero_flatliner"], [22, 5, 1, "", "is_data_sufficient"], [22, 5, 1, "", "validate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"about": 0, "openstef": [0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "featur": 0, "api": 1, "refer": 1, "commun": 2, "technic": 2, "steer": 2, "committe": 2, "roadmap": 2, "contribut": [2, 6], "support": 2, "concept": 3, "softwar": 3, "architectur": 3, "applic": [3, 25], "domain": [3, 5], "adapt": [3, 5], "zero": [3, 5], "shot": [3, 5], "learn": [3, 5], "sequenc": [3, 5], "dazl": [3, 5, 14], "overview": [3, 24], "relat": [3, 24], "databas": [3, 24], "schema": [3, 24], "welcom": 6, "document": 6, "more": 6, "licens": 6, "packag": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "subpackag": [8, 12, 20], "submodul": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "enum": 8, "modul": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "except": 8, "content": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "data_class": 9, "model_specif": 9, "prediction_job": 9, "split_funct": 9, "feature_engin": 10, "apply_featur": 10, "feature_add": 10, "feature_appl": 10, "gener": 10, "historic_featur": 10, "holiday_featur": 10, "lag_featur": 10, "weather_featur": 10, "metric": 11, "figur": 11, "report": 11, "model": [12, 13, 14, 23], "basecas": 12, "confidence_interval_appl": 12, "fallback": 12, "model_cr": 12, "object": 12, "objective_cr": 12, "serial": 12, "standard_deviation_gener": 12, "metamodel": 13, "grouped_regressor": 13, "missing_values_handl": 13, "regressor": 14, "custom_regressor": 14, "lgbm": 14, "linear": 14, "proloaf": 14, "xgb": 14, "xgb_quantil": 14, "model_select": 15, "monitor": 16, "performance_met": 16, "team": 16, "pipelin": [17, 23, 25], "create_basecase_forecast": [17, 20], "create_component_forecast": 17, "create_forecast": [17, 20], "optimize_hyperparamet": [17, 20], "train_create_forecast_backtest": 17, "train_model": [17, 20], "util": [17, 21], "postprocess": 18, "preprocess": 19, "task": [20, 21, 23], "calculate_kpi": 20, "create_components_forecast": 20, "create_solar_forecast": 20, "create_wind_forecast": 20, "run_traci": 20, "split_forecast": 20, "depend": 21, "predictionjobloop": 21, "taskcontext": 21, "valid": 22, "user": [23, 25], "guid": [23, 25], "implement": [23, 25], "train": 23, "creat": 23, "forecast": [23, 25], "optim": 23, "hyperparamet": 23, "compon": 23, "base": 23, "case": 23, "high": 25, "level": 25, "function": 25, "full": 25, "exampl": 25, "jupyt": 25, "notebook": 25}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"About OpenSTEF": [[0, "about-openstef"]], "Features:": [[0, "features"]], "API reference": [[1, "api-reference"]], "Community": [[2, "community"]], "Technical Steering Committee": [[2, "technical-steering-committee"]], "Roadmap": [[2, "roadmap"]], "Contributing": [[2, "contributing"], [6, "contributing"]], "Support": [[2, "support"]], "Concepts": [[3, "concepts"]], "Software architecture": [[3, "software-architecture"]], "Application architecture": [[3, "application-architecture"]], "Domain Adaptation for Zero Shot Learning in Sequence (DAZLS)": [[3, "domain-adaptation-for-zero-shot-learning-in-sequence-dazls"], [5, "domain-adaptation-for-zero-shot-learning-in-sequence-dazls"]], "Overview of relational database schema": [[3, "overview-of-relational-database-schema"], [24, "overview-of-relational-database-schema"]], "Welcome to the documentation of OpenSTEF!": [[6, "welcome-to-the-documentation-of-openstef"]], "More on OpenSTEF": [[6, "more-on-openstef"]], "License": [[6, "license"]], "openstef": [[7, "openstef"]], "openstef package": [[8, "openstef-package"]], "Subpackages": [[8, "subpackages"], [12, "subpackages"], [20, "subpackages"]], "Submodules": [[8, "submodules"], [9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"]], "openstef.enums module": [[8, "module-openstef.enums"]], "openstef.exceptions module": [[8, "module-openstef.exceptions"]], "Module contents": [[8, "module-openstef"], [9, "module-openstef.data_classes"], [10, "module-openstef.feature_engineering"], [11, "module-openstef.metrics"], [12, "module-openstef.model"], [13, "module-openstef.model.metamodels"], [14, "module-openstef.model.regressors"], [15, "module-openstef.model_selection"], [16, "module-openstef.monitoring"], [17, "module-openstef.pipeline"], [18, "module-openstef.postprocessing"], [19, "module-openstef.preprocessing"], [20, "module-openstef.tasks"], [21, "module-openstef.tasks.utils"], [22, "module-openstef.validation"]], "openstef.data_classes package": [[9, "openstef-data-classes-package"]], "openstef.data_classes.model_specifications module": [[9, "module-openstef.data_classes.model_specifications"]], "openstef.data_classes.prediction_job module": [[9, "module-openstef.data_classes.prediction_job"]], "openstef.data_classes.split_function module": [[9, "module-openstef.data_classes.split_function"]], "openstef.feature_engineering package": [[10, "openstef-feature-engineering-package"]], "openstef.feature_engineering.apply_features module": [[10, "module-openstef.feature_engineering.apply_features"]], "openstef.feature_engineering.feature_adder module": [[10, "module-openstef.feature_engineering.feature_adder"]], "openstef.feature_engineering.feature_applicator module": [[10, "module-openstef.feature_engineering.feature_applicator"]], "openstef.feature_engineering.general module": [[10, "module-openstef.feature_engineering.general"]], "openstef.feature_engineering.historic_features module": [[10, "module-openstef.feature_engineering.historic_features"]], "openstef.feature_engineering.holiday_features module": [[10, "module-openstef.feature_engineering.holiday_features"]], "openstef.feature_engineering.lag_features module": [[10, "module-openstef.feature_engineering.lag_features"]], "openstef.feature_engineering.weather_features module": [[10, "module-openstef.feature_engineering.weather_features"]], "openstef.metrics package": [[11, "openstef-metrics-package"]], "openstef.metrics.figure module": [[11, "module-openstef.metrics.figure"]], "openstef.metrics.metrics module": [[11, "module-openstef.metrics.metrics"]], "openstef.metrics.reporter module": [[11, "module-openstef.metrics.reporter"]], "openstef.model package": [[12, "openstef-model-package"]], "openstef.model.basecase module": [[12, "module-openstef.model.basecase"]], "openstef.model.confidence_interval_applicator module": [[12, "module-openstef.model.confidence_interval_applicator"]], "openstef.model.fallback module": [[12, "module-openstef.model.fallback"]], "openstef.model.model_creator module": [[12, "module-openstef.model.model_creator"]], "openstef.model.objective module": [[12, "module-openstef.model.objective"]], "openstef.model.objective_creator module": [[12, "module-openstef.model.objective_creator"]], "openstef.model.serializer module": [[12, "module-openstef.model.serializer"]], "openstef.model.standard_deviation_generator module": [[12, "module-openstef.model.standard_deviation_generator"]], "openstef.model.metamodels package": [[13, "openstef-model-metamodels-package"]], "openstef.model.metamodels.grouped_regressor module": [[13, "module-openstef.model.metamodels.grouped_regressor"]], "openstef.model.metamodels.missing_values_handler module": [[13, "module-openstef.model.metamodels.missing_values_handler"]], "openstef.model.regressors package": [[14, "openstef-model-regressors-package"]], "openstef.model.regressors.custom_regressor module": [[14, "module-openstef.model.regressors.custom_regressor"]], "openstef.model.regressors.dazls module": [[14, "module-openstef.model.regressors.dazls"]], "openstef.model.regressors.lgbm module": [[14, "module-openstef.model.regressors.lgbm"]], "openstef.model.regressors.linear module": [[14, "module-openstef.model.regressors.linear"]], "openstef.model.regressors.proloaf module": [[14, "openstef-model-regressors-proloaf-module"]], "openstef.model.regressors.regressor module": [[14, "module-openstef.model.regressors.regressor"]], "openstef.model.regressors.xgb module": [[14, "module-openstef.model.regressors.xgb"]], "openstef.model.regressors.xgb_quantile module": [[14, "module-openstef.model.regressors.xgb_quantile"]], "openstef.model_selection package": [[15, "openstef-model-selection-package"]], "openstef.model_selection.model_selection module": [[15, "module-openstef.model_selection.model_selection"]], "openstef.monitoring package": [[16, "openstef-monitoring-package"]], "openstef.monitoring.performance_meter module": [[16, "module-openstef.monitoring.performance_meter"]], "openstef.monitoring.teams module": [[16, "module-openstef.monitoring.teams"]], "openstef.pipeline package": [[17, "openstef-pipeline-package"]], "openstef.pipeline.create_basecase_forecast module": [[17, "module-openstef.pipeline.create_basecase_forecast"]], "openstef.pipeline.create_component_forecast module": [[17, "module-openstef.pipeline.create_component_forecast"]], "openstef.pipeline.create_forecast module": [[17, "module-openstef.pipeline.create_forecast"]], "openstef.pipeline.optimize_hyperparameters module": [[17, "module-openstef.pipeline.optimize_hyperparameters"]], "openstef.pipeline.train_create_forecast_backtest module": [[17, "module-openstef.pipeline.train_create_forecast_backtest"]], "openstef.pipeline.train_model module": [[17, "module-openstef.pipeline.train_model"]], "openstef.pipeline.utils module": [[17, "module-openstef.pipeline.utils"]], "openstef.postprocessing package": [[18, "openstef-postprocessing-package"]], "openstef.postprocessing.postprocessing module": [[18, "module-openstef.postprocessing.postprocessing"]], "openstef.preprocessing package": [[19, "openstef-preprocessing-package"]], "openstef.preprocessing.preprocessing module": [[19, "module-openstef.preprocessing.preprocessing"]], "openstef.tasks package": [[20, "openstef-tasks-package"]], "openstef.tasks.calculate_kpi module": [[20, "module-openstef.tasks.calculate_kpi"]], "openstef.tasks.create_basecase_forecast module": [[20, "module-openstef.tasks.create_basecase_forecast"]], "openstef.tasks.create_components_forecast module": [[20, "module-openstef.tasks.create_components_forecast"]], "openstef.tasks.create_forecast module": [[20, "module-openstef.tasks.create_forecast"]], "openstef.tasks.create_solar_forecast module": [[20, "module-openstef.tasks.create_solar_forecast"]], "openstef.tasks.create_wind_forecast module": [[20, "module-openstef.tasks.create_wind_forecast"]], "openstef.tasks.optimize_hyperparameters module": [[20, "module-openstef.tasks.optimize_hyperparameters"]], "openstef.tasks.run_tracy module": [[20, "module-openstef.tasks.run_tracy"]], "openstef.tasks.split_forecast module": [[20, "module-openstef.tasks.split_forecast"]], "openstef.tasks.train_model module": [[20, "module-openstef.tasks.train_model"]], "openstef.tasks.utils package": [[21, "openstef-tasks-utils-package"]], "openstef.tasks.utils.dependencies module": [[21, "module-openstef.tasks.utils.dependencies"]], "openstef.tasks.utils.predictionjobloop module": [[21, "module-openstef.tasks.utils.predictionjobloop"]], "openstef.tasks.utils.taskcontext module": [[21, "module-openstef.tasks.utils.taskcontext"]], "openstef.validation package": [[22, "openstef-validation-package"]], "openstef.validation.validation module": [[22, "module-openstef.validation.validation"]], "Pipelines user guide": [[23, "pipelines-user-guide"]], "Task implementation": [[23, "task-implementation"]], "Train model task implementation": [[23, "train-model-task-implementation"]], "Create forecast task implementation": [[23, "create-forecast-task-implementation"]], "Optimize hyperparameters task implementation": [[23, "optimize-hyperparameters-task-implementation"]], "Create components forecast task implementation": [[23, "create-components-forecast-task-implementation"]], "Create base case forecast task implementation": [[23, "create-base-case-forecast-task-implementation"]], "Pipeline implementation": [[23, "pipeline-implementation"]], "User guides": [[25, "user-guides"]], "Pipelines - high level functionality": [[25, "pipelines-high-level-functionality"]], "Forecasting application - full implementation": [[25, "forecasting-application-full-implementation"]], "Example Jupyter notebooks": [[25, "example-jupyter-notebooks"]]}, "indexentries": {"basecase (openstef.enums.forecasttype attribute)": [[8, "openstef.enums.ForecastType.BASECASE"]], "componentforecasttooshorthorizonerror": [[8, "openstef.exceptions.ComponentForecastTooShortHorizonError"]], "demand (openstef.enums.forecasttype attribute)": [[8, "openstef.enums.ForecastType.DEMAND"]], "failed (openstef.enums.tracyjobresult attribute)": [[8, "openstef.enums.TracyJobResult.FAILED"]], "forecast (openstef.enums.pipelinetype attribute)": [[8, "openstef.enums.PipelineType.FORECAST"]], "forecasttype (class in openstef.enums)": [[8, "openstef.enums.ForecastType"]], "hyper_parmaters (openstef.enums.pipelinetype attribute)": [[8, "openstef.enums.PipelineType.HYPER_PARMATERS"]], "inputdatainsufficienterror": [[8, "openstef.exceptions.InputDataInsufficientError"]], "inputdatainvaliderror": [[8, "openstef.exceptions.InputDataInvalidError"]], "inputdatawrongcolumnordererror": [[8, "openstef.exceptions.InputDataWrongColumnOrderError"]], "lgb (openstef.enums.mlmodeltype attribute)": [[8, "openstef.enums.MLModelType.LGB"]], "linear (openstef.enums.mlmodeltype attribute)": [[8, "openstef.enums.MLModelType.LINEAR"]], "mlmodeltype (class in openstef.enums)": [[8, "openstef.enums.MLModelType"]], "modelwithoutstdev": [[8, "openstef.exceptions.ModelWithoutStDev"]], "nopredictedloaderror": [[8, "openstef.exceptions.NoPredictedLoadError"]], "norealisedloaderror": [[8, "openstef.exceptions.NoRealisedLoadError"]], "oldmodelhigherscoreerror": [[8, "openstef.exceptions.OldModelHigherScoreError"]], "pipelinetype (class in openstef.enums)": [[8, "openstef.enums.PipelineType"]], "predictionjobexception": [[8, "openstef.exceptions.PredictionJobException"]], "proloaf (openstef.enums.mlmodeltype attribute)": [[8, "openstef.enums.MLModelType.ProLoaf"]], "solar (openstef.enums.forecasttype attribute)": [[8, "openstef.enums.ForecastType.SOLAR"]], "success (openstef.enums.tracyjobresult attribute)": [[8, "openstef.enums.TracyJobResult.SUCCESS"]], "skipsavetrainingforecasts": [[8, "openstef.exceptions.SkipSaveTrainingForecasts"]], "train (openstef.enums.pipelinetype attribute)": [[8, "openstef.enums.PipelineType.TRAIN"]], "tracyjobresult (class in openstef.enums)": [[8, "openstef.enums.TracyJobResult"]], "unknown (openstef.enums.tracyjobresult attribute)": [[8, "openstef.enums.TracyJobResult.UNKNOWN"]], "wind (openstef.enums.forecasttype attribute)": [[8, "openstef.enums.ForecastType.WIND"]], "xgb (openstef.enums.mlmodeltype attribute)": [[8, "openstef.enums.MLModelType.XGB"]], "xgb_quantile (openstef.enums.mlmodeltype attribute)": [[8, "openstef.enums.MLModelType.XGB_QUANTILE"]], "module": [[8, "module-openstef"], [8, "module-openstef.enums"], [8, "module-openstef.exceptions"], [9, "module-openstef.data_classes"], [9, "module-openstef.data_classes.model_specifications"], [9, "module-openstef.data_classes.prediction_job"], [9, "module-openstef.data_classes.split_function"], [10, "module-openstef.feature_engineering"], [10, "module-openstef.feature_engineering.apply_features"], [10, "module-openstef.feature_engineering.feature_adder"], [10, "module-openstef.feature_engineering.feature_applicator"], [10, "module-openstef.feature_engineering.general"], [10, "module-openstef.feature_engineering.historic_features"], [10, "module-openstef.feature_engineering.holiday_features"], [10, "module-openstef.feature_engineering.lag_features"], [10, "module-openstef.feature_engineering.weather_features"], [11, "module-openstef.metrics"], [11, "module-openstef.metrics.figure"], [11, "module-openstef.metrics.metrics"], [11, "module-openstef.metrics.reporter"], [12, "module-openstef.model"], [12, "module-openstef.model.basecase"], [12, "module-openstef.model.confidence_interval_applicator"], [12, "module-openstef.model.fallback"], [12, "module-openstef.model.model_creator"], [12, "module-openstef.model.objective"], [12, "module-openstef.model.objective_creator"], [12, "module-openstef.model.serializer"], [12, "module-openstef.model.standard_deviation_generator"], [13, "module-openstef.model.metamodels"], [13, "module-openstef.model.metamodels.grouped_regressor"], [13, "module-openstef.model.metamodels.missing_values_handler"], [14, "module-openstef.model.regressors"], [14, "module-openstef.model.regressors.custom_regressor"], [14, "module-openstef.model.regressors.dazls"], [14, "module-openstef.model.regressors.lgbm"], [14, "module-openstef.model.regressors.linear"], [14, "module-openstef.model.regressors.regressor"], [14, "module-openstef.model.regressors.xgb"], [14, "module-openstef.model.regressors.xgb_quantile"], [15, "module-openstef.model_selection"], [15, "module-openstef.model_selection.model_selection"], [16, "module-openstef.monitoring"], [16, "module-openstef.monitoring.performance_meter"], [16, "module-openstef.monitoring.teams"], [17, "module-openstef.pipeline"], [17, "module-openstef.pipeline.create_basecase_forecast"], [17, "module-openstef.pipeline.create_component_forecast"], [17, "module-openstef.pipeline.create_forecast"], [17, "module-openstef.pipeline.optimize_hyperparameters"], [17, "module-openstef.pipeline.train_create_forecast_backtest"], [17, "module-openstef.pipeline.train_model"], [17, "module-openstef.pipeline.utils"], [18, "module-openstef.postprocessing"], [18, "module-openstef.postprocessing.postprocessing"], [19, "module-openstef.preprocessing"], [19, "module-openstef.preprocessing.preprocessing"], [20, "module-openstef.tasks"], [20, "module-openstef.tasks.calculate_kpi"], [20, "module-openstef.tasks.create_basecase_forecast"], [20, "module-openstef.tasks.create_components_forecast"], [20, "module-openstef.tasks.create_forecast"], [20, "module-openstef.tasks.create_solar_forecast"], [20, "module-openstef.tasks.create_wind_forecast"], [20, "module-openstef.tasks.optimize_hyperparameters"], [20, "module-openstef.tasks.run_tracy"], [20, "module-openstef.tasks.split_forecast"], [20, "module-openstef.tasks.train_model"], [21, "module-openstef.tasks.utils"], [21, "module-openstef.tasks.utils.dependencies"], [21, "module-openstef.tasks.utils.predictionjobloop"], [21, "module-openstef.tasks.utils.taskcontext"], [22, "module-openstef.validation"], [22, "module-openstef.validation.validation"]], "openstef": [[8, "module-openstef"]], "openstef.enums": [[8, "module-openstef.enums"]], "openstef.exceptions": [[8, "module-openstef.exceptions"]], "modelspecificationdataclass (class in openstef.data_classes.model_specifications)": [[9, "openstef.data_classes.model_specifications.ModelSpecificationDataClass"]], "predictionjobdataclass (class in openstef.data_classes.prediction_job)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass"]], "predictionjobdataclass.config (class in openstef.data_classes.prediction_job)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.Config"]], "splitfuncdataclass (class in openstef.data_classes.split_function)": [[9, "openstef.data_classes.split_function.SplitFuncDataClass"]], "alternative_forecast_model_pid (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.alternative_forecast_model_pid"]], "arguments (openstef.data_classes.split_function.splitfuncdataclass attribute)": [[9, "openstef.data_classes.split_function.SplitFuncDataClass.arguments"]], "backtest_split_func (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.backtest_split_func"]], "completeness_treshold (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.completeness_treshold"]], "default_modelspecs (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.default_modelspecs"]], "depends_on (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.depends_on"]], "description (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.description"]], "feature_modules (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[9, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.feature_modules"]], "feature_names (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[9, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.feature_names"]], "flatliner_treshold (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.flatliner_treshold"]], "forecast_type (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.forecast_type"]], "function (openstef.data_classes.split_function.splitfuncdataclass attribute)": [[9, "openstef.data_classes.split_function.SplitFuncDataClass.function"]], "get() (openstef.data_classes.prediction_job.predictionjobdataclass method)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.get"]], "horizon_minutes (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.horizon_minutes"]], "hub_height (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.hub_height"]], "hyper_params (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[9, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.hyper_params"]], "id (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[9, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.id"]], "id (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.id"]], "lat (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.lat"]], "load() (openstef.data_classes.split_function.splitfuncdataclass method)": [[9, "openstef.data_classes.split_function.SplitFuncDataClass.load"]], "lon (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.lon"]], "minimal_table_length (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.minimal_table_length"]], "model (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.model"]], "n_turbines (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.n_turbines"]], "name (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.name"]], "openstef.data_classes": [[9, "module-openstef.data_classes"]], "openstef.data_classes.model_specifications": [[9, "module-openstef.data_classes.model_specifications"]], "openstef.data_classes.prediction_job": [[9, "module-openstef.data_classes.prediction_job"]], "openstef.data_classes.split_function": [[9, "module-openstef.data_classes.split_function"]], "pipelines_to_run (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.pipelines_to_run"]], "quantiles (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.quantiles"]], "resolution_minutes (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.resolution_minutes"]], "save_train_forecasts (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.save_train_forecasts"]], "sid (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.sid"]], "smart_union (openstef.data_classes.prediction_job.predictionjobdataclass.config attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.Config.smart_union"]], "train_components (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.train_components"]], "train_horizons_minutes (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.train_horizons_minutes"]], "train_split_func (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.train_split_func"]], "turbine_type (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[9, "openstef.data_classes.prediction_job.PredictionJobDataClass.turbine_type"]], "abstractfeatureapplicator (class in openstef.feature_engineering.feature_applicator)": [[10, "openstef.feature_engineering.feature_applicator.AbstractFeatureApplicator"]], "featureadder (class in openstef.feature_engineering.feature_adder)": [[10, "openstef.feature_engineering.feature_adder.FeatureAdder"]], "featuredispatcher (class in openstef.feature_engineering.feature_adder)": [[10, "openstef.feature_engineering.feature_adder.FeatureDispatcher"]], "operationalpredictfeatureapplicator (class in openstef.feature_engineering.feature_applicator)": [[10, "openstef.feature_engineering.feature_applicator.OperationalPredictFeatureApplicator"]], "parsedfeature (class in openstef.feature_engineering.feature_adder)": [[10, "openstef.feature_engineering.feature_adder.ParsedFeature"]], "trainfeatureapplicator (class in openstef.feature_engineering.feature_applicator)": [[10, "openstef.feature_engineering.feature_applicator.TrainFeatureApplicator"]], "add_additional_solar_features() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.add_additional_solar_features"]], "add_additional_wind_features() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.add_additional_wind_features"]], "add_features() (openstef.feature_engineering.feature_applicator.abstractfeatureapplicator method)": [[10, "openstef.feature_engineering.feature_applicator.AbstractFeatureApplicator.add_features"]], "add_features() (openstef.feature_engineering.feature_applicator.operationalpredictfeatureapplicator method)": [[10, "openstef.feature_engineering.feature_applicator.OperationalPredictFeatureApplicator.add_features"]], "add_features() (openstef.feature_engineering.feature_applicator.trainfeatureapplicator method)": [[10, "openstef.feature_engineering.feature_applicator.TrainFeatureApplicator.add_features"]], "add_historic_load_as_a_feature() (in module openstef.feature_engineering.historic_features)": [[10, "openstef.feature_engineering.historic_features.add_historic_load_as_a_feature"]], "add_humidity_features() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.add_humidity_features"]], "add_missing_feature_columns() (in module openstef.feature_engineering.general)": [[10, "openstef.feature_engineering.general.add_missing_feature_columns"]], "adders_from_module() (in module openstef.feature_engineering.feature_adder)": [[10, "openstef.feature_engineering.feature_adder.adders_from_module"]], "adders_from_modules() (in module openstef.feature_engineering.feature_adder)": [[10, "openstef.feature_engineering.feature_adder.adders_from_modules"]], "apply_features() (in module openstef.feature_engineering.apply_features)": [[10, "openstef.feature_engineering.apply_features.apply_features"]], "apply_features() (openstef.feature_engineering.feature_adder.featureadder method)": [[10, "openstef.feature_engineering.feature_adder.FeatureAdder.apply_features"]], "apply_features() (openstef.feature_engineering.feature_adder.featuredispatcher method)": [[10, "openstef.feature_engineering.feature_adder.FeatureDispatcher.apply_features"]], "calc_air_density() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.calc_air_density"]], "calc_dewpoint() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.calc_dewpoint"]], "calc_saturation_pressure() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.calc_saturation_pressure"]], "calc_vapour_pressure() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.calc_vapour_pressure"]], "calculate_dni() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.calculate_dni"]], "calculate_gti() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.calculate_gti"]], "calculate_windspeed_at_hubheight() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.calculate_windspeed_at_hubheight"]], "calculate_windturbine_power_output() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.calculate_windturbine_power_output"]], "check_for_bridge_day() (in module openstef.feature_engineering.holiday_features)": [[10, "openstef.feature_engineering.holiday_features.check_for_bridge_day"]], "dispatch_features() (openstef.feature_engineering.feature_adder.featuredispatcher method)": [[10, "openstef.feature_engineering.feature_adder.FeatureDispatcher.dispatch_features"]], "enforce_feature_order() (in module openstef.feature_engineering.general)": [[10, "openstef.feature_engineering.general.enforce_feature_order"]], "extract_lag_features() (in module openstef.feature_engineering.lag_features)": [[10, "openstef.feature_engineering.lag_features.extract_lag_features"]], "generate_holiday_feature_functions() (in module openstef.feature_engineering.holiday_features)": [[10, "openstef.feature_engineering.holiday_features.generate_holiday_feature_functions"]], "generate_lag_feature_functions() (in module openstef.feature_engineering.lag_features)": [[10, "openstef.feature_engineering.lag_features.generate_lag_feature_functions"]], "generate_non_trivial_lag_times() (in module openstef.feature_engineering.lag_features)": [[10, "openstef.feature_engineering.lag_features.generate_non_trivial_lag_times"]], "generate_trivial_lag_features() (in module openstef.feature_engineering.lag_features)": [[10, "openstef.feature_engineering.lag_features.generate_trivial_lag_features"]], "humidity_calculations() (in module openstef.feature_engineering.weather_features)": [[10, "openstef.feature_engineering.weather_features.humidity_calculations"]], "name (openstef.feature_engineering.feature_adder.featureadder property)": [[10, "openstef.feature_engineering.feature_adder.FeatureAdder.name"]], "name (openstef.feature_engineering.feature_adder.parsedfeature attribute)": [[10, "openstef.feature_engineering.feature_adder.ParsedFeature.name"]], "openstef.feature_engineering": [[10, "module-openstef.feature_engineering"]], "openstef.feature_engineering.apply_features": [[10, "module-openstef.feature_engineering.apply_features"]], "openstef.feature_engineering.feature_adder": [[10, "module-openstef.feature_engineering.feature_adder"]], "openstef.feature_engineering.feature_applicator": [[10, "module-openstef.feature_engineering.feature_applicator"]], "openstef.feature_engineering.general": [[10, "module-openstef.feature_engineering.general"]], "openstef.feature_engineering.historic_features": [[10, "module-openstef.feature_engineering.historic_features"]], "openstef.feature_engineering.holiday_features": [[10, "module-openstef.feature_engineering.holiday_features"]], "openstef.feature_engineering.lag_features": [[10, "module-openstef.feature_engineering.lag_features"]], "openstef.feature_engineering.weather_features": [[10, "module-openstef.feature_engineering.weather_features"]], "params (openstef.feature_engineering.feature_adder.parsedfeature attribute)": [[10, "openstef.feature_engineering.feature_adder.ParsedFeature.params"]], "parse_feature_name() (openstef.feature_engineering.feature_adder.featureadder method)": [[10, "openstef.feature_engineering.feature_adder.FeatureAdder.parse_feature_name"]], "remove_non_requested_feature_columns() (in module openstef.feature_engineering.general)": [[10, "openstef.feature_engineering.general.remove_non_requested_feature_columns"]], "required_features() (openstef.feature_engineering.feature_adder.featureadder method)": [[10, "openstef.feature_engineering.feature_adder.FeatureAdder.required_features"]], "report (class in openstef.metrics.reporter)": [[11, "openstef.metrics.reporter.Report"]], "reporter (class in openstef.metrics.reporter)": [[11, "openstef.metrics.reporter.Reporter"]], "bias() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.bias"]], "convert_to_base64_data_uri() (in module openstef.metrics.figure)": [[11, "openstef.metrics.figure.convert_to_base64_data_uri"]], "frac_in_stdev() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.frac_in_stdev"]], "franks_skill_score() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.franks_skill_score"]], "franks_skill_score_peaks() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.franks_skill_score_peaks"]], "generate_report() (openstef.metrics.reporter.reporter method)": [[11, "openstef.metrics.reporter.Reporter.generate_report"]], "get_eval_metric_function() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.get_eval_metric_function"]], "get_metrics() (openstef.metrics.reporter.reporter static method)": [[11, "openstef.metrics.reporter.Reporter.get_metrics"]], "mae() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.mae"]], "nsme() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.nsme"]], "openstef.metrics": [[11, "module-openstef.metrics"]], "openstef.metrics.figure": [[11, "module-openstef.metrics.figure"]], "openstef.metrics.metrics": [[11, "module-openstef.metrics.metrics"]], "openstef.metrics.reporter": [[11, "module-openstef.metrics.reporter"]], "plot_data_series() (in module openstef.metrics.figure)": [[11, "openstef.metrics.figure.plot_data_series"]], "plot_feature_importance() (in module openstef.metrics.figure)": [[11, "openstef.metrics.figure.plot_feature_importance"]], "r_mae() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.r_mae"]], "r_mae_highest() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.r_mae_highest"]], "r_mae_lowest() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.r_mae_lowest"]], "r_mne_highest() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.r_mne_highest"]], "r_mpe_highest() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.r_mpe_highest"]], "rmse() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.rmse"]], "skill_score() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.skill_score"]], "skill_score_positive_peaks() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.skill_score_positive_peaks"]], "write_report_to_disk() (openstef.metrics.reporter.reporter static method)": [[11, "openstef.metrics.reporter.Reporter.write_report_to_disk"]], "xgb_quantile_eval() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.xgb_quantile_eval"]], "xgb_quantile_obj() (in module openstef.metrics.metrics)": [[11, "openstef.metrics.metrics.xgb_quantile_obj"]], "basecasemodel (class in openstef.model.basecase)": [[12, "openstef.model.basecase.BaseCaseModel"]], "confidenceintervalapplicator (class in openstef.model.confidence_interval_applicator)": [[12, "openstef.model.confidence_interval_applicator.ConfidenceIntervalApplicator"]], "lgbregressorobjective (class in openstef.model.objective)": [[12, "openstef.model.objective.LGBRegressorObjective"]], "linearregressorobjective (class in openstef.model.objective)": [[12, "openstef.model.objective.LinearRegressorObjective"]], "mlflowserializer (class in openstef.model.serializer)": [[12, "openstef.model.serializer.MLflowSerializer"]], "model_constructors (openstef.model.model_creator.modelcreator attribute)": [[12, "openstef.model.model_creator.ModelCreator.MODEL_CONSTRUCTORS"]], "modelcreator (class in openstef.model.model_creator)": [[12, "openstef.model.model_creator.ModelCreator"]], "objectives (openstef.model.objective_creator.objectivecreator attribute)": [[12, "openstef.model.objective_creator.ObjectiveCreator.OBJECTIVES"]], "objectivecreator (class in openstef.model.objective_creator)": [[12, "openstef.model.objective_creator.ObjectiveCreator"]], "proloafregressorobjective (class in openstef.model.objective)": [[12, "openstef.model.objective.ProLoafRegressorObjective"]], "regressorobjective (class in openstef.model.objective)": [[12, "openstef.model.objective.RegressorObjective"]], "standarddeviationgenerator (class in openstef.model.standard_deviation_generator)": [[12, "openstef.model.standard_deviation_generator.StandardDeviationGenerator"]], "xgbquantileregressorobjective (class in openstef.model.objective)": [[12, "openstef.model.objective.XGBQuantileRegressorObjective"]], "xgbregressorobjective (class in openstef.model.objective)": [[12, "openstef.model.objective.XGBRegressorObjective"]], "add_confidence_interval() (openstef.model.confidence_interval_applicator.confidenceintervalapplicator method)": [[12, "openstef.model.confidence_interval_applicator.ConfidenceIntervalApplicator.add_confidence_interval"]], "can_predict_quantiles (openstef.model.basecase.basecasemodel property)": [[12, "openstef.model.basecase.BaseCaseModel.can_predict_quantiles"]], "create_model() (openstef.model.model_creator.modelcreator static method)": [[12, "openstef.model.model_creator.ModelCreator.create_model"]], "create_objective() (openstef.model.objective_creator.objectivecreator static method)": [[12, "openstef.model.objective_creator.ObjectiveCreator.create_objective"]], "create_report() (openstef.model.objective.regressorobjective method)": [[12, "openstef.model.objective.RegressorObjective.create_report"]], "fit() (openstef.model.basecase.basecasemodel method)": [[12, "openstef.model.basecase.BaseCaseModel.fit"]], "generate_fallback() (in module openstef.model.fallback)": [[12, "openstef.model.fallback.generate_fallback"]], "generate_standard_deviation_data() (openstef.model.standard_deviation_generator.standarddeviationgenerator method)": [[12, "openstef.model.standard_deviation_generator.StandardDeviationGenerator.generate_standard_deviation_data"]], "get_default_values() (openstef.model.objective.regressorobjective class method)": [[12, "openstef.model.objective.RegressorObjective.get_default_values"]], "get_default_values() (openstef.model.objective.xgbregressorobjective class method)": [[12, "openstef.model.objective.XGBRegressorObjective.get_default_values"]], "get_model_age() (openstef.model.serializer.mlflowserializer method)": [[12, "openstef.model.serializer.MLflowSerializer.get_model_age"]], "get_params() (openstef.model.objective.lgbregressorobjective method)": [[12, "openstef.model.objective.LGBRegressorObjective.get_params"]], "get_params() (openstef.model.objective.linearregressorobjective method)": [[12, "openstef.model.objective.LinearRegressorObjective.get_params"]], "get_params() (openstef.model.objective.proloafregressorobjective method)": [[12, "openstef.model.objective.ProLoafRegressorObjective.get_params"]], "get_params() (openstef.model.objective.regressorobjective method)": [[12, "openstef.model.objective.RegressorObjective.get_params"]], "get_params() (openstef.model.objective.xgbquantileregressorobjective method)": [[12, "openstef.model.objective.XGBQuantileRegressorObjective.get_params"]], "get_params() (openstef.model.objective.xgbregressorobjective method)": [[12, "openstef.model.objective.XGBRegressorObjective.get_params"]], "get_pruning_callback() (openstef.model.objective.lgbregressorobjective method)": [[12, "openstef.model.objective.LGBRegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.proloafregressorobjective method)": [[12, "openstef.model.objective.ProLoafRegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.regressorobjective method)": [[12, "openstef.model.objective.RegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.xgbquantileregressorobjective method)": [[12, "openstef.model.objective.XGBQuantileRegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.xgbregressorobjective method)": [[12, "openstef.model.objective.XGBRegressorObjective.get_pruning_callback"]], "get_trial_track() (openstef.model.objective.regressorobjective method)": [[12, "openstef.model.objective.RegressorObjective.get_trial_track"]], "load_model() (openstef.model.serializer.mlflowserializer method)": [[12, "openstef.model.serializer.MLflowSerializer.load_model"]], "make_basecase_forecast() (openstef.model.basecase.basecasemodel static method)": [[12, "openstef.model.basecase.BaseCaseModel.make_basecase_forecast"]], "openstef.model": [[12, "module-openstef.model"]], "openstef.model.basecase": [[12, "module-openstef.model.basecase"]], "openstef.model.confidence_interval_applicator": [[12, "module-openstef.model.confidence_interval_applicator"]], "openstef.model.fallback": [[12, "module-openstef.model.fallback"]], "openstef.model.model_creator": [[12, "module-openstef.model.model_creator"]], "openstef.model.objective": [[12, "module-openstef.model.objective"]], "openstef.model.objective_creator": [[12, "module-openstef.model.objective_creator"]], "openstef.model.serializer": [[12, "module-openstef.model.serializer"]], "openstef.model.standard_deviation_generator": [[12, "module-openstef.model.standard_deviation_generator"]], "predict() (openstef.model.basecase.basecasemodel method)": [[12, "openstef.model.basecase.BaseCaseModel.predict"]], "remove_old_models() (openstef.model.serializer.mlflowserializer method)": [[12, "openstef.model.serializer.MLflowSerializer.remove_old_models"]], "save_model() (openstef.model.serializer.mlflowserializer method)": [[12, "openstef.model.serializer.MLflowSerializer.save_model"]], "groupedregressor (class in openstef.model.metamodels.grouped_regressor)": [[13, "openstef.model.metamodels.grouped_regressor.GroupedRegressor"]], "missingvalueshandler (class in openstef.model.metamodels.missing_values_handler)": [[13, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler"]], "estimators_ (openstef.model.metamodels.grouped_regressor.groupedregressor attribute)": [[13, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.estimators_"]], "feature_importances_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[13, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.feature_importances_"]], "feature_names (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[13, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.feature_names"]], "feature_names_ (openstef.model.metamodels.grouped_regressor.groupedregressor attribute)": [[13, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.feature_names_"]], "fit() (openstef.model.metamodels.grouped_regressor.groupedregressor method)": [[13, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.fit"]], "fit() (openstef.model.metamodels.missing_values_handler.missingvalueshandler method)": [[13, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.fit"]], "grouped_compute() (openstef.model.metamodels.grouped_regressor.groupedregressor class method)": [[13, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.grouped_compute"]], "imputer_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[13, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.imputer_"]], "n_features_in_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[13, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.n_features_in_"]], "non_null_columns_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[13, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.non_null_columns_"]], "openstef.model.metamodels": [[13, "module-openstef.model.metamodels"]], "openstef.model.metamodels.grouped_regressor": [[13, "module-openstef.model.metamodels.grouped_regressor"]], "openstef.model.metamodels.missing_values_handler": [[13, "module-openstef.model.metamodels.missing_values_handler"]], "pipeline_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[13, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.pipeline_"]], "predict() (openstef.model.metamodels.grouped_regressor.groupedregressor method)": [[13, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.predict"]], "predict() (openstef.model.metamodels.missing_values_handler.missingvalueshandler method)": [[13, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.predict"]], "regressor_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[13, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.regressor_"]], "customopenstfregressor (class in openstef.model.regressors.custom_regressor)": [[14, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor"]], "dazls (class in openstef.model.regressors.dazls)": [[14, "openstef.model.regressors.dazls.Dazls"]], "lgbmopenstfregressor (class in openstef.model.regressors.lgbm)": [[14, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor"]], "linearopenstfregressor (class in openstef.model.regressors.linear)": [[14, "openstef.model.regressors.linear.LinearOpenstfRegressor"]], "linearregressor (class in openstef.model.regressors.linear)": [[14, "openstef.model.regressors.linear.LinearRegressor"]], "openstfregressor (class in openstef.model.regressors.regressor)": [[14, "openstef.model.regressors.regressor.OpenstfRegressor"]], "xgbopenstfregressor (class in openstef.model.regressors.xgb)": [[14, "openstef.model.regressors.xgb.XGBOpenstfRegressor"]], "xgbquantileopenstfregressor (class in openstef.model.regressors.xgb_quantile)": [[14, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor"]], "can_predict_quantiles (openstef.model.regressors.lgbm.lgbmopenstfregressor property)": [[14, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.linear.linearopenstfregressor property)": [[14, "openstef.model.regressors.linear.LinearOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.regressor.openstfregressor property)": [[14, "openstef.model.regressors.regressor.OpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.xgb.xgbopenstfregressor property)": [[14, "openstef.model.regressors.xgb.XGBOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor property)": [[14, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.can_predict_quantiles"]], "create_custom_objective() (in module openstef.model.regressors.custom_regressor)": [[14, "openstef.model.regressors.custom_regressor.create_custom_objective"]], "feature_names (openstef.model.regressors.lgbm.lgbmopenstfregressor property)": [[14, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.linear.linearopenstfregressor property)": [[14, "openstef.model.regressors.linear.LinearOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.regressor.openstfregressor property)": [[14, "openstef.model.regressors.regressor.OpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.xgb.xgbopenstfregressor property)": [[14, "openstef.model.regressors.xgb.XGBOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor property)": [[14, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.feature_names"]], "fit() (openstef.model.regressors.dazls.dazls method)": [[14, "openstef.model.regressors.dazls.Dazls.fit"]], "fit() (openstef.model.regressors.linear.linearopenstfregressor method)": [[14, "openstef.model.regressors.linear.LinearOpenstfRegressor.fit"]], "fit() (openstef.model.regressors.regressor.openstfregressor method)": [[14, "openstef.model.regressors.regressor.OpenstfRegressor.fit"]], "fit() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor method)": [[14, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.fit"]], "gain_importance_name (openstef.model.regressors.lgbm.lgbmopenstfregressor attribute)": [[14, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.gain_importance_name"]], "gain_importance_name (openstef.model.regressors.xgb.xgbopenstfregressor attribute)": [[14, "openstef.model.regressors.xgb.XGBOpenstfRegressor.gain_importance_name"]], "get_feature_importances_from_booster() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor class method)": [[14, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.get_feature_importances_from_booster"]], "is_custom_type() (in module openstef.model.regressors.custom_regressor)": [[14, "openstef.model.regressors.custom_regressor.is_custom_type"]], "load_custom_model() (in module openstef.model.regressors.custom_regressor)": [[14, "openstef.model.regressors.custom_regressor.load_custom_model"]], "objective (openstef.model.regressors.custom_regressor.customopenstfregressor property)": [[14, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor.objective"]], "openstef.model.regressors": [[14, "module-openstef.model.regressors"]], "openstef.model.regressors.custom_regressor": [[14, "module-openstef.model.regressors.custom_regressor"]], "openstef.model.regressors.dazls": [[14, "module-openstef.model.regressors.dazls"]], "openstef.model.regressors.lgbm": [[14, "module-openstef.model.regressors.lgbm"]], "openstef.model.regressors.linear": [[14, "module-openstef.model.regressors.linear"]], "openstef.model.regressors.regressor": [[14, "module-openstef.model.regressors.regressor"]], "openstef.model.regressors.xgb": [[14, "module-openstef.model.regressors.xgb"]], "openstef.model.regressors.xgb_quantile": [[14, "module-openstef.model.regressors.xgb_quantile"]], "predict() (openstef.model.regressors.dazls.dazls method)": [[14, "openstef.model.regressors.dazls.Dazls.predict"]], "predict() (openstef.model.regressors.regressor.openstfregressor method)": [[14, "openstef.model.regressors.regressor.OpenstfRegressor.predict"]], "predict() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor method)": [[14, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.predict"]], "score() (openstef.model.regressors.dazls.dazls method)": [[14, "openstef.model.regressors.dazls.Dazls.score"]], "score() (openstef.model.regressors.regressor.openstfregressor method)": [[14, "openstef.model.regressors.regressor.OpenstfRegressor.score"]], "set_feature_importance() (openstef.model.regressors.regressor.openstfregressor method)": [[14, "openstef.model.regressors.regressor.OpenstfRegressor.set_feature_importance"]], "valid_kwargs() (openstef.model.regressors.custom_regressor.customopenstfregressor static method)": [[14, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor.valid_kwargs"]], "weight_importance_name (openstef.model.regressors.lgbm.lgbmopenstfregressor attribute)": [[14, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.weight_importance_name"]], "weight_importance_name (openstef.model.regressors.xgb.xgbopenstfregressor attribute)": [[14, "openstef.model.regressors.xgb.XGBOpenstfRegressor.weight_importance_name"]], "backtest_split_default() (in module openstef.model_selection.model_selection)": [[15, "openstef.model_selection.model_selection.backtest_split_default"]], "group_kfold() (in module openstef.model_selection.model_selection)": [[15, "openstef.model_selection.model_selection.group_kfold"]], "openstef.model_selection": [[15, "module-openstef.model_selection"]], "openstef.model_selection.model_selection": [[15, "module-openstef.model_selection.model_selection"]], "random_sample() (in module openstef.model_selection.model_selection)": [[15, "openstef.model_selection.model_selection.random_sample"]], "sample_indices_train_val() (in module openstef.model_selection.model_selection)": [[15, "openstef.model_selection.model_selection.sample_indices_train_val"]], "split_data_train_validation_test() (in module openstef.model_selection.model_selection)": [[15, "openstef.model_selection.model_selection.split_data_train_validation_test"]], "performancemeter (class in openstef.monitoring.performance_meter)": [[16, "openstef.monitoring.performance_meter.PerformanceMeter"]], "build_sql_query_string() (in module openstef.monitoring.teams)": [[16, "openstef.monitoring.teams.build_sql_query_string"]], "checkpoint() (openstef.monitoring.performance_meter.performancemeter method)": [[16, "openstef.monitoring.performance_meter.PerformanceMeter.checkpoint"]], "complete_level() (openstef.monitoring.performance_meter.performancemeter method)": [[16, "openstef.monitoring.performance_meter.PerformanceMeter.complete_level"]], "format_message() (in module openstef.monitoring.teams)": [[16, "openstef.monitoring.teams.format_message"]], "get_card_section() (in module openstef.monitoring.teams)": [[16, "openstef.monitoring.teams.get_card_section"]], "openstef.monitoring": [[16, "module-openstef.monitoring"]], "openstef.monitoring.performance_meter": [[16, "module-openstef.monitoring.performance_meter"]], "openstef.monitoring.teams": [[16, "module-openstef.monitoring.teams"]], "post_teams() (in module openstef.monitoring.teams)": [[16, "openstef.monitoring.teams.post_teams"]], "start_level() (openstef.monitoring.performance_meter.performancemeter method)": [[16, "openstef.monitoring.performance_meter.PerformanceMeter.start_level"]], "create_basecase_forecast_pipeline() (in module openstef.pipeline.create_basecase_forecast)": [[17, "openstef.pipeline.create_basecase_forecast.create_basecase_forecast_pipeline"]], "create_components_forecast_pipeline() (in module openstef.pipeline.create_component_forecast)": [[17, "openstef.pipeline.create_component_forecast.create_components_forecast_pipeline"]], "create_forecast_pipeline() (in module openstef.pipeline.create_forecast)": [[17, "openstef.pipeline.create_forecast.create_forecast_pipeline"]], "create_forecast_pipeline_core() (in module openstef.pipeline.create_forecast)": [[17, "openstef.pipeline.create_forecast.create_forecast_pipeline_core"]], "create_input() (in module openstef.pipeline.create_component_forecast)": [[17, "openstef.pipeline.create_component_forecast.create_input"]], "generate_basecase_confidence_interval() (in module openstef.pipeline.create_basecase_forecast)": [[17, "openstef.pipeline.create_basecase_forecast.generate_basecase_confidence_interval"]], "generate_forecast_datetime_range() (in module openstef.pipeline.utils)": [[17, "openstef.pipeline.utils.generate_forecast_datetime_range"]], "openstef.pipeline": [[17, "module-openstef.pipeline"]], "openstef.pipeline.create_basecase_forecast": [[17, "module-openstef.pipeline.create_basecase_forecast"]], "openstef.pipeline.create_component_forecast": [[17, "module-openstef.pipeline.create_component_forecast"]], "openstef.pipeline.create_forecast": [[17, "module-openstef.pipeline.create_forecast"]], "openstef.pipeline.optimize_hyperparameters": [[17, "module-openstef.pipeline.optimize_hyperparameters"]], "openstef.pipeline.train_create_forecast_backtest": [[17, "module-openstef.pipeline.train_create_forecast_backtest"]], "openstef.pipeline.train_model": [[17, "module-openstef.pipeline.train_model"]], "openstef.pipeline.utils": [[17, "module-openstef.pipeline.utils"]], "optimize_hyperparameters_pipeline() (in module openstef.pipeline.optimize_hyperparameters)": [[17, "openstef.pipeline.optimize_hyperparameters.optimize_hyperparameters_pipeline"]], "optimize_hyperparameters_pipeline_core() (in module openstef.pipeline.optimize_hyperparameters)": [[17, "openstef.pipeline.optimize_hyperparameters.optimize_hyperparameters_pipeline_core"]], "optuna_optimization() (in module openstef.pipeline.optimize_hyperparameters)": [[17, "openstef.pipeline.optimize_hyperparameters.optuna_optimization"]], "train_model_and_forecast_back_test() (in module openstef.pipeline.train_create_forecast_backtest)": [[17, "openstef.pipeline.train_create_forecast_backtest.train_model_and_forecast_back_test"]], "train_model_and_forecast_test_core() (in module openstef.pipeline.train_create_forecast_backtest)": [[17, "openstef.pipeline.train_create_forecast_backtest.train_model_and_forecast_test_core"]], "train_model_pipeline() (in module openstef.pipeline.train_model)": [[17, "openstef.pipeline.train_model.train_model_pipeline"]], "train_model_pipeline_core() (in module openstef.pipeline.train_model)": [[17, "openstef.pipeline.train_model.train_model_pipeline_core"]], "train_pipeline_common() (in module openstef.pipeline.train_model)": [[17, "openstef.pipeline.train_model.train_pipeline_common"]], "train_pipeline_step_compute_features() (in module openstef.pipeline.train_model)": [[17, "openstef.pipeline.train_model.train_pipeline_step_compute_features"]], "train_pipeline_step_split_data() (in module openstef.pipeline.train_model)": [[17, "openstef.pipeline.train_model.train_pipeline_step_split_data"]], "train_pipeline_step_train_model() (in module openstef.pipeline.train_model)": [[17, "openstef.pipeline.train_model.train_pipeline_step_train_model"]], "add_components_base_case_forecast() (in module openstef.postprocessing.postprocessing)": [[18, "openstef.postprocessing.postprocessing.add_components_base_case_forecast"]], "add_prediction_job_properties_to_forecast() (in module openstef.postprocessing.postprocessing)": [[18, "openstef.postprocessing.postprocessing.add_prediction_job_properties_to_forecast"]], "calculate_wind_power() (in module openstef.postprocessing.postprocessing)": [[18, "openstef.postprocessing.postprocessing.calculate_wind_power"]], "normalize_and_convert_weather_data_for_splitting() (in module openstef.postprocessing.postprocessing)": [[18, "openstef.postprocessing.postprocessing.normalize_and_convert_weather_data_for_splitting"]], "openstef.postprocessing": [[18, "module-openstef.postprocessing"]], "openstef.postprocessing.postprocessing": [[18, "module-openstef.postprocessing.postprocessing"]], "post_process_wind_solar() (in module openstef.postprocessing.postprocessing)": [[18, "openstef.postprocessing.postprocessing.post_process_wind_solar"]], "split_forecast_in_components() (in module openstef.postprocessing.postprocessing)": [[18, "openstef.postprocessing.postprocessing.split_forecast_in_components"]], "openstef.preprocessing": [[19, "module-openstef.preprocessing"]], "openstef.preprocessing.preprocessing": [[19, "module-openstef.preprocessing.preprocessing"]], "replace_repeated_values_with_nan() (in module openstef.preprocessing.preprocessing)": [[19, "openstef.preprocessing.preprocessing.replace_repeated_values_with_nan"]], "apply_fit_insol() (in module openstef.tasks.create_solar_forecast)": [[20, "openstef.tasks.create_solar_forecast.apply_fit_insol"]], "apply_persistence() (in module openstef.tasks.create_solar_forecast)": [[20, "openstef.tasks.create_solar_forecast.apply_persistence"]], "calc_kpi_for_specific_pid() (in module openstef.tasks.calculate_kpi)": [[20, "openstef.tasks.calculate_kpi.calc_kpi_for_specific_pid"]], "calc_norm() (in module openstef.tasks.create_solar_forecast)": [[20, "openstef.tasks.create_solar_forecast.calc_norm"]], "check_kpi_task() (in module openstef.tasks.calculate_kpi)": [[20, "openstef.tasks.calculate_kpi.check_kpi_task"]], "combine_forecasts() (in module openstef.tasks.create_solar_forecast)": [[20, "openstef.tasks.create_solar_forecast.combine_forecasts"]], "convert_coefdict_to_coefsdf() (in module openstef.tasks.split_forecast)": [[20, "openstef.tasks.split_forecast.convert_coefdict_to_coefsdf"]], "create_basecase_forecast_task() (in module openstef.tasks.create_basecase_forecast)": [[20, "openstef.tasks.create_basecase_forecast.create_basecase_forecast_task"]], "create_components_forecast_task() (in module openstef.tasks.create_components_forecast)": [[20, "openstef.tasks.create_components_forecast.create_components_forecast_task"]], "create_forecast_task() (in module openstef.tasks.create_forecast)": [[20, "openstef.tasks.create_forecast.create_forecast_task"]], "determine_invalid_coefs() (in module openstef.tasks.split_forecast)": [[20, "openstef.tasks.split_forecast.determine_invalid_coefs"]], "fides() (in module openstef.tasks.create_solar_forecast)": [[20, "openstef.tasks.create_solar_forecast.fides"]], "find_components() (in module openstef.tasks.split_forecast)": [[20, "openstef.tasks.split_forecast.find_components"]], "main() (in module openstef.tasks.calculate_kpi)": [[20, "openstef.tasks.calculate_kpi.main"]], "main() (in module openstef.tasks.create_basecase_forecast)": [[20, "openstef.tasks.create_basecase_forecast.main"]], "main() (in module openstef.tasks.create_components_forecast)": [[20, "openstef.tasks.create_components_forecast.main"]], "main() (in module openstef.tasks.create_forecast)": [[20, "openstef.tasks.create_forecast.main"]], "main() (in module openstef.tasks.create_solar_forecast)": [[20, "openstef.tasks.create_solar_forecast.main"]], "main() (in module openstef.tasks.create_wind_forecast)": [[20, "openstef.tasks.create_wind_forecast.main"]], "main() (in module openstef.tasks.optimize_hyperparameters)": [[20, "openstef.tasks.optimize_hyperparameters.main"]], "main() (in module openstef.tasks.run_tracy)": [[20, "openstef.tasks.run_tracy.main"]], "main() (in module openstef.tasks.split_forecast)": [[20, "openstef.tasks.split_forecast.main"]], "main() (in module openstef.tasks.train_model)": [[20, "openstef.tasks.train_model.main"]], "make_solar_prediction_pj() (in module openstef.tasks.create_solar_forecast)": [[20, "openstef.tasks.create_solar_forecast.make_solar_prediction_pj"]], "make_wind_forecast_pj() (in module openstef.tasks.create_wind_forecast)": [[20, "openstef.tasks.create_wind_forecast.make_wind_forecast_pj"]], "openstef.tasks": [[20, "module-openstef.tasks"]], "openstef.tasks.calculate_kpi": [[20, "module-openstef.tasks.calculate_kpi"]], "openstef.tasks.create_basecase_forecast": [[20, "module-openstef.tasks.create_basecase_forecast"]], "openstef.tasks.create_components_forecast": [[20, "module-openstef.tasks.create_components_forecast"]], "openstef.tasks.create_forecast": [[20, "module-openstef.tasks.create_forecast"]], "openstef.tasks.create_solar_forecast": [[20, "module-openstef.tasks.create_solar_forecast"]], "openstef.tasks.create_wind_forecast": [[20, "module-openstef.tasks.create_wind_forecast"]], "openstef.tasks.optimize_hyperparameters": [[20, "module-openstef.tasks.optimize_hyperparameters"]], "openstef.tasks.run_tracy": [[20, "module-openstef.tasks.run_tracy"]], "openstef.tasks.split_forecast": [[20, "module-openstef.tasks.split_forecast"]], "openstef.tasks.train_model": [[20, "module-openstef.tasks.train_model"]], "optimize_hyperparameters_task() (in module openstef.tasks.optimize_hyperparameters)": [[20, "openstef.tasks.optimize_hyperparameters.optimize_hyperparameters_task"]], "run_tracy() (in module openstef.tasks.run_tracy)": [[20, "openstef.tasks.run_tracy.run_tracy"]], "run_tracy_job() (in module openstef.tasks.run_tracy)": [[20, "openstef.tasks.run_tracy.run_tracy_job"]], "set_incomplete_kpi_to_nan() (in module openstef.tasks.calculate_kpi)": [[20, "openstef.tasks.calculate_kpi.set_incomplete_kpi_to_nan"]], "split_forecast_task() (in module openstef.tasks.split_forecast)": [[20, "openstef.tasks.split_forecast.split_forecast_task"]], "train_model_task() (in module openstef.tasks.train_model)": [[20, "openstef.tasks.train_model.train_model_task"]], "predictionjobloop (class in openstef.tasks.utils.predictionjobloop)": [[21, "openstef.tasks.utils.predictionjobloop.PredictionJobLoop"]], "taskcontext (class in openstef.tasks.utils.taskcontext)": [[21, "openstef.tasks.utils.taskcontext.TaskContext"]], "build_graph_structure() (in module openstef.tasks.utils.dependencies)": [[21, "openstef.tasks.utils.dependencies.build_graph_structure"]], "build_nx_graph() (in module openstef.tasks.utils.dependencies)": [[21, "openstef.tasks.utils.dependencies.build_nx_graph"]], "find_groups() (in module openstef.tasks.utils.dependencies)": [[21, "openstef.tasks.utils.dependencies.find_groups"]], "has_dependencies() (in module openstef.tasks.utils.dependencies)": [[21, "openstef.tasks.utils.dependencies.has_dependencies"]], "map() (openstef.tasks.utils.predictionjobloop.predictionjobloop method)": [[21, "openstef.tasks.utils.predictionjobloop.PredictionJobLoop.map"]], "openstef.tasks.utils": [[21, "module-openstef.tasks.utils"]], "openstef.tasks.utils.dependencies": [[21, "module-openstef.tasks.utils.dependencies"]], "openstef.tasks.utils.predictionjobloop": [[21, "module-openstef.tasks.utils.predictionjobloop"]], "openstef.tasks.utils.taskcontext": [[21, "module-openstef.tasks.utils.taskcontext"]], "calc_completeness_dataframe() (in module openstef.validation.validation)": [[22, "openstef.validation.validation.calc_completeness_dataframe"]], "calc_completeness_features() (in module openstef.validation.validation)": [[22, "openstef.validation.validation.calc_completeness_features"]], "check_data_for_each_trafo() (in module openstef.validation.validation)": [[22, "openstef.validation.validation.check_data_for_each_trafo"]], "drop_target_na() (in module openstef.validation.validation)": [[22, "openstef.validation.validation.drop_target_na"]], "find_nonzero_flatliner() (in module openstef.validation.validation)": [[22, "openstef.validation.validation.find_nonzero_flatliner"]], "find_zero_flatliner() (in module openstef.validation.validation)": [[22, "openstef.validation.validation.find_zero_flatliner"]], "is_data_sufficient() (in module openstef.validation.validation)": [[22, "openstef.validation.validation.is_data_sufficient"]], "openstef.validation": [[22, "module-openstef.validation"]], "openstef.validation.validation": [[22, "module-openstef.validation.validation"]], "validate() (in module openstef.validation.validation)": [[22, "openstef.validation.validation.validate"]]}})