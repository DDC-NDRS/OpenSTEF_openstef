Search.setIndex({"docnames": ["about_openstef", "api_reference", "community", "concepts", "dashboard", "dazls", "index", "influx_database_diagram", "modules", "openstef", "openstef.data_classes", "openstef.feature_engineering", "openstef.metrics", "openstef.model", "openstef.model.metamodels", "openstef.model.regressors", "openstef.model_selection", "openstef.monitoring", "openstef.pipeline", "openstef.postprocessing", "openstef.preprocessing", "openstef.tasks", "openstef.tasks.utils", "openstef.validation", "pipelines_user_guide", "sql_database_diagram", "user_guides"], "filenames": ["about_openstef.rst", "api_reference.rst", "community.rst", "concepts.rst", "dashboard.rst", "dazls.rst", "index.rst", "influx_database_diagram.rst", "modules.rst", "openstef.rst", "openstef.data_classes.rst", "openstef.feature_engineering.rst", "openstef.metrics.rst", "openstef.model.rst", "openstef.model.metamodels.rst", "openstef.model.regressors.rst", "openstef.model_selection.rst", "openstef.monitoring.rst", "openstef.pipeline.rst", "openstef.postprocessing.rst", "openstef.preprocessing.rst", "openstef.tasks.rst", "openstef.tasks.utils.rst", "openstef.validation.rst", "pipelines_user_guide.rst", "sql_database_diagram.rst", "user_guides.rst"], "titles": ["About OpenSTEF", "API reference", "Community", "Concepts", "&lt;no title&gt;", "Domain Adaptation for Zero Shot Learning in Sequence (DAZLS)", "Welcome to the documentation of OpenSTEF!", "Overview of timeseries database schema", "openstef", "openstef package", "openstef.data_classes package", "openstef.feature_engineering package", "openstef.metrics package", "openstef.model package", "openstef.model.metamodels package", "openstef.model.regressors package", "openstef.model_selection package", "openstef.monitoring package", "openstef.pipeline package", "openstef.postprocessing package", "openstef.preprocessing package", "openstef.tasks package", "openstef.tasks.utils package", "openstef.validation package", "Pipelines user guide", "Overview of relational database schema", "User guides"], "terms": {"The": [0, 2, 3, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26], "energi": [0, 3, 5, 6, 19, 21], "transit": 0, "pose": 0, "new": [0, 3, 9, 11, 15, 17, 18, 21], "challeng": 0, "all": [0, 2, 3, 6, 7, 10, 11, 12, 13, 14, 15, 18, 21, 22, 23, 24], "parti": 0, "sector": [0, 6], "For": [0, 2, 3, 5, 11, 13, 14, 15, 16, 17, 21, 22, 26], "grid": [0, 3], "oper": [0, 10, 11, 14, 16, 18, 24, 26], "rise": 0, "renew": [0, 3, 5, 15], "electrif": 0, "consumpt": [0, 19, 21], "lead": 0, "capac": 0, "its": [0, 3, 6, 7, 10, 11, 13], "fysic": 0, "constraint": 0, "forecast": [0, 1, 3, 6, 8, 9, 10, 11, 12, 13, 15, 18, 19, 21], "load": [0, 3, 5, 9, 10, 11, 12, 13, 15, 18, 19, 21, 23, 24], "next": [0, 13], "hour": [0, 9, 11, 13, 18, 21, 23], "dai": [0, 11, 13, 16, 18, 21], "i": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26], "essenti": 0, "anticip": 0, "local": [0, 3, 26], "congest": 0, "make": [0, 6, 10, 11, 13, 14, 15, 18, 19, 21], "most": [0, 13, 14, 15, 17, 18], "exist": [0, 11, 12, 21], "asset": 0, "provid": [0, 3, 5, 11, 21, 26], "complet": [0, 3, 5, 11, 14, 15, 17, 21, 22, 23], "softwar": 0, "stack": 0, "which": [0, 3, 5, 6, 10, 11, 13, 15, 18, 19, 21, 23, 24], "electr": [0, 3, 5, 15], "given": [0, 9, 10, 11, 12, 16, 17, 18, 19, 21, 22], "timeseri": [0, 6, 23], "measur": [0, 3, 12, 23, 25], "net": [0, 3, 5], "gener": [0, 1, 2, 8, 9, 10, 12, 13, 15, 16, 18, 19, 26], "fulli": [0, 13, 23, 26], "autom": [0, 15], "machin": [0, 3, 6, 9, 13], "learn": [0, 6, 9, 13, 15], "pipelin": [0, 1, 3, 5, 6, 8, 9, 10, 11, 14, 15], "execut": [0, 21, 23], "deliv": 0, "probabilist": 0, "futur": [0, 13], "work": [0, 11, 21], "combin": [0, 3, 5, 21], "both": [0, 15, 24], "perform": [0, 3, 12, 14, 15, 17, 18, 21, 26], "valid": [0, 1, 3, 8, 9, 10, 13, 14, 15, 16, 18, 21], "input": [0, 3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 23], "data": [0, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 26], "extern": [0, 15], "predictor": 0, "weather": [0, 3, 5, 11, 18, 19, 21], "market": 0, "price": [0, 3, 21], "train": [0, 1, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 23, 26], "ani": [0, 10, 11, 13, 15, 17, 18, 21, 22, 24, 26], "scikit": [0, 15], "compat": [0, 13, 23], "model": [0, 1, 3, 5, 8, 9, 10, 11, 12, 18, 21, 23, 26], "via": [0, 3, 13, 17], "an": [0, 2, 3, 5, 9, 11, 13, 14, 15, 16, 18, 22, 24, 25, 26], "api": [0, 3, 6, 15, 24], "expert": 0, "graphic": 0, "user": [0, 3, 6, 21], "interfac": [0, 3, 11, 15, 26], "base": [0, 3, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22], "open": [0, 2, 3], "sourc": [0, 3, 5, 21], "technologi": 0, "standard": [0, 9, 13, 21], "organ": 0, "microservic": 0, "architectur": [0, 2, 26], "optim": [0, 13, 18, 21], "cloud": [0, 16], "deploy": 0, "resili": 0, "As": [0, 19, 24], "avail": [0, 6, 9, 10, 11, 12, 13, 15, 19, 21, 23, 26], "critic": 0, "applic": [0, 11, 24], "deploi": [0, 3, 5], "multipl": [0, 3, 5, 11, 16, 18, 26], "fallback": [0, 1, 8, 9, 17], "stategi": 0, "thi": [0, 2, 3, 5, 6, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26], "wai": [0, 11, 13, 18, 24, 26], "alwai": [0, 19, 21], "when": [0, 3, 5, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22], "issu": [0, 2, 3, 5], "label": [0, 11, 15, 17, 23], "possibl": [0, 2, 12], "reconstruct": 0, "decis": 0, "platform": 0, "agnost": 0, "container": 0, "run": [0, 3, 5, 10, 14, 21, 22, 24], "contain": [0, 3, 6, 11, 12, 14, 15, 17, 18, 21, 23, 24, 26], "A": [0, 3, 5, 7, 9, 11, 12, 14, 15, 18, 21, 22, 24], "refer": [0, 6, 10, 12, 15, 21, 24, 26], "implement": [0, 11, 13, 15, 16], "can": [0, 2, 3, 5, 6, 12, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26], "directli": [0, 3, 21], "howev": [0, 12, 13, 15, 24], "have": [0, 2, 3, 5, 9, 10, 11, 15, 16, 21, 22, 24, 26], "uniqu": [0, 12], "IT": 0, "landscap": 0, "case": [0, 11, 12, 15, 18, 21], "modular": 0, "natur": 0, "enabl": 0, "easili": 0, "addapt": 0, "environ": 0, "difficult": 0, "risk": 0, "toward": [0, 26], "polici": 0, "react": 0, "predict": [0, 3, 5, 9, 10, 11, 12, 13, 14, 15, 18, 19, 21, 22, 23, 25], "event": [0, 13], "split": [0, 3, 5, 10, 13, 15, 16, 18, 19, 21], "compon": [0, 3, 5, 6, 9, 15, 18, 19, 21], "With": 0, "increas": 0, "fraction": [0, 10, 16, 18, 23], "mix": 0, "balanc": 0, "insight": 0, "wind": [0, 1, 3, 5, 8, 9, 10, 11, 15, 19, 21], "solar": [0, 1, 3, 5, 8, 9, 10, 11, 15, 19, 21], "power": [0, 3, 5, 11, 15, 19, 21], "relev": [0, 11], "eu": 0, "commis": 0, "regul": 0, "No": [0, 9], "543": 0, "2013": 0, "openstef": [1, 2, 3, 5, 7, 24, 25, 26], "packag": [1, 3, 6, 8, 26], "subpackag": [1, 8], "data_class": [1, 8, 9, 24], "submodul": [1, 8], "data_prep": [1, 8, 9], "modul": [1, 8], "model_specif": [1, 8, 9, 24], "prediction_job": [1, 8, 9, 21, 22, 24], "split_funct": [1, 8, 9], "content": [1, 8], "feature_engin": [1, 8, 9], "apply_featur": [1, 8, 9], "data_prepar": [1, 8, 9], "feature_add": [1, 8, 9], "feature_appl": [1, 8, 9], "historic_featur": [1, 8, 9], "holiday_featur": [1, 8, 9], "lag_featur": [1, 8, 9], "weather_featur": [1, 8, 9], "metric": [1, 8, 9, 15, 21, 24], "figur": [1, 8, 9, 21], "report": [1, 8, 9, 13, 15, 18, 24], "basecas": [1, 8, 9, 10, 12, 18, 19, 21, 24], "confidence_interval_appl": [1, 8, 9], "model_cr": [1, 8, 9], "object": [1, 2, 8, 9, 10, 11, 12, 14, 15, 17, 18, 21, 22, 24], "objective_cr": [1, 8, 9], "serial": [1, 8, 9], "standard_deviation_gener": [1, 8, 9], "model_select": [1, 8, 9, 15], "monitor": [1, 8, 9], "performance_met": [1, 8, 9], "team": [1, 2, 6, 8, 9, 21, 22], "create_basecase_forecast": [1, 8, 9, 24, 26], "create_component_forecast": [1, 3, 5, 8, 9, 26], "create_forecast": [1, 8, 9, 24, 26], "optimize_hyperparamet": [1, 8, 9, 24, 26], "train_create_forecast_backtest": [1, 8, 9, 26], "train_model": [1, 8, 9, 24, 26], "util": [1, 8, 9, 14, 21], "postprocess": [1, 8, 9], "preprocess": [1, 8, 9], "task": [1, 3, 8, 9, 10, 17], "calculate_kpi": [1, 8, 9], "create_components_forecast": [1, 8, 9, 24], "create_solar_forecast": [1, 8, 9, 10], "create_wind_forecast": [1, 8, 9, 10], "run_traci": [1, 8, 9], "split_forecast": [1, 8, 9], "enum": [1, 8, 10, 19], "forecasttyp": [1, 8, 9, 19], "demand": [1, 8, 9, 10], "mlmodeltyp": [1, 8, 9, 13], "arima": [1, 8, 9, 13], "lgb": [1, 8, 9, 10, 13], "linear": [1, 8, 9, 10, 13, 21], "proloaf": [1, 8, 9, 10, 11, 13], "xgb": [1, 3, 8, 9, 10, 13], "xgb_quantil": [1, 8, 9, 10, 13], "pipelinetyp": [1, 8, 9, 10], "hyper_parmat": [1, 8, 9], "tracyjobresult": [1, 8, 9, 21], "fail": [1, 8, 9, 13, 21], "success": [1, 8, 9, 17, 22], "unknown": [1, 3, 5, 8, 9], "except": [1, 3, 8, 22, 24], "componentforecasttooshorthorizonerror": [1, 8, 9], "inputdatainsufficienterror": [1, 8, 9, 18], "inputdatainvaliderror": [1, 8, 9], "inputdatawrongcolumnordererror": [1, 8, 9, 18], "modelwithoutstdev": [1, 8, 9], "nopredictedloaderror": [1, 8, 9, 21], "norealisedloaderror": [1, 8, 9, 21], "oldmodelhigherscoreerror": [1, 8, 9, 18], "predictionjobexcept": [1, 8, 9, 22], "skipsavetrainingforecast": [1, 8, 9], "here": [2, 15, 26], "you": [2, 3, 6, 9, 15], "find": [2, 6, 22], "inform": [2, 3, 5, 6, 10, 11, 12, 15, 17, 21, 22, 23, 25, 26], "about": [2, 3, 5, 6, 10, 11, 12, 13, 25], "tsc": 2, "respons": 2, "ambit": 2, "goal": 2, "project": [2, 6], "guidelin": 2, "procedur": 2, "tool": 2, "select": [2, 3, 12, 16], "develop": [2, 3, 5, 12], "infrastructur": 2, "choic": 2, "rais": [2, 3, 9, 13, 15, 18, 21, 22, 24], "subject": 2, "ar": [2, 3, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26], "import": [2, 3, 5, 10, 11, 12, 14, 15, 19, 21, 23, 24], "direct": [2, 11, 21, 22], "consist": [2, 11, 18], "follow": [2, 10, 11, 15, 16, 17, 21, 22, 26], "member": 2, "frank": [2, 12], "kreuwel": 2, "jan": 2, "maarten": 2, "van": [2, 3, 5, 15], "doorn": [2, 3, 5, 15], "jona": 2, "den": 2, "bogaard": 2, "david": 2, "swinkel": 2, "frederik": 2, "stoel": 2, "more": [2, 3, 5, 9, 11, 13, 14, 15, 17, 22, 24, 26], "meet": 2, "note": [2, 13, 15, 16, 17, 23, 24], "link": [2, 3, 5, 10, 17, 26], "found": [2, 9, 11, 21, 22, 26], "govern": 2, "actual": [2, 21], "overview": [2, 6], "welcom": 2, "form": [2, 11], "code": [2, 3, 5, 15, 21, 24, 26], "look": [2, 3, 11, 22, 24, 26], "If": [2, 3, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23], "bug": 2, "would": 2, "like": [2, 11, 26], "request": [2, 6, 11, 15], "featur": [2, 3, 10, 11, 12, 14, 15, 16, 17, 18, 21], "pleas": [2, 6], "dure": [2, 10, 11, 13, 22, 23], "bi": 2, "weekli": 2, "refin": 2, "we": [2, 3, 5, 10, 12, 15, 16, 18], "refinem": 2, "anyon": 2, "interest": 2, "detail": [2, 6], "Not": 2, "what": [2, 10, 26], "see": [2, 3, 5, 6, 10, 11, 12, 13, 15, 17, 26], "get": [2, 3, 6, 9, 10, 12, 13, 15, 16, 17, 21, 22, 24, 26], "Or": [2, 12], "post": [2, 3, 17, 19, 21, 22], "your": [2, 11], "question": 2, "channel": [2, 6], "help": 3, "understand": 3, "set": [3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26], "up": [3, 24, 26], "It": [3, 5, 6, 11, 14, 15, 18, 21], "job": [3, 9, 10, 11, 13, 14, 18, 19, 21, 22, 23, 25], "configur": [3, 10, 13, 22, 24], "e": [3, 10, 12, 15, 17, 21], "g": [3, 10, 12, 15, 21], "certain": [3, 11, 24], "locat": [3, 5, 10, 11, 21], "call": [3, 13, 21, 22], "evalu": [3, 12, 15, 26], "us": [3, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26], "correspond": [3, 11, 14, 15, 16, 18], "includ": [3, 5, 11, 13, 15, 16, 18, 21, 24, 26], "from": [3, 5, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 24, 26], "write": [3, 12, 21, 24], "give": [3, 5, 13], "choos": [3, 10], "fetch": [3, 22], "requir": [3, 6, 10, 11, 12, 13, 15, 18, 24, 26], "yourself": 3, "check": [3, 11, 18, 21, 23], "flatlin": [3, 10, 23], "engin": [3, 10, 11, 18], "creat": [3, 11, 12, 13, 15, 17, 18, 21, 26], "yesterdai": 3, "last": [3, 11, 13, 15, 18, 21], "week": [3, 12, 13, 21], "quantil": [3, 9, 10, 12, 13, 15, 18, 21], "storag": [3, 18, 21], "store": [3, 5, 7, 18, 21, 25], "mlflow": [3, 13, 18], "disk": [3, 12], "s3_bucket": 3, "aw": 3, "process": [3, 6, 10, 12, 14, 15, 19], "datafram": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24], "extra": [3, 10, 11, 19], "usag": [3, 13, 26], "dbc": [3, 22, 24], "read": [3, 6, 12], "current": [3, 13, 15, 17], "mysql": [3, 21], "influx": 3, "just": [3, 10, 15, 23], "itself": 3, "need": [3, 9, 10, 11, 15, 16, 18, 21], "part": 3, "github": [3, 12, 24, 26], "repositori": [3, 5, 24, 26], "fetcher": 3, "schedul": [3, 24], "cron": [3, 21], "kubernet": 3, "other": [3, 5, 15, 17, 19, 22, 23], "rest": [3, 10], "config": [3, 9, 10, 21, 22, 24], "ci": 3, "cd": 3, "cicd": 3, "build": [3, 12, 17, 22], "test": [3, 10, 15, 16, 18, 21, 22], "jenkin": 3, "tekton": 3, "releas": 3, "pypi": [3, 6], "action": [3, 17], "comput": [3, 11, 12, 14, 15, 18, 22], "sql": [3, 17, 21], "dashboard": [3, 26], "visual": 3, "histor": [3, 11, 13, 15, 21], "function": [3, 5, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24], "techniqu": [3, 5], "transfer": [3, 5], "knowledg": [3, 5], "substat": [3, 5, 15], "incomplet": [3, 5, 23], "being": [3, 5], "known": [3, 5, 12, 15], "carri": [3, 5, 15, 21], "out": [3, 5, 11, 15, 16, 19, 21, 22], "target": [3, 5, 12, 14, 15, 18, 23], "total": [3, 5, 17, 23], "each": [3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26], "method": [3, 5, 11, 13, 14, 15, 22], "becaus": [3, 5, 12, 15, 18], "ha": [3, 5, 9, 10, 11, 15, 18], "purpos": [3, 5], "formul": [3, 5], "2": [3, 5, 6, 12, 14, 21], "step": [3, 5, 21, 23], "approach": [3, 5], "two": [3, 5, 12, 13, 15, 24], "bellow": [3, 5, 7, 25], "depict": [3, 5], "structur": [3, 5, 7], "everi": [3, 5, 11, 18, 21], "metadata": [3, 5, 19], "output": [3, 5, 11, 15, 17, 18, 19, 21], "At": [3, 5], "first": [3, 5, 11, 12, 15, 18, 21, 23, 24], "feed": [3, 5], "togeth": [3, 5, 18, 24], "Then": [3, 5, 15], "final": [3, 5, 11, 14], "teng": [3, 5, 15], "": [3, 5, 6, 12, 13, 14, 15, 18, 23, 24, 26], "y": [3, 5, 14, 15], "nooten": [3, 5, 15], "c": [3, 5, 11, 15], "j": [3, 5, 15], "m": [3, 5, 11, 15], "ottenbro": [3, 5, 15], "huijbregt": [3, 5, 15], "jansen": [3, 5, 15], "improv": [3, 5, 11, 15, 23], "Near": [3, 5, 15], "real": [3, 5, 15], "time": [3, 5, 11, 13, 15, 17, 18, 21, 23], "product": [3, 5, 15, 19], "level": [3, 5, 15, 17, 18, 21], "submit": [3, 5, 6, 15], "how": [3, 5, 12, 21, 23, 24, 26], "TO": [3, 5], "notebook": [3, 5], "file": [3, 5, 11, 12], "05": [3, 5, 12, 18], "ipynb": [3, 5], "dazls_stor": [3, 5], "sav": [3, 5], "produc": [3, 5, 10, 15, 19], "whenev": [3, 5], "chang": [3, 5], "py": [3, 5, 11, 21], "again": [3, 5], "newli": [3, 5, 17, 21], "er": [3, 25], "diagram": [3, 7, 25], "shown": [3, 7, 24, 25], "schema": [5, 6], "python": [6, 10, 11, 14, 21], "short": [6, 15], "term": [6, 24], "instal": [6, 26], "instruct": 6, "http": [6, 11, 12, 15, 17], "org": [6, 11, 12, 15], "start": [6, 11, 13, 15, 16, 18, 21, 23, 26], "guid": 6, "concept": [6, 24, 26], "domain": [6, 15], "adapt": [6, 15], "zero": [6, 12, 14, 15, 19, 23], "shot": 6, "sequenc": [6, 16, 20, 22], "dazl": [6, 9, 13, 18], "relat": [6, 11, 19], "databas": [6, 18, 21, 22, 24, 26], "commun": 6, "latest": [6, 12], "websit": 6, "also": [6, 11, 12, 13, 15, 17, 18, 24], "watch": 6, "video": 6, "instead": [6, 12], "want": [6, 15, 16], "join": 6, "discuss": 6, "our": [6, 12], "md": 6, "code_of_conduct": 6, "project_govern": 6, "pull": 6, "u": [6, 12, 17, 21], "under": 6, "mozilla": [6, 12], "public": 6, "version": 6, "0": [6, 11, 12, 13, 14, 15, 16, 18, 21, 23], "dataprepdataclass": [9, 10], "argument": [9, 10, 13, 16, 21, 22], "klass": [9, 10], "modelspecificationdataclass": [9, 10, 13, 18, 24], "feature_modul": [9, 10, 11], "feature_nam": [9, 10, 11, 13, 14, 15, 18], "hyper_param": [9, 10, 18], "id": [9, 10, 13, 18, 21, 22], "predictionjobdataclass": [9, 10, 11, 13, 18, 19, 21, 22, 24], "alternative_forecast_model_pid": [9, 10], "backtest_split_func": [9, 10], "completeness_treshold": [9, 10], "data_prep_class": [9, 10], "default_modelspec": [9, 10], "depends_on": [9, 10], "descript": [9, 10, 18, 21, 23], "flatliner_treshold": [9, 10], "forecast_typ": [9, 10, 19], "horizon_minut": [9, 10, 18, 21], "hub_height": [9, 10, 11], "lat": [9, 10, 11, 21], "lon": [9, 10, 11, 21], "minimal_table_length": [9, 10, 23], "n_turbin": [9, 10, 11], "name": [9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22], "pipelines_to_run": [9, 10], "resolution_minut": [9, 10, 18, 21], "save_train_forecast": [9, 10, 18], "sid": [9, 10], "train_compon": [9, 10], "train_horizons_minut": [9, 10], "train_split_func": [9, 10], "turbine_typ": [9, 10], "splitfuncdataclass": [9, 10], "ardataprepar": [9, 11], "prepare_forecast_data": [9, 11], "prepare_train_data": [9, 11], "abstractdataprepar": [9, 10, 11], "check_model": [9, 11], "legacydataprepar": [9, 11], "featureadd": [9, 11], "parse_feature_nam": [9, 11], "required_featur": [9, 11], "featuredispatch": [9, 11], "dispatch_featur": [9, 11], "parsedfeatur": [9, 11], "param": [9, 11, 17], "adders_from_modul": [9, 11], "abstractfeatureappl": [9, 11], "add_featur": [9, 11], "operationalpredictfeatureappl": [9, 11], "trainfeatureappl": [9, 11], "add_missing_feature_column": [9, 11], "enforce_feature_ord": [9, 11], "remove_non_requested_feature_column": [9, 11], "add_historic_load_as_a_featur": [9, 11], "check_for_bridge_dai": [9, 11], "generate_holiday_feature_funct": [9, 11], "extract_lag_featur": [9, 11], "generate_lag_feature_funct": [9, 11], "generate_non_trivial_lag_tim": [9, 11], "generate_trivial_lag_featur": [9, 11], "add_additional_solar_featur": [9, 11], "add_additional_wind_featur": [9, 11], "add_humidity_featur": [9, 11], "calc_air_dens": [9, 11], "calc_dewpoint": [9, 11], "calc_saturation_pressur": [9, 11], "calc_vapour_pressur": [9, 11], "calculate_dni": [9, 11], "calculate_gti": [9, 11], "calculate_windspeed_at_hubheight": [9, 11], "calculate_windturbine_power_output": [9, 11], "humidity_calcul": [9, 11], "convert_to_base64_data_uri": [9, 12], "plot_data_seri": [9, 12], "plot_feature_import": [9, 12], "bia": [9, 12, 21], "frac_in_stdev": [9, 12], "franks_skill_scor": [9, 12], "franks_skill_score_peak": [9, 12], "get_eval_metric_funct": [9, 12], "mae": [9, 12, 13], "nsme": [9, 12, 21], "r_mae": [9, 12], "r_mae_highest": [9, 12], "r_mae_lowest": [9, 12], "r_mne_highest": [9, 12], "r_mpe_highest": [9, 12], "rmse": [9, 12, 15, 21], "skill_scor": [9, 12], "skill_score_positive_peak": [9, 12], "xgb_quantile_ev": [9, 12], "xgb_quantile_obj": [9, 12], "generate_report": [9, 12], "get_metr": [9, 12], "write_report_to_disk": [9, 12], "metamodel": [9, 13, 15], "grouped_regressor": [9, 13], "missing_values_handl": [9, 13], "regressor": [9, 13, 14, 24], "custom_regressor": [9, 13], "lgbm": [9, 13], "basecasemodel": [9, 13], "can_predict_quantil": [9, 13, 15], "fit": [9, 13, 14, 15, 18, 21], "make_basecase_forecast": [9, 13], "confidenceintervalappl": [9, 13], "add_confidence_interv": [9, 13], "generate_fallback": [9, 13], "modelcr": [9, 13], "model_constructor": [9, 13], "create_model": [9, 13], "arimaregressorobject": [9, 13], "get_param": [9, 13], "lgbregressorobject": [9, 13], "get_pruning_callback": [9, 13], "linearregressorobject": [9, 13], "proloafregressorobject": [9, 13], "regressorobject": [9, 13, 15, 18], "create_report": [9, 13], "get_default_valu": [9, 13], "get_trial_track": [9, 13], "xgbquantileregressorobject": [9, 13], "xgbregressorobject": [9, 13], "objectivecr": [9, 13], "create_object": [9, 13], "mlflowseri": [9, 13], "get_model_ag": [9, 13], "load_model": [9, 13], "remove_old_model": [9, 13], "save_model": [9, 13], "standarddeviationgener": [9, 13], "generate_standard_deviation_data": [9, 13], "backtest_split_default": [9, 16], "group_kfold": [9, 16], "random_sampl": [9, 16], "sample_indices_train_v": [9, 16], "split_data_train_validation_test": [9, 16], "performancemet": [9, 17], "checkpoint": [9, 17], "complete_level": [9, 17], "start_level": [9, 17], "build_sql_query_str": [9, 17], "format_messag": [9, 17], "get_card_sect": [9, 17], "post_team": [9, 17], "create_basecase_forecast_pipelin": [9, 18, 24], "generate_basecase_confidence_interv": [9, 18], "create_components_forecast_pipelin": [9, 18], "create_input": [9, 18], "create_forecast_pipelin": [9, 18], "create_forecast_pipeline_cor": [9, 18, 24], "optimize_hyperparameters_pipelin": [9, 18, 24], "optimize_hyperparameters_pipeline_cor": [9, 18, 24], "optuna_optim": [9, 18], "train_model_and_forecast_back_test": [9, 18], "train_model_and_forecast_test_cor": [9, 18], "train_model_pipelin": [9, 18], "train_model_pipeline_cor": [9, 18, 24], "train_pipeline_common": [9, 18], "train_pipeline_step_compute_featur": [9, 18], "train_pipeline_step_split_data": [9, 18], "train_pipeline_step_train_model": [9, 18], "generate_forecast_datetime_rang": [9, 18], "add_components_base_case_forecast": [9, 19], "add_prediction_job_properties_to_forecast": [9, 19], "calculate_wind_pow": [9, 19], "normalize_and_convert_weather_data_for_split": [9, 19], "post_process_wind_solar": [9, 19], "split_forecast_in_compon": [9, 19], "replace_repeated_values_with_nan": [9, 20], "depend": [9, 10, 11, 13, 18, 21], "predictionjobloop": [9, 21], "taskcontext": [9, 21], "calc_kpi_for_specific_pid": [9, 21], "check_kpi_task": [9, 21], "main": [9, 21, 24, 26], "set_incomplete_kpi_to_nan": [9, 21], "create_basecase_forecast_task": [9, 21], "create_components_forecast_task": [9, 21], "create_forecast_task": [9, 21], "apply_fit_insol": [9, 21], "apply_persist": [9, 21], "calc_norm": [9, 21], "combine_forecast": [9, 21], "fide": [9, 21], "make_solar_prediction_pj": [9, 21], "make_wind_forecast_pj": [9, 21], "optimize_hyperparameters_task": [9, 21], "run_tracy_job": [9, 21], "convert_coefdict_to_coefsdf": [9, 21], "determine_invalid_coef": [9, 21], "find_compon": [9, 21], "split_forecast_task": [9, 21], "train_model_task": [9, 21], "calc_completeness_datafram": [9, 23], "calc_completeness_featur": [9, 23], "check_data_for_each_trafo": [9, 23], "drop_target_na": [9, 23], "find_nonzero_flatlin": [9, 23], "find_zero_flatlin": [9, 23], "is_data_suffici": [9, 23], "class": [9, 10, 11, 12, 13, 14, 15, 17, 22, 24], "valu": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23], "enumer": 9, "hyper_paramet": 9, "custom": [9, 10, 11, 12, 15, 18, 21], "should": [9, 10, 11, 12, 13, 14, 15, 17, 18, 21, 22, 23, 24], "least": [9, 11, 19, 22], "30": [9, 21], "advanc": [9, 11], "insuffici": [9, 18], "invalid": [9, 11, 13, 17, 18, 21], "wrong": [9, 21], "column": [9, 11, 12, 13, 14, 15, 18, 19, 20, 21, 23, 24], "order": [9, 11, 12, 15, 16, 18, 21, 22], "deviat": [9, 13], "pid": [9, 10, 18, 21, 22], "messag": [9, 17, 19, 21, 22], "datatim": [9, 21], "rang": [9, 12, 18, 21], "realis": [9, 12, 13, 21], "datetim": [9, 11, 13, 15, 18, 19, 21, 23], "old": [9, 13, 18, 21], "higher": 9, "score": [9, 12, 13, 15], "none": [9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24], "One": [9, 17], "better": [9, 18, 21], "too": [9, 18, 21], "young": [9, 18, 21], "don": [9, 11], "t": [9, 11, 13, 21, 23], "save": [9, 10, 13, 21], "tra": 9, "forcast": 9, "specifi": [10, 11, 12, 13, 14, 17, 19, 21, 23], "dataclass": [10, 12, 18], "basemodel": 10, "allow": [10, 15], "prepar": [10, 18], "etc": [10, 24], "str": [10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24], "dict": [10, 11, 12, 13, 17, 18, 19, 21, 24], "type": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "dataprepclass": 10, "required_argu": 10, "string": [10, 14, 15, 17, 18], "instan": 10, "attribut": [10, 15], "them": [10, 15, 21, 22], "otherwis": [10, 11, 14, 18, 23], "return": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "instanc": [10, 13, 14, 24, 26], "paramet": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "list": [10, 11, 12, 14, 15, 16, 18, 22, 23, 24], "must": [10, 15, 16], "tupl": [10, 11, 12, 13, 14, 16, 18, 21, 22, 24], "typevar": 10, "specif": [10, 11, 13, 15, 17, 18, 21, 22], "hold": [10, 12, 21, 24], "regard": [10, 23], "procc": 10, "hyperparamet": [10, 12, 13, 18, 21], "int": [10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24], "made": 10, "pydant": [10, 24], "prevent": [10, 11], "convert": [10, 12, 14, 15, 19, 21], "integ": [10, 14, 15], "smart_union": 10, "true": [10, 12, 13, 16, 17, 21, 22, 23], "anoth": [10, 22], "option": [10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23], "backtest": [10, 15, 18, 26], "float": [10, 11, 12, 14, 15, 16, 18, 23, 24], "minimum": 10, "regular": [10, 13], "prep": 10, "default": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22], "union": [10, 11, 12, 13, 14, 17, 18, 22, 23], "might": 10, "human": 10, "number": [10, 11, 12, 14, 15, 16, 18, 21], "consecut": 10, "constant": [10, 14, 15], "detect": [10, 11, 23], "unsur": 10, "pick": 10, "kei": [10, 11, 13, 14, 17, 18, 21, 26], "similar": [10, 12, 20], "horizon": [10, 11, 12, 13, 18, 23, 24], "desir": [10, 13, 15, 16, 20, 21, 22], "minut": [10, 11], "onli": [10, 11, 12, 13, 14, 15, 21, 22, 23], "often": [10, 13], "abrevi": 10, "latitud": [10, 11], "degre": [10, 11], "longitud": [10, 11], "length": [10, 16, 20, 23], "row": [10, 14, 23], "requier": [10, 11], "readm": 10, "pj": [10, 11, 13, 18, 19, 21, 22, 23], "resolut": 10, "bool": [10, 13, 15, 16, 17, 18, 21, 22, 23], "indic": [10, 11, 12, 15, 16, 18, 21, 22, 23], "wether": [10, 15, 22], "whether": [10, 11, 17, 22], "taken": [10, 11], "account": 10, "callabl": [10, 12, 14, 22], "appli": [11, 14, 15, 16, 18, 21, 22], "accuraci": 11, "exampl": [11, 13, 14, 18, 19, 21, 23, 24], "ad": [11, 13, 18, 19], "1": [11, 12, 14, 15, 16, 18, 21, 23], "7": [11, 21], "ago": 11, "same": [11, 24], "weekdai": 11, "holidai": 11, "extrapol": 11, "windspe": 11, "100m": 11, "normalis": 11, "accord": [11, 12, 16, 18, 24], "turbin": 11, "curv": [11, 19], "24": [11, 21], "defin": [11, 12, 14, 15, 21], "feature_funct": 11, "recent": [11, 13, 18], "omit": 11, "deriven": 11, "onc": [11, 21], "But": 11, "present": [11, 13, 24], "These": [11, 18, 21, 24], "unrequest": 11, "addit": [11, 21, 24], "filter": 11, "later": 11, "panda": [11, 12, 14, 15, 18, 21, 24], "pd": [11, 14, 15, 18, 19, 21, 23, 24], "index": [11, 12, 13, 14, 15, 18, 19, 21, 23], "predictor_1": 11, "predictor_n": 11, "reuqest": 11, "limit": [11, 24], "feature_1": 11, "feature_m": 11, "numpi": [11, 12, 21], "np": [11, 12, 14, 15, 16, 21], "date_rang": [11, 21], "2017": [11, 21], "01": [11, 21], "09": [11, 21], "00": [11, 18, 21], "freq": [11, 21], "15t": [11, 21], "period": [11, 16, 21], "200": [11, 21], "sin": [11, 21], "pi": [11, 21], "random": [11, 16, 21, 22], "uniform": [11, 21], "model_spec": [11, 13, 18], "historical_depth": 11, "abc": 11, "abstract": [11, 15], "adder": 11, "basic": 11, "block": [11, 23], "handl": [11, 14, 15], "logic": [11, 23], "syntact": 11, "sugar": 11, "properli": 11, "df": [11, 14, 17, 20, 21, 23], "parsed_feature_nam": 11, "add": [11, 13, 19, 21], "properti": [11, 13, 15], "pars": [11, 15], "charg": 11, "dictionnari": [11, 14], "potenti": [11, 20], "In": [11, 15, 16, 24], "doe": [11, 15, 21, 22, 24], "empti": [11, 18], "dictionari": [11, 13, 17, 21], "mai": [11, 23], "recogn": [11, 21], "calcul": [11, 12, 13, 18, 19, 21, 23], "orchestr": 11, "scan": 11, "assign": [11, 16], "proper": 11, "launch": 11, "effect": [11, 15, 23], "dispatch": 11, "alia": 11, "field": [11, 14], "module_nam": 11, "fly": 11, "sever": [11, 21], "featureappl": 11, "applicatior": 11, "latency_config": 11, "larger": [11, 18], "horzion": 11, "thei": [11, 18], "720min": 11, "720": 11, "25": [11, 18], "due": [11, 16], "latenc": 11, "apx": [11, 21], "sort": [11, 16], "modelu": 11, "variou": [11, 15], "helper": 11, "input_data": [11, 13, 16, 18, 24], "featurelist": 11, "nan": [11, 14, 15, 20, 21, 23], "especi": 11, "useful": [11, 21], "sure": [11, 12, 21], "place": 11, "intend": [11, 16], "error": [11, 12, 13, 21], "predicion": [11, 14], "ideal": 11, "world": 11, "nescarri": 11, "miss": [11, 14, 15, 21, 23], "fill": [11, 14], "n": 11, "enforc": [11, 19], "correct": [11, 23], "alphabet": 11, "remain": 11, "everyth": 11, "between": [11, 13, 16, 18, 21, 22, 23], "eventu": 11, "assum": [11, 15, 16, 21], "variabl": [11, 15], "furthermor": 11, "move": 11, "posit": [11, 12, 19], "pressent": 11, "requested_featur": 11, "remov": [11, 13, 14, 21], "nescesarri": 11, "serv": 11, "failsav": 11, "prediciton": [11, 12, 15, 19], "historic_load": 11, "equal": [11, 12, 19, 21, 23], "date": [11, 15, 16], "holiday_nam": 11, "countri": 11, "year": 11, "holiday_funct": 11, "bridge_dai": 11, "bridgedai": 11, "associ": 11, "append": [11, 17], "dto": 11, "holidayfunciton": 11, "featurefunct": 11, "nl": 11, "path_to_school_holidays_csv": 11, "posixpath": 11, "home": 11, "runner": 11, "openstef_openstef": 11, "dutch_holidays_2020": 11, "2022": 11, "csv": 11, "2020": 11, "nieuwjaarsdag": 11, "12": 11, "2023": 11, "08": 11, "kerstvakanti": 11, "10": [11, 13], "15": [11, 13, 16], "23": 11, "herfstvakantienoord": 11, "manual": [11, 22], "collect": [11, 21], "www": [11, 15], "schoolvakanti": 11, "nederland": 11, "offici": 11, "ducth": 11, "until": 11, "meivakanti": 11, "herstvakanti": 11, "bouwvak": 11, "zomervakanti": 11, "voorjaarsvakanti": 11, "pasen": 11, "koningsdag": 11, "hemelvaart": 11, "pinksteren": 11, "kerst": 11, "brugdagen": 11, "updat": [11, 15], "dec": 11, "agenda": 11, "filepath": 11, "school": 11, "the_name_of_the_holiday_to_be_check": 11, "lag": 11, "were": 11, "dataset": [11, 15, 16, 18, 21], "lagtim": 11, "where": [11, 12, 14, 18, 23], "automat": [11, 12, 22], "lag_funct": 11, "generate_lag_funct": 11, "minute_list": 11, "h_ahead": 11, "height_treshold": 11, "autocorrel": 11, "trace": 11, "subsequ": 11, "minim": [11, 23], "peak": [11, 12, 16, 21], "adit": 11, "non": [11, 12, 13], "trivial": 11, "creation": 11, "mostli": 11, "wheather": 11, "humid": 11, "determin": [11, 13, 19, 21], "humidti": 11, "temperatur": 11, "pressur": 11, "rh": 11, "dewpoint": 11, "ndarrai": [11, 12, 14, 15], "atmospher": 11, "pa": 11, "rel": [11, 12], "air": 11, "densiti": 11, "kg": 11, "3": [11, 14, 15, 21], "vapour_pressur": 11, "en": [11, 12, 17, 21], "wikipedia": 11, "wiki": 11, "dew_point": 11, "mroe": 11, "info": [11, 12], "vapour": 11, "water": 11, "vaisala": 11, "com": [11, 12, 17], "site": 11, "document": [11, 26], "humidity_conversion_formulas_b210973en": 11, "f": 11, "pdf": 11, "satur": 11, "respect": [11, 15, 22], "psat": 11, "radiat": [11, 18, 19], "normal": [11, 13, 15, 19], "irradi": 11, "dni": 11, "deriv": [11, 12, 13], "obtain": [11, 18], "seri": [11, 12, 15, 19, 21, 23], "datetimeindex": [11, 23], "right": 11, "zone": 11, "predictjob": 11, "surface_tilt": 11, "34": 11, "surface_azimuth": 11, "180": 11, "gti": 11, "poa": 11, "global": [11, 14], "tilt": 11, "plane": 11, "arrai": [11, 12, 14, 15, 16, 23], "timezon": 11, "surfac": 11, "photovolta": 11, "system": [11, 21], "face": 11, "south": 11, "north": 11, "east": 11, "90": 11, "west": 11, "270": 11, "fromheight": 11, "100": [11, 15, 18], "hubheight": 11, "hubheigh": 11, "height": 11, "hub": 11, "law": 11, "wind_profile_power_law": 11, "OR": 11, "10m": 11, "turbine_data": [11, 19], "through": [11, 19, 24], "describ": [11, 12, 19], "result": [11, 14, 15, 18, 21], "1mwp": [11, 19], "rate": 11, "windspeedhub": 11, "nturbin": 11, "turbinedata": 11, "slope_cent": 11, "rated_pow": 11, "steep": 11, "hpa": 11, "moistur": 11, "numer": [11, 14, 15], "path_in": 12, "path_out": 12, "content_typ": 12, "data_uri": 12, "path": [12, 18, 24], "uri": [12, 18], "doc": [12, 17], "web": 12, "header": 12, "predict_data": 12, "47": [12, 18], "plot": 12, "pass": [12, 13, 17, 22], "There": 12, "either": [12, 18], "match": 12, "legend": 12, "line": 12, "feature_import": 12, "treemap": 12, "weight": [12, 15, 23], "assess": 12, "qualiti": [12, 13, 19], "absolut": [12, 21], "stdev": [12, 13], "amount": [12, 23], "within": [12, 15, 24], "one": [12, 13, 14, 15, 17, 18, 21, 22], "range_": 12, "skill": 12, "metric_nam": 12, "mean": [12, 13, 14, 15, 21, 22, 23, 24], "nash": 12, "sutcliff": 12, "effici": [12, 21], "previou": [12, 17, 22], "percentil": 12, "95": 12, "5": [12, 15], "percent": 12, "highest": 12, "lowest": 12, "neg": [12, 19, 21], "quantifi": 12, "much": 12, "underestim": 12, "overestim": 12, "root": 12, "squar": 12, "thise": 12, "pred": 12, "dmatrix": 12, "regress": [12, 13], "loss": 12, "pinbal": 12, "estim": [12, 13, 14, 16, 19], "distribut": [12, 13], "condit": 12, "xgboost": [12, 15], "gist": 12, "nikolai": 12, "lysenko": 12, "06769d701c1d9c9acb9a66f2f9d7a6c7": 12, "fucntion": 12, "degener": 12, "substitut": [12, 13], "second": 12, "page": [12, 26], "dmlc": [12, 15], "1825": 12, "why": 12, "trick": 12, "max_delta_step": [12, 15], "small": 12, "enough": [12, 23], "satisfi": 12, "min": [12, 16], "gradient": 12, "hessian": 12, "reason": 12, "gistcom": 12, "2322558": 12, "feature_importance_figur": 12, "data_series_figur": 12, "signatur": 12, "train_data": [12, 18], "validation_data": [12, 13, 18], "test_data": [12, 18], "openstfregressor": [12, 13, 15, 18, 23, 24], "static": [12, 13, 15], "y_pred": 12, "y_true": 12, "report_fold": 12, "view": 12, "grafana": 12, "groupedregressor": [13, 14], "feature_names_": [13, 14], "estimators_": [13, 14], "grouped_comput": [13, 14], "missingvalueshandl": [13, 14, 15], "non_null_columns_": [13, 14], "n_features_in_": [13, 14], "regressor_": [13, 14], "imputer_": [13, 14], "pipeline_": [13, 14], "feature_importances_": [13, 14], "arimaopenstfregressor": [13, 15], "predict_quantil": [13, 15], "set_feature_import": [13, 15], "update_historic_data": [13, 15], "customopenstfregressor": [13, 15], "valid_kwarg": [13, 15], "create_custom_object": [13, 15], "is_custom_typ": [13, 15], "load_custom_model": [13, 15], "lgbmopenstfregressor": [13, 15], "gain_importance_nam": [13, 15], "weight_importance_nam": [13, 15], "linearopenstfregressor": [13, 15], "linearregressor": [13, 15], "xgbopenstfregressor": [13, 15], "xgbquantileopenstfregressor": [13, 15], "get_feature_importances_from_boost": [13, 15], "baseestim": [13, 14, 15], "regressormixin": [13, 14, 15], "forecast_input_data": 13, "overwrite_delay_hour": 13, "48": 13, "idea": 13, "els": 13, "still": 13, "befor": [13, 15, 23], "valueerror": [13, 15, 18], "7d": 13, "14d": 13, "comat": 13, "sklearn": [13, 14, 15], "confid": [13, 15, 18], "interv": [13, 15, 18], "confidencegener": 13, "precis": 13, "defenit": 13, "group": [13, 14, 16, 22], "assumpt": [13, 19], "forecast_input": 13, "fallback_strategi": 13, "extreme_dai": 13, "fall": 13, "back": [13, 16, 18], "extrem": [13, 16], "profil": [13, 21], "strategi": [13, 14, 15, 16], "daili": 13, "len": [13, 21], "notimplementederror": 13, "factori": 13, "model_typ": [13, 15, 21], "kwarg": [13, 14, 15, 17, 21, 22], "construct": 13, "keyword": [13, 15, 22], "arg": [13, 21, 22], "trial": [13, 18], "temporari": 13, "seem": 13, "strang": 13, "optuna": [13, 18], "usual": 13, "done": [13, 18, 24], "statist": 13, "analysi": [13, 15], "heurist": 13, "hyperparam": 13, "split_func": 13, "split_arg": 13, "test_fract": [13, 16, 18], "validation_fract": [13, 16], "eval_metr": 13, "verbos": 13, "fals": [13, 16, 18, 21, 22, 23], "studi": [13, 18], "constructor": 13, "some": [13, 22, 26], "he": [13, 15], "initi": [13, 24], "insid": 13, "classmethod": [13, 14, 15], "without": [13, 14, 18, 26], "al": 13, "xgbquantil": [13, 15], "mlflow_tracking_uri": [13, 18], "experiment_nam": 13, "hyperparameter_optimization_onli": 13, "ag": [13, 21], "experi": 13, "predit": 13, "optimais": 13, "consid": [13, 23], "max_n_model": 13, "artifact_fold": [13, 18], "per": [13, 16, 21, 23], "incorpor": 13, "nativ": 13, "2152": 13, "phase": 13, "differ": [13, 16, 23, 24], "std": 13, "base_estim": 14, "group_column": 14, "n_job": [14, 15], "metaestimatormixin": 14, "meta": [14, 19], "groupbi": 14, "moreov": 14, "parallel": [14, 22], "thank": 14, "joblib": 14, "x0": 14, "x1": 14, "x3": 14, "x": [14, 15, 23], "maximum": [14, 20, 21], "concurr": 14, "worker": 14, "backend": 14, "multiprocess": 14, "size": [14, 23], "thread": 14, "pool": 14, "stock": 14, "eval_set": 14, "func": 14, "df_re": 14, "aggreg": 14, "group_r": 14, "gb": 14, "necessari": [14, 18], "take": [14, 18], "conrrespond": 14, "dataframegroupbi": 14, "handler": 14, "missing_valu": [14, 15], "imputation_strategi": [14, 15], "fill_valu": [14, 15], "exclus": 14, "imput": [14, 15], "transform": 14, "placehold": [14, 15], "occurr": [14, 15], "nullabl": [14, 15], "dtype": [14, 15], "sinc": [14, 15, 22], "na": [14, 15, 21, 23], "replac": [14, 15, 20, 23], "along": [14, 15], "median": [14, 15, 23], "most_frequ": [14, 15], "frequent": [14, 15], "than": [14, 15, 18, 21, 23, 24], "smallest": [14, 15], "left": [14, 15, 23], "simpleimput": 14, "missig": 14, "chain": 14, "sarimax": 15, "wrapper": [15, 24], "around": [15, 24], "statsmodel": 15, "backtest_max_horizon": 15, "1440": 15, "seasonal_ord": 15, "trend": 15, "statmodel": 15, "dev": 15, "tsa": 15, "arimaresult": 15, "html": 15, "To": [15, 21, 24], "ie": 15, "past": 15, "endogen": 15, "exogen": 15, "unrel": 15, "origin": 15, "interchang": 15, "terminologi": 15, "equival": 15, "exog": 15, "endog": 15, "stabl": 15, "endog_exog": 15, "matrix": 15, "after": [15, 23], "been": [15, 22], "end": [15, 18, 21, 23], "reli": [15, 24], "observ": [15, 23], "zeroth": 15, "fix": 15, "frequenc": 15, "sampl": [15, 16], "r2": 15, "cross": [15, 16, 18], "k": [15, 16], "fold": [15, 16, 18], "th": 15, "kth": 15, "timeseriessplit": 15, "x_past": 15, "y_past": 15, "gain": 15, "coeffici": [15, 17, 21], "pvalu": 15, "nulliti": 15, "side": 15, "wedg": 15, "timestamp": [15, 23], "custom_model_path": 15, "unseen": 15, "driven": 15, "plug": 15, "full": 15, "scale": 15, "separ": [15, 22], "domain_model_input": 15, "adaptation_model_input": 15, "expect": [15, 18, 21], "y_train": 15, "domain_model_input_column": 15, "adaptation_model_input_column": 15, "domain_model_test_data": 15, "adaptation_model_test_data": 15, "truth": 15, "boosting_typ": 15, "gbdt": 15, "num_leav": 15, "31": 15, "max_depth": 15, "learning_r": 15, "n_estim": 15, "subsample_for_bin": 15, "200000": 15, "class_weight": 15, "min_split_gain": 15, "min_child_weight": 15, "001": 15, "min_child_sampl": 15, "20": 15, "subsampl": 15, "subsample_freq": 15, "colsample_bytre": 15, "reg_alpha": 15, "reg_lambda": 15, "random_st": 15, "silent": 15, "warn": 15, "importance_typ": 15, "lgbmregressor": 15, "openstf": 15, "particular": 15, "retriev": [15, 19], "wrap": 15, "ml": 15, "adher": 15, "abstractmethod": 15, "concret": 15, "definit": [15, 26], "common": [15, 18], "reg": 15, "squarederror": 15, "xgbregressor": 15, "total_gain": 15, "9": 15, "gamma": 15, "6": [15, 21], "alpha": 15, "booster": 15, "feautur": 15, "feature_importance_": 15, "prefer": [15, 22], "n_fold": [16, 18], "stratification_min_max": 16, "randomize_fold_split": 16, "iter": [16, 22], "val": [16, 18], "lazi": 16, "avoid": 16, "copi": 16, "all_peak": 16, "secur": [16, 17], "sonar": 16, "accept": 16, "built": 16, "evenli": 16, "spread": 16, "clean": [16, 18, 23], "frame": [16, 18], "point": [16, 19], "data_": 16, "back_test": 16, "stratif": 16, "ratio": 16, "max": [16, 21, 23], "ensur": [16, 19], "repres": 16, "logger": 17, "name_checkpoint": 17, "log": [17, 21, 22, 23, 24], "runtim": 17, "self": [17, 24], "inner": 17, "wa": [17, 22], "level_label": 17, "level_nam": 17, "enter": [17, 22], "meter": 17, "could": [17, 23, 26], "tracy_todo": 17, "tabl": [17, 21, 23], "insert": [17, 21], "queri": 17, "statement": [17, 23], "titl": 17, "color": 17, "section_dict": 17, "card": 17, "section": [17, 24], "cardsect": 17, "msg": 17, "invalid_coeffici": 17, "coefficients_df": 17, "url": 17, "proxi": 17, "ktp": [17, 19], "authent": 17, "occur": 17, "keep": 17, "secret": [17, 24], "therefor": [17, 18, 24], "refrain": 17, "enhanc": 17, "button": 17, "simpl": [17, 19], "complex": 17, "support": 17, "text": 17, "imag": 17, "fact": 17, "markdown": 17, "microsoft": 17, "outlook": 17, "send": [17, 19, 21], "connector": [17, 24], "webhook": 17, "optinon": 17, "namespac": 17, "data_with_featur": 18, "weather_data": [18, 19], "windspeed_100m": [18, 19], "forecast_wind_on_shor": 18, "forecast_solar": 18, "forecast_oth": [18, 19], "algtyp": 18, "so": 18, "top": [18, 21], "track": 18, "core": 18, "persisit": 18, "n_trial": [18, 24], "raw": 18, "servic": 18, "artifact": 18, "input_d": 18, "best": [18, 21], "round": 18, "validated_data_with_featur": 18, "modelspec": [18, 24], "training_horizon": 18, "entir": 18, "kfold": 18, "testset": 18, "whole": 18, "randomli": 18, "do": [18, 21], "NOT": 18, "FOR": 18, "check_old_model_ag": [18, 21], "middl": 18, "care": 18, "persist": [18, 21], "skip": [18, 21, 23], "old_model": [18, 24], "compar": 18, "fitted_model": 18, "datafrma": 18, "test_data_predefin": 18, "share": 18, "boolean": [18, 21], "predefin": 18, "forecast_data": 18, "cluster": 18, "null": 18, "2021": 18, "11": 18, "19": 18, "17": 18, "04": 18, "basecase_forecast": 19, "sum": 19, "glmd": 19, "correctli": 19, "tennet": 19, "algorithm_typ": 19, "forecast_qu": 19, "algirithm": 19, "speed": 19, "windenergi": 19, "windpow": 19, "cari": [19, 21], "consupt": 19, "split_coef": 19, "previous": 19, "coef": 19, "max_length": 20, "column_nam": 20, "sequenti": 20, "repeat": [20, 23], "abov": [20, 21, 23, 26], "build_graph_structur": [21, 22], "build_nx_graph": [21, 22], "find_group": [21, 22], "has_depend": [21, 22], "map": [21, 22], "kpi": 21, "prognos": 21, "folow": 21, "ignor": [21, 23], "splitenergi": 21, "meant": 21, "altern": 21, "predicted_load": 21, "inf": 21, "dictonari": 21, "t_ahead": 21, "enddat": 21, "window": 21, "clarif": 21, "rmae": 21, "ahead": 21, "24h": 21, "context": [21, 22], "start_tim": 21, "end_tim": 21, "t_ahead_h": 21, "less": 21, "accur": 21, "almost": 21, "now": 21, "earlier": 21, "datapoint": 21, "interpol": 21, "k8": 21, "cronjob": [21, 24], "folder": 21, "On": 21, "manag": [21, 22], "resolv": 21, "contect": 21, "connect": [21, 24], "model_train": 21, "tdcv": 21, "someth": 21, "goe": 21, "contribut": 21, "add_to_df": 21, "hours_delta": 21, "polynomi": 21, "insol": 21, "pv": 21, "yield": 21, "2nd": 21, "hoursdelta": 21, "knmi": 21, "addtodf": 21, "norm": 21, "forecaopenstefitinsol": 21, "nb": 21, "300": 21, "8": 21, "loc": 21, "smooth_entri": 21, "4": 21, "colnam": 21, "script": 21, "well": [21, 24], "ab": 21, "smoothentri": 21, "entri": 21, "over": [21, 22], "smooth": 21, "combination_coef": 21, "independ": 21, "predetermin": 21, "algorithm1": 21, "algorithmn": 21, "combinationcoef": 21, "param1": 21, "paramn": 21, "all_forecast": 21, "radiu": 21, "peak_pow": 21, "180961000": 21, "optimize_hyper_param": 21, "prognosi": 21, "check_hyper_param_ag": 21, "exce": 21, "traci": 21, "todolist": 21, "tri": 21, "her": 21, "alreadi": [21, 22], "progress": 21, "acquir": 21, "interpret": 21, "abl": 21, "available_funct": 21, "jon": 21, "achiev": 21, "typic": 21, "domest": 21, "coefici": 21, "input_split_funct": 21, "coefdict": 21, "db": 21, "household": 21, "new_coef": 21, "last_coef": 21, "zero_bound": 21, "exactli": 21, "wind_ref": 21, "pv_ref": 21, "mulitpl": 21, "colum": 21, "retrain": 21, "slack": 21, "datetime_start": 21, "datetime_end": 21, "beast": 21, "graph": 22, "node": 22, "edg": 22, "networkx": 22, "digraph": 22, "randomize_group": 22, "treat": 22, "subgroup": 22, "stop_on_except": 22, "random_ord": 22, "on_exception_callback": 22, "on_successful_callback": 22, "on_end_callback": 22, "debug_pid": 22, "pj_kwarg": 22, "conveni": 22, "behaviour": 22, "tip": 22, "debug": 22, "specific_pid": 22, "loop": 22, "break": 22, "callback": 22, "everytim": 22, "willed": 22, "highli": 22, "suppress_except": 22, "post_teams_on_except": 22, "on_except": 22, "on_success": 22, "on_end": 22, "my_task_nam": 22, "encount": 22, "exc_typ": 22, "exc_info": 22, "stack_info": 22, "time_delai": 23, "homogenis": 23, "count": 23, "resampl": 23, "delta": 23, "excl": 23, "col": 23, "dataframa": 23, "load1": 23, "loadn": 23, "load_correct": 23, "lc_": 23, "threshold": 23, "stationflatlin": 23, "mani": 23, "timestep": 23, "moment": 23, "todo": 23, "lot": 23, "mnt": 23, "scipi": 23, "ndimag": 23, "flatliner_window": 23, "flatliner_load_threshold": 23, "compens": 23, "trafo": 23, "station": 23, "timedelta": 23, "big": 23, "completeness_threshold": 23, "continu": 23, "anyth": 23, "suffici": 23, "pj_id": 23, "flatliner_threshold": 23, "longer": 23, "suggest": 23, "appear": 23, "ind": 23, "identifi": 23, "repetit": 23, "mention": [24, 26], "extens": 24, "leverag": 24, "fuction": 24, "easier": 24, "wherea": 24, "offer": [24, 26], "flexibl": 24, "design": 24, "scalabl": 24, "illustr": 24, "snippet": 24, "below": 24, "show": [24, 26], "integr": 24, "let": 24, "tune": 24, "suppos": 24, "ran": [24, 26], "easi": [24, 26], "addition": 24, "demonstr": [24, 26], "apart": [24, 26], "baseset": 24, "relevanyt": 24, "usernam": 24, "host": 24, "sy": 24, "pathlib": 24, "openstef_dbc": 24, "def": 24, "configure_log": 24, "loglevel": 24, "runtime_env": 24, "env": 24, "__name__": 24, "__main__": 24, "kind": 24, "setup": [24, 26], "unlik": 24, "arguabl": 24, "neat": 24, "expos": 24, "fastapi": 24, "framework": 24, "pattern": 24, "openstefrepositori": 24, "interact": 24, "forecast_pipelin": 24, "basecase_forecast_pipelin": 24, "train_pipelin": 24, "resourc": 26, "easiest": 26, "familiar": 26, "assort": 26, "aim": 26, "depth": 26, "those": 26, "who": 26, "wish": 26, "readi": 26, "screenshot": 26, "offlin": 26}, "objects": {"": [[9, 0, 0, "-", "openstef"]], "openstef": [[10, 0, 0, "-", "data_classes"], [9, 0, 0, "-", "enums"], [9, 0, 0, "-", "exceptions"], [11, 0, 0, "-", "feature_engineering"], [12, 0, 0, "-", "metrics"], [13, 0, 0, "-", "model"], [16, 0, 0, "-", "model_selection"], [17, 0, 0, "-", "monitoring"], [18, 0, 0, "-", "pipeline"], [19, 0, 0, "-", "postprocessing"], [20, 0, 0, "-", "preprocessing"], [21, 0, 0, "-", "tasks"], [23, 0, 0, "-", "validation"]], "openstef.data_classes": [[10, 0, 0, "-", "data_prep"], [10, 0, 0, "-", "model_specifications"], [10, 0, 0, "-", "prediction_job"], [10, 0, 0, "-", "split_function"]], "openstef.data_classes.data_prep": [[10, 1, 1, "", "DataPrepDataClass"]], "openstef.data_classes.data_prep.DataPrepDataClass": [[10, 2, 1, "", "arguments"], [10, 2, 1, "", "klass"], [10, 3, 1, "", "load"]], "openstef.data_classes.model_specifications": [[10, 1, 1, "", "ModelSpecificationDataClass"]], "openstef.data_classes.model_specifications.ModelSpecificationDataClass": [[10, 2, 1, "", "feature_modules"], [10, 2, 1, "", "feature_names"], [10, 2, 1, "", "hyper_params"], [10, 2, 1, "", "id"]], "openstef.data_classes.prediction_job": [[10, 1, 1, "", "PredictionJobDataClass"]], "openstef.data_classes.prediction_job.PredictionJobDataClass": [[10, 1, 1, "", "Config"], [10, 2, 1, "", "alternative_forecast_model_pid"], [10, 2, 1, "", "backtest_split_func"], [10, 2, 1, "", "completeness_treshold"], [10, 2, 1, "", "data_prep_class"], [10, 2, 1, "", "default_modelspecs"], [10, 2, 1, "", "depends_on"], [10, 2, 1, "", "description"], [10, 2, 1, "", "flatliner_treshold"], [10, 2, 1, "", "forecast_type"], [10, 3, 1, "", "get"], [10, 2, 1, "", "horizon_minutes"], [10, 2, 1, "", "hub_height"], [10, 2, 1, "", "id"], [10, 2, 1, "", "lat"], [10, 2, 1, "", "lon"], [10, 2, 1, "", "minimal_table_length"], [10, 2, 1, "", "model"], [10, 2, 1, "", "n_turbines"], [10, 2, 1, "", "name"], [10, 2, 1, "", "pipelines_to_run"], [10, 2, 1, "", "quantiles"], [10, 2, 1, "", "resolution_minutes"], [10, 2, 1, "", "save_train_forecasts"], [10, 2, 1, "", "sid"], [10, 2, 1, "", "train_components"], [10, 2, 1, "", "train_horizons_minutes"], [10, 2, 1, "", "train_split_func"], [10, 2, 1, "", "turbine_type"]], "openstef.data_classes.prediction_job.PredictionJobDataClass.Config": [[10, 2, 1, "", "smart_union"]], "openstef.data_classes.split_function": [[10, 1, 1, "", "SplitFuncDataClass"]], "openstef.data_classes.split_function.SplitFuncDataClass": [[10, 2, 1, "", "arguments"], [10, 2, 1, "", "function"], [10, 3, 1, "", "load"]], "openstef.enums": [[9, 1, 1, "", "ForecastType"], [9, 1, 1, "", "MLModelType"], [9, 1, 1, "", "PipelineType"], [9, 1, 1, "", "TracyJobResult"]], "openstef.enums.ForecastType": [[9, 2, 1, "", "BASECASE"], [9, 2, 1, "", "DEMAND"], [9, 2, 1, "", "SOLAR"], [9, 2, 1, "", "WIND"]], "openstef.enums.MLModelType": [[9, 2, 1, "", "ARIMA"], [9, 2, 1, "", "LGB"], [9, 2, 1, "", "LINEAR"], [9, 2, 1, "", "ProLoaf"], [9, 2, 1, "", "XGB"], [9, 2, 1, "", "XGB_QUANTILE"]], "openstef.enums.PipelineType": [[9, 2, 1, "", "FORECAST"], [9, 2, 1, "", "HYPER_PARMATERS"], [9, 2, 1, "", "TRAIN"]], "openstef.enums.TracyJobResult": [[9, 2, 1, "", "FAILED"], [9, 2, 1, "", "SUCCESS"], [9, 2, 1, "", "UNKNOWN"]], "openstef.exceptions": [[9, 4, 1, "", "ComponentForecastTooShortHorizonError"], [9, 4, 1, "", "InputDataInsufficientError"], [9, 4, 1, "", "InputDataInvalidError"], [9, 4, 1, "", "InputDataWrongColumnOrderError"], [9, 4, 1, "", "ModelWithoutStDev"], [9, 4, 1, "", "NoPredictedLoadError"], [9, 4, 1, "", "NoRealisedLoadError"], [9, 4, 1, "", "OldModelHigherScoreError"], [9, 4, 1, "", "PredictionJobException"], [9, 4, 1, "", "SkipSaveTrainingForecasts"]], "openstef.feature_engineering": [[11, 0, 0, "-", "apply_features"], [11, 0, 0, "-", "data_preparation"], [11, 0, 0, "-", "feature_adder"], [11, 0, 0, "-", "feature_applicator"], [11, 0, 0, "-", "general"], [11, 0, 0, "-", "historic_features"], [11, 0, 0, "-", "holiday_features"], [11, 0, 0, "-", "lag_features"], [11, 0, 0, "-", "weather_features"]], "openstef.feature_engineering.apply_features": [[11, 5, 1, "", "apply_features"]], "openstef.feature_engineering.data_preparation": [[11, 1, 1, "", "ARDataPreparation"], [11, 1, 1, "", "AbstractDataPreparation"], [11, 1, 1, "", "LegacyDataPreparation"]], "openstef.feature_engineering.data_preparation.ARDataPreparation": [[11, 3, 1, "", "prepare_forecast_data"], [11, 3, 1, "", "prepare_train_data"]], "openstef.feature_engineering.data_preparation.AbstractDataPreparation": [[11, 3, 1, "", "check_model"], [11, 3, 1, "", "prepare_forecast_data"], [11, 3, 1, "", "prepare_train_data"]], "openstef.feature_engineering.data_preparation.LegacyDataPreparation": [[11, 3, 1, "", "prepare_forecast_data"], [11, 3, 1, "", "prepare_train_data"]], "openstef.feature_engineering.feature_adder": [[11, 1, 1, "", "FeatureAdder"], [11, 1, 1, "", "FeatureDispatcher"], [11, 1, 1, "", "ParsedFeature"], [11, 5, 1, "", "adders_from_module"], [11, 5, 1, "", "adders_from_modules"]], "openstef.feature_engineering.feature_adder.FeatureAdder": [[11, 3, 1, "", "apply_features"], [11, 6, 1, "", "name"], [11, 3, 1, "", "parse_feature_name"], [11, 3, 1, "", "required_features"]], "openstef.feature_engineering.feature_adder.FeatureDispatcher": [[11, 3, 1, "", "apply_features"], [11, 3, 1, "", "dispatch_features"]], "openstef.feature_engineering.feature_adder.ParsedFeature": [[11, 2, 1, "", "name"], [11, 2, 1, "", "params"]], "openstef.feature_engineering.feature_applicator": [[11, 1, 1, "", "AbstractFeatureApplicator"], [11, 1, 1, "", "OperationalPredictFeatureApplicator"], [11, 1, 1, "", "TrainFeatureApplicator"]], "openstef.feature_engineering.feature_applicator.AbstractFeatureApplicator": [[11, 3, 1, "", "add_features"]], "openstef.feature_engineering.feature_applicator.OperationalPredictFeatureApplicator": [[11, 3, 1, "", "add_features"]], "openstef.feature_engineering.feature_applicator.TrainFeatureApplicator": [[11, 3, 1, "", "add_features"]], "openstef.feature_engineering.general": [[11, 5, 1, "", "add_missing_feature_columns"], [11, 5, 1, "", "enforce_feature_order"], [11, 5, 1, "", "remove_non_requested_feature_columns"]], "openstef.feature_engineering.historic_features": [[11, 5, 1, "", "add_historic_load_as_a_feature"]], "openstef.feature_engineering.holiday_features": [[11, 5, 1, "", "check_for_bridge_day"], [11, 5, 1, "", "generate_holiday_feature_functions"]], "openstef.feature_engineering.lag_features": [[11, 5, 1, "", "extract_lag_features"], [11, 5, 1, "", "generate_lag_feature_functions"], [11, 5, 1, "", "generate_non_trivial_lag_times"], [11, 5, 1, "", "generate_trivial_lag_features"]], "openstef.feature_engineering.weather_features": [[11, 5, 1, "", "add_additional_solar_features"], [11, 5, 1, "", "add_additional_wind_features"], [11, 5, 1, "", "add_humidity_features"], [11, 5, 1, "", "calc_air_density"], [11, 5, 1, "", "calc_dewpoint"], [11, 5, 1, "", "calc_saturation_pressure"], [11, 5, 1, "", "calc_vapour_pressure"], [11, 5, 1, "", "calculate_dni"], [11, 5, 1, "", "calculate_gti"], [11, 5, 1, "", "calculate_windspeed_at_hubheight"], [11, 5, 1, "", "calculate_windturbine_power_output"], [11, 5, 1, "", "humidity_calculations"]], "openstef.metrics": [[12, 0, 0, "-", "figure"], [12, 0, 0, "-", "metrics"], [12, 0, 0, "-", "reporter"]], "openstef.metrics.figure": [[12, 5, 1, "", "convert_to_base64_data_uri"], [12, 5, 1, "", "plot_data_series"], [12, 5, 1, "", "plot_feature_importance"]], "openstef.metrics.metrics": [[12, 5, 1, "", "bias"], [12, 5, 1, "", "frac_in_stdev"], [12, 5, 1, "", "franks_skill_score"], [12, 5, 1, "", "franks_skill_score_peaks"], [12, 5, 1, "", "get_eval_metric_function"], [12, 5, 1, "", "mae"], [12, 5, 1, "", "nsme"], [12, 5, 1, "", "r_mae"], [12, 5, 1, "", "r_mae_highest"], [12, 5, 1, "", "r_mae_lowest"], [12, 5, 1, "", "r_mne_highest"], [12, 5, 1, "", "r_mpe_highest"], [12, 5, 1, "", "rmse"], [12, 5, 1, "", "skill_score"], [12, 5, 1, "", "skill_score_positive_peaks"], [12, 5, 1, "", "xgb_quantile_eval"], [12, 5, 1, "", "xgb_quantile_obj"]], "openstef.metrics.reporter": [[12, 1, 1, "", "Report"], [12, 1, 1, "", "Reporter"]], "openstef.metrics.reporter.Reporter": [[12, 3, 1, "", "generate_report"], [12, 3, 1, "", "get_metrics"], [12, 3, 1, "", "write_report_to_disk"]], "openstef.model": [[13, 0, 0, "-", "basecase"], [13, 0, 0, "-", "confidence_interval_applicator"], [13, 0, 0, "-", "fallback"], [14, 0, 0, "-", "metamodels"], [13, 0, 0, "-", "model_creator"], [13, 0, 0, "-", "objective"], [13, 0, 0, "-", "objective_creator"], [15, 0, 0, "-", "regressors"], [13, 0, 0, "-", "serializer"], [13, 0, 0, "-", "standard_deviation_generator"]], "openstef.model.basecase": [[13, 1, 1, "", "BaseCaseModel"]], "openstef.model.basecase.BaseCaseModel": [[13, 6, 1, "", "can_predict_quantiles"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "make_basecase_forecast"], [13, 3, 1, "", "predict"]], "openstef.model.confidence_interval_applicator": [[13, 1, 1, "", "ConfidenceIntervalApplicator"]], "openstef.model.confidence_interval_applicator.ConfidenceIntervalApplicator": [[13, 3, 1, "", "add_confidence_interval"]], "openstef.model.fallback": [[13, 5, 1, "", "generate_fallback"]], "openstef.model.metamodels": [[14, 0, 0, "-", "grouped_regressor"], [14, 0, 0, "-", "missing_values_handler"]], "openstef.model.metamodels.grouped_regressor": [[14, 1, 1, "", "GroupedRegressor"]], "openstef.model.metamodels.grouped_regressor.GroupedRegressor": [[14, 2, 1, "", "estimators_"], [14, 2, 1, "", "feature_names_"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "grouped_compute"], [14, 3, 1, "", "predict"]], "openstef.model.metamodels.missing_values_handler": [[14, 1, 1, "", "MissingValuesHandler"]], "openstef.model.metamodels.missing_values_handler.MissingValuesHandler": [[14, 2, 1, "", "feature_importances_"], [14, 2, 1, "", "feature_names"], [14, 3, 1, "", "fit"], [14, 2, 1, "", "imputer_"], [14, 2, 1, "", "n_features_in_"], [14, 2, 1, "", "non_null_columns_"], [14, 2, 1, "", "pipeline_"], [14, 3, 1, "", "predict"], [14, 2, 1, "", "regressor_"]], "openstef.model.model_creator": [[13, 1, 1, "", "ModelCreator"]], "openstef.model.model_creator.ModelCreator": [[13, 2, 1, "", "MODEL_CONSTRUCTORS"], [13, 3, 1, "", "create_model"]], "openstef.model.objective": [[13, 1, 1, "", "ARIMARegressorObjective"], [13, 1, 1, "", "LGBRegressorObjective"], [13, 1, 1, "", "LinearRegressorObjective"], [13, 1, 1, "", "ProLoafRegressorObjective"], [13, 1, 1, "", "RegressorObjective"], [13, 1, 1, "", "XGBQuantileRegressorObjective"], [13, 1, 1, "", "XGBRegressorObjective"]], "openstef.model.objective.ARIMARegressorObjective": [[13, 3, 1, "", "get_params"]], "openstef.model.objective.LGBRegressorObjective": [[13, 3, 1, "", "get_params"], [13, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective.LinearRegressorObjective": [[13, 3, 1, "", "get_params"]], "openstef.model.objective.ProLoafRegressorObjective": [[13, 3, 1, "", "get_params"], [13, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective.RegressorObjective": [[13, 3, 1, "", "create_report"], [13, 3, 1, "", "get_default_values"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "get_pruning_callback"], [13, 3, 1, "", "get_trial_track"]], "openstef.model.objective.XGBQuantileRegressorObjective": [[13, 3, 1, "", "get_params"], [13, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective.XGBRegressorObjective": [[13, 3, 1, "", "get_default_values"], [13, 3, 1, "", "get_params"], [13, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective_creator": [[13, 1, 1, "", "ObjectiveCreator"]], "openstef.model.objective_creator.ObjectiveCreator": [[13, 2, 1, "", "OBJECTIVES"], [13, 3, 1, "", "create_objective"]], "openstef.model.regressors": [[15, 0, 0, "-", "arima"], [15, 0, 0, "-", "custom_regressor"], [15, 0, 0, "-", "dazls"], [15, 0, 0, "-", "lgbm"], [15, 0, 0, "-", "linear"], [15, 0, 0, "-", "regressor"], [15, 0, 0, "-", "xgb"], [15, 0, 0, "-", "xgb_quantile"]], "openstef.model.regressors.arima": [[15, 1, 1, "", "ARIMAOpenstfRegressor"]], "openstef.model.regressors.arima.ARIMAOpenstfRegressor": [[15, 6, 1, "", "can_predict_quantiles"], [15, 6, 1, "", "feature_names"], [15, 3, 1, "", "fit"], [15, 3, 1, "", "predict"], [15, 3, 1, "", "predict_quantile"], [15, 3, 1, "", "score"], [15, 3, 1, "", "set_feature_importance"], [15, 3, 1, "", "update_historic_data"]], "openstef.model.regressors.custom_regressor": [[15, 1, 1, "", "CustomOpenstfRegressor"], [15, 5, 1, "", "create_custom_objective"], [15, 5, 1, "", "is_custom_type"], [15, 5, 1, "", "load_custom_model"]], "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor": [[15, 3, 1, "", "objective"], [15, 3, 1, "", "valid_kwargs"]], "openstef.model.regressors.dazls": [[15, 1, 1, "", "Dazls"]], "openstef.model.regressors.dazls.Dazls": [[15, 3, 1, "", "fit"], [15, 3, 1, "", "predict"], [15, 3, 1, "", "score"]], "openstef.model.regressors.lgbm": [[15, 1, 1, "", "LGBMOpenstfRegressor"]], "openstef.model.regressors.lgbm.LGBMOpenstfRegressor": [[15, 6, 1, "", "can_predict_quantiles"], [15, 6, 1, "", "feature_names"], [15, 2, 1, "", "gain_importance_name"], [15, 2, 1, "", "weight_importance_name"]], "openstef.model.regressors.linear": [[15, 1, 1, "", "LinearOpenstfRegressor"], [15, 1, 1, "", "LinearRegressor"]], "openstef.model.regressors.linear.LinearOpenstfRegressor": [[15, 6, 1, "", "can_predict_quantiles"], [15, 6, 1, "", "feature_names"], [15, 3, 1, "", "fit"]], "openstef.model.regressors.regressor": [[15, 1, 1, "", "OpenstfRegressor"]], "openstef.model.regressors.regressor.OpenstfRegressor": [[15, 6, 1, "", "can_predict_quantiles"], [15, 6, 1, "", "feature_names"], [15, 3, 1, "", "fit"], [15, 3, 1, "", "predict"], [15, 3, 1, "", "score"], [15, 3, 1, "", "set_feature_importance"]], "openstef.model.regressors.xgb": [[15, 1, 1, "", "XGBOpenstfRegressor"]], "openstef.model.regressors.xgb.XGBOpenstfRegressor": [[15, 6, 1, "", "can_predict_quantiles"], [15, 6, 1, "", "feature_names"], [15, 2, 1, "", "gain_importance_name"], [15, 2, 1, "", "weight_importance_name"]], "openstef.model.regressors.xgb_quantile": [[15, 1, 1, "", "XGBQuantileOpenstfRegressor"]], "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor": [[15, 6, 1, "", "can_predict_quantiles"], [15, 6, 1, "", "feature_names"], [15, 3, 1, "", "fit"], [15, 3, 1, "", "get_feature_importances_from_booster"], [15, 3, 1, "", "predict"]], "openstef.model.serializer": [[13, 1, 1, "", "MLflowSerializer"]], "openstef.model.serializer.MLflowSerializer": [[13, 3, 1, "", "get_model_age"], [13, 3, 1, "", "load_model"], [13, 3, 1, "", "remove_old_models"], [13, 3, 1, "", "save_model"]], "openstef.model.standard_deviation_generator": [[13, 1, 1, "", "StandardDeviationGenerator"]], "openstef.model.standard_deviation_generator.StandardDeviationGenerator": [[13, 3, 1, "", "generate_standard_deviation_data"]], "openstef.model_selection": [[16, 0, 0, "-", "model_selection"]], "openstef.model_selection.model_selection": [[16, 5, 1, "", "backtest_split_default"], [16, 5, 1, "", "group_kfold"], [16, 5, 1, "", "random_sample"], [16, 5, 1, "", "sample_indices_train_val"], [16, 5, 1, "", "split_data_train_validation_test"]], "openstef.monitoring": [[17, 0, 0, "-", "performance_meter"], [17, 0, 0, "-", "teams"]], "openstef.monitoring.performance_meter": [[17, 1, 1, "", "PerformanceMeter"]], "openstef.monitoring.performance_meter.PerformanceMeter": [[17, 3, 1, "", "checkpoint"], [17, 3, 1, "", "complete_level"], [17, 3, 1, "", "start_level"]], "openstef.monitoring.teams": [[17, 5, 1, "", "build_sql_query_string"], [17, 5, 1, "", "format_message"], [17, 5, 1, "", "get_card_section"], [17, 5, 1, "", "post_teams"]], "openstef.pipeline": [[18, 0, 0, "-", "create_basecase_forecast"], [18, 0, 0, "-", "create_component_forecast"], [18, 0, 0, "-", "create_forecast"], [18, 0, 0, "-", "optimize_hyperparameters"], [18, 0, 0, "-", "train_create_forecast_backtest"], [18, 0, 0, "-", "train_model"], [18, 0, 0, "-", "utils"]], "openstef.pipeline.create_basecase_forecast": [[18, 5, 1, "", "create_basecase_forecast_pipeline"], [18, 5, 1, "", "generate_basecase_confidence_interval"]], "openstef.pipeline.create_component_forecast": [[18, 5, 1, "", "create_components_forecast_pipeline"], [18, 5, 1, "", "create_input"]], "openstef.pipeline.create_forecast": [[18, 5, 1, "", "create_forecast_pipeline"], [18, 5, 1, "", "create_forecast_pipeline_core"]], "openstef.pipeline.optimize_hyperparameters": [[18, 5, 1, "", "optimize_hyperparameters_pipeline"], [18, 5, 1, "", "optimize_hyperparameters_pipeline_core"], [18, 5, 1, "", "optuna_optimization"]], "openstef.pipeline.train_create_forecast_backtest": [[18, 5, 1, "", "train_model_and_forecast_back_test"], [18, 5, 1, "", "train_model_and_forecast_test_core"]], "openstef.pipeline.train_model": [[18, 5, 1, "", "train_model_pipeline"], [18, 5, 1, "", "train_model_pipeline_core"], [18, 5, 1, "", "train_pipeline_common"], [18, 5, 1, "", "train_pipeline_step_compute_features"], [18, 5, 1, "", "train_pipeline_step_split_data"], [18, 5, 1, "", "train_pipeline_step_train_model"]], "openstef.pipeline.utils": [[18, 5, 1, "", "generate_forecast_datetime_range"]], "openstef.postprocessing": [[19, 0, 0, "-", "postprocessing"]], "openstef.postprocessing.postprocessing": [[19, 5, 1, "", "add_components_base_case_forecast"], [19, 5, 1, "", "add_prediction_job_properties_to_forecast"], [19, 5, 1, "", "calculate_wind_power"], [19, 5, 1, "", "normalize_and_convert_weather_data_for_splitting"], [19, 5, 1, "", "post_process_wind_solar"], [19, 5, 1, "", "split_forecast_in_components"]], "openstef.preprocessing": [[20, 0, 0, "-", "preprocessing"]], "openstef.preprocessing.preprocessing": [[20, 5, 1, "", "replace_repeated_values_with_nan"]], "openstef.tasks": [[21, 0, 0, "-", "calculate_kpi"], [21, 0, 0, "-", "create_basecase_forecast"], [21, 0, 0, "-", "create_components_forecast"], [21, 0, 0, "-", "create_forecast"], [21, 0, 0, "-", "create_solar_forecast"], [21, 0, 0, "-", "create_wind_forecast"], [21, 0, 0, "-", "optimize_hyperparameters"], [21, 0, 0, "-", "run_tracy"], [21, 0, 0, "-", "split_forecast"], [21, 0, 0, "-", "train_model"], [22, 0, 0, "-", "utils"]], "openstef.tasks.calculate_kpi": [[21, 5, 1, "", "calc_kpi_for_specific_pid"], [21, 5, 1, "", "check_kpi_task"], [21, 5, 1, "", "main"], [21, 5, 1, "", "set_incomplete_kpi_to_nan"]], "openstef.tasks.create_basecase_forecast": [[21, 5, 1, "", "create_basecase_forecast_task"], [21, 5, 1, "", "main"]], "openstef.tasks.create_components_forecast": [[21, 5, 1, "", "create_components_forecast_task"], [21, 5, 1, "", "main"]], "openstef.tasks.create_forecast": [[21, 5, 1, "", "create_forecast_task"], [21, 5, 1, "", "main"]], "openstef.tasks.create_solar_forecast": [[21, 5, 1, "", "apply_fit_insol"], [21, 5, 1, "", "apply_persistence"], [21, 5, 1, "", "calc_norm"], [21, 5, 1, "", "combine_forecasts"], [21, 5, 1, "", "fides"], [21, 5, 1, "", "main"], [21, 5, 1, "", "make_solar_prediction_pj"]], "openstef.tasks.create_wind_forecast": [[21, 5, 1, "", "main"], [21, 5, 1, "", "make_wind_forecast_pj"]], "openstef.tasks.optimize_hyperparameters": [[21, 5, 1, "", "main"], [21, 5, 1, "", "optimize_hyperparameters_task"]], "openstef.tasks.run_tracy": [[21, 5, 1, "", "main"], [21, 5, 1, "", "run_tracy"], [21, 5, 1, "", "run_tracy_job"]], "openstef.tasks.split_forecast": [[21, 5, 1, "", "convert_coefdict_to_coefsdf"], [21, 5, 1, "", "determine_invalid_coefs"], [21, 5, 1, "", "find_components"], [21, 5, 1, "", "main"], [21, 5, 1, "", "split_forecast_task"]], "openstef.tasks.train_model": [[21, 5, 1, "", "main"], [21, 5, 1, "", "train_model_task"]], "openstef.tasks.utils": [[22, 0, 0, "-", "dependencies"], [22, 0, 0, "-", "predictionjobloop"], [22, 0, 0, "-", "taskcontext"]], "openstef.tasks.utils.dependencies": [[22, 5, 1, "", "build_graph_structure"], [22, 5, 1, "", "build_nx_graph"], [22, 5, 1, "", "find_groups"], [22, 5, 1, "", "has_dependencies"]], "openstef.tasks.utils.predictionjobloop": [[22, 1, 1, "", "PredictionJobLoop"]], "openstef.tasks.utils.predictionjobloop.PredictionJobLoop": [[22, 3, 1, "", "map"]], "openstef.tasks.utils.taskcontext": [[22, 1, 1, "", "TaskContext"]], "openstef.validation": [[23, 0, 0, "-", "validation"]], "openstef.validation.validation": [[23, 5, 1, "", "calc_completeness_dataframe"], [23, 5, 1, "", "calc_completeness_features"], [23, 5, 1, "", "check_data_for_each_trafo"], [23, 5, 1, "", "drop_target_na"], [23, 5, 1, "", "find_nonzero_flatliner"], [23, 5, 1, "", "find_zero_flatliner"], [23, 5, 1, "", "is_data_sufficient"], [23, 5, 1, "", "validate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"about": 0, "openstef": [0, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "featur": 0, "api": 1, "refer": 1, "commun": 2, "technic": 2, "steer": 2, "committe": 2, "roadmap": 2, "contribut": [2, 6], "support": 2, "concept": 3, "softwar": 3, "architectur": 3, "applic": [3, 26], "domain": [3, 5], "adapt": [3, 5], "zero": [3, 5], "shot": [3, 5], "learn": [3, 5], "sequenc": [3, 5], "dazl": [3, 5, 15], "overview": [3, 7, 25], "relat": [3, 25], "databas": [3, 7, 25], "schema": [3, 7, 25], "timeseri": [3, 7], "welcom": 6, "document": 6, "more": 6, "licens": 6, "packag": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "subpackag": [9, 13, 21], "submodul": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "enum": 9, "modul": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "except": 9, "content": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], "data_class": 10, "data_prep": 10, "model_specif": 10, "prediction_job": 10, "split_funct": 10, "feature_engin": 11, "apply_featur": 11, "data_prepar": 11, "feature_add": 11, "feature_appl": 11, "gener": 11, "historic_featur": 11, "holiday_featur": 11, "lag_featur": 11, "weather_featur": 11, "metric": 12, "figur": 12, "report": 12, "model": [13, 14, 15, 24], "basecas": 13, "confidence_interval_appl": 13, "fallback": 13, "model_cr": 13, "object": 13, "objective_cr": 13, "serial": 13, "standard_deviation_gener": 13, "metamodel": 14, "grouped_regressor": 14, "missing_values_handl": 14, "regressor": 15, "arima": 15, "custom_regressor": 15, "lgbm": 15, "linear": 15, "proloaf": 15, "xgb": 15, "xgb_quantil": 15, "model_select": 16, "monitor": 17, "performance_met": 17, "team": 17, "pipelin": [18, 24, 26], "create_basecase_forecast": [18, 21], "create_component_forecast": 18, "create_forecast": [18, 21], "optimize_hyperparamet": [18, 21], "train_create_forecast_backtest": 18, "train_model": [18, 21], "util": [18, 22], "postprocess": 19, "preprocess": 20, "task": [21, 22, 24], "calculate_kpi": 21, "create_components_forecast": 21, "create_solar_forecast": 21, "create_wind_forecast": 21, "run_traci": 21, "split_forecast": 21, "depend": 22, "predictionjobloop": 22, "taskcontext": 22, "valid": 23, "user": [24, 26], "guid": [24, 26], "implement": [24, 26], "train": 24, "creat": 24, "forecast": [24, 26], "optim": 24, "hyperparamet": 24, "compon": 24, "base": 24, "case": 24, "high": 26, "level": 26, "function": 26, "full": 26, "exampl": 26, "jupyt": 26, "notebook": 26}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"About OpenSTEF": [[0, "about-openstef"]], "Features:": [[0, "features"]], "API reference": [[1, "api-reference"]], "Community": [[2, "community"]], "Technical Steering Committee": [[2, "technical-steering-committee"]], "Roadmap": [[2, "roadmap"]], "Contributing": [[2, "contributing"], [6, "contributing"]], "Support": [[2, "support"]], "Concepts": [[3, "concepts"]], "Software architecture": [[3, "software-architecture"]], "Application architecture": [[3, "application-architecture"]], "Domain Adaptation for Zero Shot Learning in Sequence (DAZLS)": [[3, "domain-adaptation-for-zero-shot-learning-in-sequence-dazls"], [5, "domain-adaptation-for-zero-shot-learning-in-sequence-dazls"]], "Overview of relational database schema": [[3, "overview-of-relational-database-schema"], [25, "overview-of-relational-database-schema"]], "Overview of timeseries database schema": [[3, "overview-of-timeseries-database-schema"], [7, "overview-of-timeseries-database-schema"]], "Welcome to the documentation of OpenSTEF!": [[6, "welcome-to-the-documentation-of-openstef"]], "More on OpenSTEF": [[6, "more-on-openstef"]], "License": [[6, "license"]], "openstef": [[8, "openstef"]], "openstef package": [[9, "openstef-package"]], "Subpackages": [[9, "subpackages"], [13, "subpackages"], [21, "subpackages"]], "Submodules": [[9, "submodules"], [10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"]], "openstef.enums module": [[9, "module-openstef.enums"]], "openstef.exceptions module": [[9, "module-openstef.exceptions"]], "Module contents": [[9, "module-openstef"], [10, "module-openstef.data_classes"], [11, "module-openstef.feature_engineering"], [12, "module-openstef.metrics"], [13, "module-openstef.model"], [14, "module-openstef.model.metamodels"], [15, "module-openstef.model.regressors"], [16, "module-openstef.model_selection"], [17, "module-openstef.monitoring"], [18, "module-openstef.pipeline"], [19, "module-openstef.postprocessing"], [20, "module-openstef.preprocessing"], [21, "module-openstef.tasks"], [22, "module-openstef.tasks.utils"], [23, "module-openstef.validation"]], "openstef.data_classes package": [[10, "openstef-data-classes-package"]], "openstef.data_classes.data_prep module": [[10, "module-openstef.data_classes.data_prep"]], "openstef.data_classes.model_specifications module": [[10, "module-openstef.data_classes.model_specifications"]], "openstef.data_classes.prediction_job module": [[10, "module-openstef.data_classes.prediction_job"]], "openstef.data_classes.split_function module": [[10, "module-openstef.data_classes.split_function"]], "openstef.feature_engineering package": [[11, "openstef-feature-engineering-package"]], "openstef.feature_engineering.apply_features module": [[11, "module-openstef.feature_engineering.apply_features"]], "openstef.feature_engineering.data_preparation module": [[11, "module-openstef.feature_engineering.data_preparation"]], "openstef.feature_engineering.feature_adder module": [[11, "module-openstef.feature_engineering.feature_adder"]], "openstef.feature_engineering.feature_applicator module": [[11, "module-openstef.feature_engineering.feature_applicator"]], "openstef.feature_engineering.general module": [[11, "module-openstef.feature_engineering.general"]], "openstef.feature_engineering.historic_features module": [[11, "module-openstef.feature_engineering.historic_features"]], "openstef.feature_engineering.holiday_features module": [[11, "module-openstef.feature_engineering.holiday_features"]], "openstef.feature_engineering.lag_features module": [[11, "module-openstef.feature_engineering.lag_features"]], "openstef.feature_engineering.weather_features module": [[11, "module-openstef.feature_engineering.weather_features"]], "openstef.metrics package": [[12, "openstef-metrics-package"]], "openstef.metrics.figure module": [[12, "module-openstef.metrics.figure"]], "openstef.metrics.metrics module": [[12, "module-openstef.metrics.metrics"]], "openstef.metrics.reporter module": [[12, "module-openstef.metrics.reporter"]], "openstef.model package": [[13, "openstef-model-package"]], "openstef.model.basecase module": [[13, "module-openstef.model.basecase"]], "openstef.model.confidence_interval_applicator module": [[13, "module-openstef.model.confidence_interval_applicator"]], "openstef.model.fallback module": [[13, "module-openstef.model.fallback"]], "openstef.model.model_creator module": [[13, "module-openstef.model.model_creator"]], "openstef.model.objective module": [[13, "module-openstef.model.objective"]], "openstef.model.objective_creator module": [[13, "module-openstef.model.objective_creator"]], "openstef.model.serializer module": [[13, "module-openstef.model.serializer"]], "openstef.model.standard_deviation_generator module": [[13, "module-openstef.model.standard_deviation_generator"]], "openstef.model.metamodels package": [[14, "openstef-model-metamodels-package"]], "openstef.model.metamodels.grouped_regressor module": [[14, "module-openstef.model.metamodels.grouped_regressor"]], "openstef.model.metamodels.missing_values_handler module": [[14, "module-openstef.model.metamodels.missing_values_handler"]], "openstef.model.regressors package": [[15, "openstef-model-regressors-package"]], "openstef.model.regressors.arima module": [[15, "module-openstef.model.regressors.arima"]], "openstef.model.regressors.custom_regressor module": [[15, "module-openstef.model.regressors.custom_regressor"]], "openstef.model.regressors.dazls module": [[15, "module-openstef.model.regressors.dazls"]], "openstef.model.regressors.lgbm module": [[15, "module-openstef.model.regressors.lgbm"]], "openstef.model.regressors.linear module": [[15, "module-openstef.model.regressors.linear"]], "openstef.model.regressors.proloaf module": [[15, "openstef-model-regressors-proloaf-module"]], "openstef.model.regressors.regressor module": [[15, "module-openstef.model.regressors.regressor"]], "openstef.model.regressors.xgb module": [[15, "module-openstef.model.regressors.xgb"]], "openstef.model.regressors.xgb_quantile module": [[15, "module-openstef.model.regressors.xgb_quantile"]], "openstef.model_selection package": [[16, "openstef-model-selection-package"]], "openstef.model_selection.model_selection module": [[16, "module-openstef.model_selection.model_selection"]], "openstef.monitoring package": [[17, "openstef-monitoring-package"]], "openstef.monitoring.performance_meter module": [[17, "module-openstef.monitoring.performance_meter"]], "openstef.monitoring.teams module": [[17, "module-openstef.monitoring.teams"]], "openstef.pipeline package": [[18, "openstef-pipeline-package"]], "openstef.pipeline.create_basecase_forecast module": [[18, "module-openstef.pipeline.create_basecase_forecast"]], "openstef.pipeline.create_component_forecast module": [[18, "module-openstef.pipeline.create_component_forecast"]], "openstef.pipeline.create_forecast module": [[18, "module-openstef.pipeline.create_forecast"]], "openstef.pipeline.optimize_hyperparameters module": [[18, "module-openstef.pipeline.optimize_hyperparameters"]], "openstef.pipeline.train_create_forecast_backtest module": [[18, "module-openstef.pipeline.train_create_forecast_backtest"]], "openstef.pipeline.train_model module": [[18, "module-openstef.pipeline.train_model"]], "openstef.pipeline.utils module": [[18, "module-openstef.pipeline.utils"]], "openstef.postprocessing package": [[19, "openstef-postprocessing-package"]], "openstef.postprocessing.postprocessing module": [[19, "module-openstef.postprocessing.postprocessing"]], "openstef.preprocessing package": [[20, "openstef-preprocessing-package"]], "openstef.preprocessing.preprocessing module": [[20, "module-openstef.preprocessing.preprocessing"]], "openstef.tasks package": [[21, "openstef-tasks-package"]], "openstef.tasks.calculate_kpi module": [[21, "module-openstef.tasks.calculate_kpi"]], "openstef.tasks.create_basecase_forecast module": [[21, "module-openstef.tasks.create_basecase_forecast"]], "openstef.tasks.create_components_forecast module": [[21, "module-openstef.tasks.create_components_forecast"]], "openstef.tasks.create_forecast module": [[21, "module-openstef.tasks.create_forecast"]], "openstef.tasks.create_solar_forecast module": [[21, "module-openstef.tasks.create_solar_forecast"]], "openstef.tasks.create_wind_forecast module": [[21, "module-openstef.tasks.create_wind_forecast"]], "openstef.tasks.optimize_hyperparameters module": [[21, "module-openstef.tasks.optimize_hyperparameters"]], "openstef.tasks.run_tracy module": [[21, "module-openstef.tasks.run_tracy"]], "openstef.tasks.split_forecast module": [[21, "module-openstef.tasks.split_forecast"]], "openstef.tasks.train_model module": [[21, "module-openstef.tasks.train_model"]], "openstef.tasks.utils package": [[22, "openstef-tasks-utils-package"]], "openstef.tasks.utils.dependencies module": [[22, "module-openstef.tasks.utils.dependencies"]], "openstef.tasks.utils.predictionjobloop module": [[22, "module-openstef.tasks.utils.predictionjobloop"]], "openstef.tasks.utils.taskcontext module": [[22, "module-openstef.tasks.utils.taskcontext"]], "openstef.validation package": [[23, "openstef-validation-package"]], "openstef.validation.validation module": [[23, "module-openstef.validation.validation"]], "Pipelines user guide": [[24, "pipelines-user-guide"]], "Task implementation": [[24, "task-implementation"]], "Train model task implementation": [[24, "train-model-task-implementation"]], "Create forecast task implementation": [[24, "create-forecast-task-implementation"]], "Optimize hyperparameters task implementation": [[24, "optimize-hyperparameters-task-implementation"]], "Create components forecast task implementation": [[24, "create-components-forecast-task-implementation"]], "Create base case forecast task implementation": [[24, "create-base-case-forecast-task-implementation"]], "Pipeline implementation": [[24, "pipeline-implementation"]], "User guides": [[26, "user-guides"]], "Pipelines - high level functionality": [[26, "pipelines-high-level-functionality"]], "Forecasting application - full implementation": [[26, "forecasting-application-full-implementation"]], "Example Jupyter notebooks": [[26, "example-jupyter-notebooks"]]}, "indexentries": {"arima (openstef.enums.mlmodeltype attribute)": [[9, "openstef.enums.MLModelType.ARIMA"]], "basecase (openstef.enums.forecasttype attribute)": [[9, "openstef.enums.ForecastType.BASECASE"]], "componentforecasttooshorthorizonerror": [[9, "openstef.exceptions.ComponentForecastTooShortHorizonError"]], "demand (openstef.enums.forecasttype attribute)": [[9, "openstef.enums.ForecastType.DEMAND"]], "failed (openstef.enums.tracyjobresult attribute)": [[9, "openstef.enums.TracyJobResult.FAILED"]], "forecast (openstef.enums.pipelinetype attribute)": [[9, "openstef.enums.PipelineType.FORECAST"]], "forecasttype (class in openstef.enums)": [[9, "openstef.enums.ForecastType"]], "hyper_parmaters (openstef.enums.pipelinetype attribute)": [[9, "openstef.enums.PipelineType.HYPER_PARMATERS"]], "inputdatainsufficienterror": [[9, "openstef.exceptions.InputDataInsufficientError"]], "inputdatainvaliderror": [[9, "openstef.exceptions.InputDataInvalidError"]], "inputdatawrongcolumnordererror": [[9, "openstef.exceptions.InputDataWrongColumnOrderError"]], "lgb (openstef.enums.mlmodeltype attribute)": [[9, "openstef.enums.MLModelType.LGB"]], "linear (openstef.enums.mlmodeltype attribute)": [[9, "openstef.enums.MLModelType.LINEAR"]], "mlmodeltype (class in openstef.enums)": [[9, "openstef.enums.MLModelType"]], "modelwithoutstdev": [[9, "openstef.exceptions.ModelWithoutStDev"]], "nopredictedloaderror": [[9, "openstef.exceptions.NoPredictedLoadError"]], "norealisedloaderror": [[9, "openstef.exceptions.NoRealisedLoadError"]], "oldmodelhigherscoreerror": [[9, "openstef.exceptions.OldModelHigherScoreError"]], "pipelinetype (class in openstef.enums)": [[9, "openstef.enums.PipelineType"]], "predictionjobexception": [[9, "openstef.exceptions.PredictionJobException"]], "proloaf (openstef.enums.mlmodeltype attribute)": [[9, "openstef.enums.MLModelType.ProLoaf"]], "solar (openstef.enums.forecasttype attribute)": [[9, "openstef.enums.ForecastType.SOLAR"]], "success (openstef.enums.tracyjobresult attribute)": [[9, "openstef.enums.TracyJobResult.SUCCESS"]], "skipsavetrainingforecasts": [[9, "openstef.exceptions.SkipSaveTrainingForecasts"]], "train (openstef.enums.pipelinetype attribute)": [[9, "openstef.enums.PipelineType.TRAIN"]], "tracyjobresult (class in openstef.enums)": [[9, "openstef.enums.TracyJobResult"]], "unknown (openstef.enums.tracyjobresult attribute)": [[9, "openstef.enums.TracyJobResult.UNKNOWN"]], "wind (openstef.enums.forecasttype attribute)": [[9, "openstef.enums.ForecastType.WIND"]], "xgb (openstef.enums.mlmodeltype attribute)": [[9, "openstef.enums.MLModelType.XGB"]], "xgb_quantile (openstef.enums.mlmodeltype attribute)": [[9, "openstef.enums.MLModelType.XGB_QUANTILE"]], "module": [[9, "module-openstef"], [9, "module-openstef.enums"], [9, "module-openstef.exceptions"], [10, "module-openstef.data_classes"], [10, "module-openstef.data_classes.data_prep"], [10, "module-openstef.data_classes.model_specifications"], [10, "module-openstef.data_classes.prediction_job"], [10, "module-openstef.data_classes.split_function"], [11, "module-openstef.feature_engineering"], [11, "module-openstef.feature_engineering.apply_features"], [11, "module-openstef.feature_engineering.data_preparation"], [11, "module-openstef.feature_engineering.feature_adder"], [11, "module-openstef.feature_engineering.feature_applicator"], [11, "module-openstef.feature_engineering.general"], [11, "module-openstef.feature_engineering.historic_features"], [11, "module-openstef.feature_engineering.holiday_features"], [11, "module-openstef.feature_engineering.lag_features"], [11, "module-openstef.feature_engineering.weather_features"], [12, "module-openstef.metrics"], [12, "module-openstef.metrics.figure"], [12, "module-openstef.metrics.metrics"], [12, "module-openstef.metrics.reporter"], [13, "module-openstef.model"], [13, "module-openstef.model.basecase"], [13, "module-openstef.model.confidence_interval_applicator"], [13, "module-openstef.model.fallback"], [13, "module-openstef.model.model_creator"], [13, "module-openstef.model.objective"], [13, "module-openstef.model.objective_creator"], [13, "module-openstef.model.serializer"], [13, "module-openstef.model.standard_deviation_generator"], [14, "module-openstef.model.metamodels"], [14, "module-openstef.model.metamodels.grouped_regressor"], [14, "module-openstef.model.metamodels.missing_values_handler"], [15, "module-openstef.model.regressors"], [15, "module-openstef.model.regressors.arima"], [15, "module-openstef.model.regressors.custom_regressor"], [15, "module-openstef.model.regressors.dazls"], [15, "module-openstef.model.regressors.lgbm"], [15, "module-openstef.model.regressors.linear"], [15, "module-openstef.model.regressors.regressor"], [15, "module-openstef.model.regressors.xgb"], [15, "module-openstef.model.regressors.xgb_quantile"], [16, "module-openstef.model_selection"], [16, "module-openstef.model_selection.model_selection"], [17, "module-openstef.monitoring"], [17, "module-openstef.monitoring.performance_meter"], [17, "module-openstef.monitoring.teams"], [18, "module-openstef.pipeline"], [18, "module-openstef.pipeline.create_basecase_forecast"], [18, "module-openstef.pipeline.create_component_forecast"], [18, "module-openstef.pipeline.create_forecast"], [18, "module-openstef.pipeline.optimize_hyperparameters"], [18, "module-openstef.pipeline.train_create_forecast_backtest"], [18, "module-openstef.pipeline.train_model"], [18, "module-openstef.pipeline.utils"], [19, "module-openstef.postprocessing"], [19, "module-openstef.postprocessing.postprocessing"], [20, "module-openstef.preprocessing"], [20, "module-openstef.preprocessing.preprocessing"], [21, "module-openstef.tasks"], [21, "module-openstef.tasks.calculate_kpi"], [21, "module-openstef.tasks.create_basecase_forecast"], [21, "module-openstef.tasks.create_components_forecast"], [21, "module-openstef.tasks.create_forecast"], [21, "module-openstef.tasks.create_solar_forecast"], [21, "module-openstef.tasks.create_wind_forecast"], [21, "module-openstef.tasks.optimize_hyperparameters"], [21, "module-openstef.tasks.run_tracy"], [21, "module-openstef.tasks.split_forecast"], [21, "module-openstef.tasks.train_model"], [22, "module-openstef.tasks.utils"], [22, "module-openstef.tasks.utils.dependencies"], [22, "module-openstef.tasks.utils.predictionjobloop"], [22, "module-openstef.tasks.utils.taskcontext"], [23, "module-openstef.validation"], [23, "module-openstef.validation.validation"]], "openstef": [[9, "module-openstef"]], "openstef.enums": [[9, "module-openstef.enums"]], "openstef.exceptions": [[9, "module-openstef.exceptions"]], "dataprepdataclass (class in openstef.data_classes.data_prep)": [[10, "openstef.data_classes.data_prep.DataPrepDataClass"]], "modelspecificationdataclass (class in openstef.data_classes.model_specifications)": [[10, "openstef.data_classes.model_specifications.ModelSpecificationDataClass"]], "predictionjobdataclass (class in openstef.data_classes.prediction_job)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass"]], "predictionjobdataclass.config (class in openstef.data_classes.prediction_job)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.Config"]], "splitfuncdataclass (class in openstef.data_classes.split_function)": [[10, "openstef.data_classes.split_function.SplitFuncDataClass"]], "alternative_forecast_model_pid (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.alternative_forecast_model_pid"]], "arguments (openstef.data_classes.data_prep.dataprepdataclass attribute)": [[10, "openstef.data_classes.data_prep.DataPrepDataClass.arguments"]], "arguments (openstef.data_classes.split_function.splitfuncdataclass attribute)": [[10, "openstef.data_classes.split_function.SplitFuncDataClass.arguments"]], "backtest_split_func (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.backtest_split_func"]], "completeness_treshold (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.completeness_treshold"]], "data_prep_class (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.data_prep_class"]], "default_modelspecs (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.default_modelspecs"]], "depends_on (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.depends_on"]], "description (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.description"]], "feature_modules (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[10, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.feature_modules"]], "feature_names (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[10, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.feature_names"]], "flatliner_treshold (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.flatliner_treshold"]], "forecast_type (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.forecast_type"]], "function (openstef.data_classes.split_function.splitfuncdataclass attribute)": [[10, "openstef.data_classes.split_function.SplitFuncDataClass.function"]], "get() (openstef.data_classes.prediction_job.predictionjobdataclass method)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.get"]], "horizon_minutes (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.horizon_minutes"]], "hub_height (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.hub_height"]], "hyper_params (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[10, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.hyper_params"]], "id (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[10, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.id"]], "id (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.id"]], "klass (openstef.data_classes.data_prep.dataprepdataclass attribute)": [[10, "openstef.data_classes.data_prep.DataPrepDataClass.klass"]], "lat (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.lat"]], "load() (openstef.data_classes.data_prep.dataprepdataclass method)": [[10, "openstef.data_classes.data_prep.DataPrepDataClass.load"]], "load() (openstef.data_classes.split_function.splitfuncdataclass method)": [[10, "openstef.data_classes.split_function.SplitFuncDataClass.load"]], "lon (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.lon"]], "minimal_table_length (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.minimal_table_length"]], "model (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.model"]], "n_turbines (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.n_turbines"]], "name (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.name"]], "openstef.data_classes": [[10, "module-openstef.data_classes"]], "openstef.data_classes.data_prep": [[10, "module-openstef.data_classes.data_prep"]], "openstef.data_classes.model_specifications": [[10, "module-openstef.data_classes.model_specifications"]], "openstef.data_classes.prediction_job": [[10, "module-openstef.data_classes.prediction_job"]], "openstef.data_classes.split_function": [[10, "module-openstef.data_classes.split_function"]], "pipelines_to_run (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.pipelines_to_run"]], "quantiles (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.quantiles"]], "resolution_minutes (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.resolution_minutes"]], "save_train_forecasts (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.save_train_forecasts"]], "sid (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.sid"]], "smart_union (openstef.data_classes.prediction_job.predictionjobdataclass.config attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.Config.smart_union"]], "train_components (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.train_components"]], "train_horizons_minutes (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.train_horizons_minutes"]], "train_split_func (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.train_split_func"]], "turbine_type (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[10, "openstef.data_classes.prediction_job.PredictionJobDataClass.turbine_type"]], "ardatapreparation (class in openstef.feature_engineering.data_preparation)": [[11, "openstef.feature_engineering.data_preparation.ARDataPreparation"]], "abstractdatapreparation (class in openstef.feature_engineering.data_preparation)": [[11, "openstef.feature_engineering.data_preparation.AbstractDataPreparation"]], "abstractfeatureapplicator (class in openstef.feature_engineering.feature_applicator)": [[11, "openstef.feature_engineering.feature_applicator.AbstractFeatureApplicator"]], "featureadder (class in openstef.feature_engineering.feature_adder)": [[11, "openstef.feature_engineering.feature_adder.FeatureAdder"]], "featuredispatcher (class in openstef.feature_engineering.feature_adder)": [[11, "openstef.feature_engineering.feature_adder.FeatureDispatcher"]], "legacydatapreparation (class in openstef.feature_engineering.data_preparation)": [[11, "openstef.feature_engineering.data_preparation.LegacyDataPreparation"]], "operationalpredictfeatureapplicator (class in openstef.feature_engineering.feature_applicator)": [[11, "openstef.feature_engineering.feature_applicator.OperationalPredictFeatureApplicator"]], "parsedfeature (class in openstef.feature_engineering.feature_adder)": [[11, "openstef.feature_engineering.feature_adder.ParsedFeature"]], "trainfeatureapplicator (class in openstef.feature_engineering.feature_applicator)": [[11, "openstef.feature_engineering.feature_applicator.TrainFeatureApplicator"]], "add_additional_solar_features() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.add_additional_solar_features"]], "add_additional_wind_features() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.add_additional_wind_features"]], "add_features() (openstef.feature_engineering.feature_applicator.abstractfeatureapplicator method)": [[11, "openstef.feature_engineering.feature_applicator.AbstractFeatureApplicator.add_features"]], "add_features() (openstef.feature_engineering.feature_applicator.operationalpredictfeatureapplicator method)": [[11, "openstef.feature_engineering.feature_applicator.OperationalPredictFeatureApplicator.add_features"]], "add_features() (openstef.feature_engineering.feature_applicator.trainfeatureapplicator method)": [[11, "openstef.feature_engineering.feature_applicator.TrainFeatureApplicator.add_features"]], "add_historic_load_as_a_feature() (in module openstef.feature_engineering.historic_features)": [[11, "openstef.feature_engineering.historic_features.add_historic_load_as_a_feature"]], "add_humidity_features() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.add_humidity_features"]], "add_missing_feature_columns() (in module openstef.feature_engineering.general)": [[11, "openstef.feature_engineering.general.add_missing_feature_columns"]], "adders_from_module() (in module openstef.feature_engineering.feature_adder)": [[11, "openstef.feature_engineering.feature_adder.adders_from_module"]], "adders_from_modules() (in module openstef.feature_engineering.feature_adder)": [[11, "openstef.feature_engineering.feature_adder.adders_from_modules"]], "apply_features() (in module openstef.feature_engineering.apply_features)": [[11, "openstef.feature_engineering.apply_features.apply_features"]], "apply_features() (openstef.feature_engineering.feature_adder.featureadder method)": [[11, "openstef.feature_engineering.feature_adder.FeatureAdder.apply_features"]], "apply_features() (openstef.feature_engineering.feature_adder.featuredispatcher method)": [[11, "openstef.feature_engineering.feature_adder.FeatureDispatcher.apply_features"]], "calc_air_density() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.calc_air_density"]], "calc_dewpoint() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.calc_dewpoint"]], "calc_saturation_pressure() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.calc_saturation_pressure"]], "calc_vapour_pressure() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.calc_vapour_pressure"]], "calculate_dni() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.calculate_dni"]], "calculate_gti() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.calculate_gti"]], "calculate_windspeed_at_hubheight() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.calculate_windspeed_at_hubheight"]], "calculate_windturbine_power_output() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.calculate_windturbine_power_output"]], "check_for_bridge_day() (in module openstef.feature_engineering.holiday_features)": [[11, "openstef.feature_engineering.holiday_features.check_for_bridge_day"]], "check_model() (openstef.feature_engineering.data_preparation.abstractdatapreparation method)": [[11, "openstef.feature_engineering.data_preparation.AbstractDataPreparation.check_model"]], "dispatch_features() (openstef.feature_engineering.feature_adder.featuredispatcher method)": [[11, "openstef.feature_engineering.feature_adder.FeatureDispatcher.dispatch_features"]], "enforce_feature_order() (in module openstef.feature_engineering.general)": [[11, "openstef.feature_engineering.general.enforce_feature_order"]], "extract_lag_features() (in module openstef.feature_engineering.lag_features)": [[11, "openstef.feature_engineering.lag_features.extract_lag_features"]], "generate_holiday_feature_functions() (in module openstef.feature_engineering.holiday_features)": [[11, "openstef.feature_engineering.holiday_features.generate_holiday_feature_functions"]], "generate_lag_feature_functions() (in module openstef.feature_engineering.lag_features)": [[11, "openstef.feature_engineering.lag_features.generate_lag_feature_functions"]], "generate_non_trivial_lag_times() (in module openstef.feature_engineering.lag_features)": [[11, "openstef.feature_engineering.lag_features.generate_non_trivial_lag_times"]], "generate_trivial_lag_features() (in module openstef.feature_engineering.lag_features)": [[11, "openstef.feature_engineering.lag_features.generate_trivial_lag_features"]], "humidity_calculations() (in module openstef.feature_engineering.weather_features)": [[11, "openstef.feature_engineering.weather_features.humidity_calculations"]], "name (openstef.feature_engineering.feature_adder.featureadder property)": [[11, "openstef.feature_engineering.feature_adder.FeatureAdder.name"]], "name (openstef.feature_engineering.feature_adder.parsedfeature attribute)": [[11, "openstef.feature_engineering.feature_adder.ParsedFeature.name"]], "openstef.feature_engineering": [[11, "module-openstef.feature_engineering"]], "openstef.feature_engineering.apply_features": [[11, "module-openstef.feature_engineering.apply_features"]], "openstef.feature_engineering.data_preparation": [[11, "module-openstef.feature_engineering.data_preparation"]], "openstef.feature_engineering.feature_adder": [[11, "module-openstef.feature_engineering.feature_adder"]], "openstef.feature_engineering.feature_applicator": [[11, "module-openstef.feature_engineering.feature_applicator"]], "openstef.feature_engineering.general": [[11, "module-openstef.feature_engineering.general"]], "openstef.feature_engineering.historic_features": [[11, "module-openstef.feature_engineering.historic_features"]], "openstef.feature_engineering.holiday_features": [[11, "module-openstef.feature_engineering.holiday_features"]], "openstef.feature_engineering.lag_features": [[11, "module-openstef.feature_engineering.lag_features"]], "openstef.feature_engineering.weather_features": [[11, "module-openstef.feature_engineering.weather_features"]], "params (openstef.feature_engineering.feature_adder.parsedfeature attribute)": [[11, "openstef.feature_engineering.feature_adder.ParsedFeature.params"]], "parse_feature_name() (openstef.feature_engineering.feature_adder.featureadder method)": [[11, "openstef.feature_engineering.feature_adder.FeatureAdder.parse_feature_name"]], "prepare_forecast_data() (openstef.feature_engineering.data_preparation.ardatapreparation method)": [[11, "openstef.feature_engineering.data_preparation.ARDataPreparation.prepare_forecast_data"]], "prepare_forecast_data() (openstef.feature_engineering.data_preparation.abstractdatapreparation method)": [[11, "openstef.feature_engineering.data_preparation.AbstractDataPreparation.prepare_forecast_data"]], "prepare_forecast_data() (openstef.feature_engineering.data_preparation.legacydatapreparation method)": [[11, "openstef.feature_engineering.data_preparation.LegacyDataPreparation.prepare_forecast_data"]], "prepare_train_data() (openstef.feature_engineering.data_preparation.ardatapreparation method)": [[11, "openstef.feature_engineering.data_preparation.ARDataPreparation.prepare_train_data"]], "prepare_train_data() (openstef.feature_engineering.data_preparation.abstractdatapreparation method)": [[11, "openstef.feature_engineering.data_preparation.AbstractDataPreparation.prepare_train_data"]], "prepare_train_data() (openstef.feature_engineering.data_preparation.legacydatapreparation method)": [[11, "openstef.feature_engineering.data_preparation.LegacyDataPreparation.prepare_train_data"]], "remove_non_requested_feature_columns() (in module openstef.feature_engineering.general)": [[11, "openstef.feature_engineering.general.remove_non_requested_feature_columns"]], "required_features() (openstef.feature_engineering.feature_adder.featureadder method)": [[11, "openstef.feature_engineering.feature_adder.FeatureAdder.required_features"]], "report (class in openstef.metrics.reporter)": [[12, "openstef.metrics.reporter.Report"]], "reporter (class in openstef.metrics.reporter)": [[12, "openstef.metrics.reporter.Reporter"]], "bias() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.bias"]], "convert_to_base64_data_uri() (in module openstef.metrics.figure)": [[12, "openstef.metrics.figure.convert_to_base64_data_uri"]], "frac_in_stdev() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.frac_in_stdev"]], "franks_skill_score() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.franks_skill_score"]], "franks_skill_score_peaks() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.franks_skill_score_peaks"]], "generate_report() (openstef.metrics.reporter.reporter method)": [[12, "openstef.metrics.reporter.Reporter.generate_report"]], "get_eval_metric_function() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.get_eval_metric_function"]], "get_metrics() (openstef.metrics.reporter.reporter static method)": [[12, "openstef.metrics.reporter.Reporter.get_metrics"]], "mae() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.mae"]], "nsme() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.nsme"]], "openstef.metrics": [[12, "module-openstef.metrics"]], "openstef.metrics.figure": [[12, "module-openstef.metrics.figure"]], "openstef.metrics.metrics": [[12, "module-openstef.metrics.metrics"]], "openstef.metrics.reporter": [[12, "module-openstef.metrics.reporter"]], "plot_data_series() (in module openstef.metrics.figure)": [[12, "openstef.metrics.figure.plot_data_series"]], "plot_feature_importance() (in module openstef.metrics.figure)": [[12, "openstef.metrics.figure.plot_feature_importance"]], "r_mae() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.r_mae"]], "r_mae_highest() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.r_mae_highest"]], "r_mae_lowest() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.r_mae_lowest"]], "r_mne_highest() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.r_mne_highest"]], "r_mpe_highest() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.r_mpe_highest"]], "rmse() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.rmse"]], "skill_score() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.skill_score"]], "skill_score_positive_peaks() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.skill_score_positive_peaks"]], "write_report_to_disk() (openstef.metrics.reporter.reporter static method)": [[12, "openstef.metrics.reporter.Reporter.write_report_to_disk"]], "xgb_quantile_eval() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.xgb_quantile_eval"]], "xgb_quantile_obj() (in module openstef.metrics.metrics)": [[12, "openstef.metrics.metrics.xgb_quantile_obj"]], "arimaregressorobjective (class in openstef.model.objective)": [[13, "openstef.model.objective.ARIMARegressorObjective"]], "basecasemodel (class in openstef.model.basecase)": [[13, "openstef.model.basecase.BaseCaseModel"]], "confidenceintervalapplicator (class in openstef.model.confidence_interval_applicator)": [[13, "openstef.model.confidence_interval_applicator.ConfidenceIntervalApplicator"]], "lgbregressorobjective (class in openstef.model.objective)": [[13, "openstef.model.objective.LGBRegressorObjective"]], "linearregressorobjective (class in openstef.model.objective)": [[13, "openstef.model.objective.LinearRegressorObjective"]], "mlflowserializer (class in openstef.model.serializer)": [[13, "openstef.model.serializer.MLflowSerializer"]], "model_constructors (openstef.model.model_creator.modelcreator attribute)": [[13, "openstef.model.model_creator.ModelCreator.MODEL_CONSTRUCTORS"]], "modelcreator (class in openstef.model.model_creator)": [[13, "openstef.model.model_creator.ModelCreator"]], "objectives (openstef.model.objective_creator.objectivecreator attribute)": [[13, "openstef.model.objective_creator.ObjectiveCreator.OBJECTIVES"]], "objectivecreator (class in openstef.model.objective_creator)": [[13, "openstef.model.objective_creator.ObjectiveCreator"]], "proloafregressorobjective (class in openstef.model.objective)": [[13, "openstef.model.objective.ProLoafRegressorObjective"]], "regressorobjective (class in openstef.model.objective)": [[13, "openstef.model.objective.RegressorObjective"]], "standarddeviationgenerator (class in openstef.model.standard_deviation_generator)": [[13, "openstef.model.standard_deviation_generator.StandardDeviationGenerator"]], "xgbquantileregressorobjective (class in openstef.model.objective)": [[13, "openstef.model.objective.XGBQuantileRegressorObjective"]], "xgbregressorobjective (class in openstef.model.objective)": [[13, "openstef.model.objective.XGBRegressorObjective"]], "add_confidence_interval() (openstef.model.confidence_interval_applicator.confidenceintervalapplicator method)": [[13, "openstef.model.confidence_interval_applicator.ConfidenceIntervalApplicator.add_confidence_interval"]], "can_predict_quantiles (openstef.model.basecase.basecasemodel property)": [[13, "openstef.model.basecase.BaseCaseModel.can_predict_quantiles"]], "create_model() (openstef.model.model_creator.modelcreator static method)": [[13, "openstef.model.model_creator.ModelCreator.create_model"]], "create_objective() (openstef.model.objective_creator.objectivecreator static method)": [[13, "openstef.model.objective_creator.ObjectiveCreator.create_objective"]], "create_report() (openstef.model.objective.regressorobjective method)": [[13, "openstef.model.objective.RegressorObjective.create_report"]], "fit() (openstef.model.basecase.basecasemodel method)": [[13, "openstef.model.basecase.BaseCaseModel.fit"]], "generate_fallback() (in module openstef.model.fallback)": [[13, "openstef.model.fallback.generate_fallback"]], "generate_standard_deviation_data() (openstef.model.standard_deviation_generator.standarddeviationgenerator method)": [[13, "openstef.model.standard_deviation_generator.StandardDeviationGenerator.generate_standard_deviation_data"]], "get_default_values() (openstef.model.objective.regressorobjective class method)": [[13, "openstef.model.objective.RegressorObjective.get_default_values"]], "get_default_values() (openstef.model.objective.xgbregressorobjective class method)": [[13, "openstef.model.objective.XGBRegressorObjective.get_default_values"]], "get_model_age() (openstef.model.serializer.mlflowserializer method)": [[13, "openstef.model.serializer.MLflowSerializer.get_model_age"]], "get_params() (openstef.model.objective.arimaregressorobjective method)": [[13, "openstef.model.objective.ARIMARegressorObjective.get_params"]], "get_params() (openstef.model.objective.lgbregressorobjective method)": [[13, "openstef.model.objective.LGBRegressorObjective.get_params"]], "get_params() (openstef.model.objective.linearregressorobjective method)": [[13, "openstef.model.objective.LinearRegressorObjective.get_params"]], "get_params() (openstef.model.objective.proloafregressorobjective method)": [[13, "openstef.model.objective.ProLoafRegressorObjective.get_params"]], "get_params() (openstef.model.objective.regressorobjective method)": [[13, "openstef.model.objective.RegressorObjective.get_params"]], "get_params() (openstef.model.objective.xgbquantileregressorobjective method)": [[13, "openstef.model.objective.XGBQuantileRegressorObjective.get_params"]], "get_params() (openstef.model.objective.xgbregressorobjective method)": [[13, "openstef.model.objective.XGBRegressorObjective.get_params"]], "get_pruning_callback() (openstef.model.objective.lgbregressorobjective method)": [[13, "openstef.model.objective.LGBRegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.proloafregressorobjective method)": [[13, "openstef.model.objective.ProLoafRegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.regressorobjective method)": [[13, "openstef.model.objective.RegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.xgbquantileregressorobjective method)": [[13, "openstef.model.objective.XGBQuantileRegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.xgbregressorobjective method)": [[13, "openstef.model.objective.XGBRegressorObjective.get_pruning_callback"]], "get_trial_track() (openstef.model.objective.regressorobjective method)": [[13, "openstef.model.objective.RegressorObjective.get_trial_track"]], "load_model() (openstef.model.serializer.mlflowserializer method)": [[13, "openstef.model.serializer.MLflowSerializer.load_model"]], "make_basecase_forecast() (openstef.model.basecase.basecasemodel static method)": [[13, "openstef.model.basecase.BaseCaseModel.make_basecase_forecast"]], "openstef.model": [[13, "module-openstef.model"]], "openstef.model.basecase": [[13, "module-openstef.model.basecase"]], "openstef.model.confidence_interval_applicator": [[13, "module-openstef.model.confidence_interval_applicator"]], "openstef.model.fallback": [[13, "module-openstef.model.fallback"]], "openstef.model.model_creator": [[13, "module-openstef.model.model_creator"]], "openstef.model.objective": [[13, "module-openstef.model.objective"]], "openstef.model.objective_creator": [[13, "module-openstef.model.objective_creator"]], "openstef.model.serializer": [[13, "module-openstef.model.serializer"]], "openstef.model.standard_deviation_generator": [[13, "module-openstef.model.standard_deviation_generator"]], "predict() (openstef.model.basecase.basecasemodel method)": [[13, "openstef.model.basecase.BaseCaseModel.predict"]], "remove_old_models() (openstef.model.serializer.mlflowserializer method)": [[13, "openstef.model.serializer.MLflowSerializer.remove_old_models"]], "save_model() (openstef.model.serializer.mlflowserializer method)": [[13, "openstef.model.serializer.MLflowSerializer.save_model"]], "groupedregressor (class in openstef.model.metamodels.grouped_regressor)": [[14, "openstef.model.metamodels.grouped_regressor.GroupedRegressor"]], "missingvalueshandler (class in openstef.model.metamodels.missing_values_handler)": [[14, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler"]], "estimators_ (openstef.model.metamodels.grouped_regressor.groupedregressor attribute)": [[14, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.estimators_"]], "feature_importances_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[14, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.feature_importances_"]], "feature_names (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[14, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.feature_names"]], "feature_names_ (openstef.model.metamodels.grouped_regressor.groupedregressor attribute)": [[14, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.feature_names_"]], "fit() (openstef.model.metamodels.grouped_regressor.groupedregressor method)": [[14, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.fit"]], "fit() (openstef.model.metamodels.missing_values_handler.missingvalueshandler method)": [[14, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.fit"]], "grouped_compute() (openstef.model.metamodels.grouped_regressor.groupedregressor class method)": [[14, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.grouped_compute"]], "imputer_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[14, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.imputer_"]], "n_features_in_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[14, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.n_features_in_"]], "non_null_columns_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[14, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.non_null_columns_"]], "openstef.model.metamodels": [[14, "module-openstef.model.metamodels"]], "openstef.model.metamodels.grouped_regressor": [[14, "module-openstef.model.metamodels.grouped_regressor"]], "openstef.model.metamodels.missing_values_handler": [[14, "module-openstef.model.metamodels.missing_values_handler"]], "pipeline_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[14, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.pipeline_"]], "predict() (openstef.model.metamodels.grouped_regressor.groupedregressor method)": [[14, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.predict"]], "predict() (openstef.model.metamodels.missing_values_handler.missingvalueshandler method)": [[14, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.predict"]], "regressor_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[14, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.regressor_"]], "arimaopenstfregressor (class in openstef.model.regressors.arima)": [[15, "openstef.model.regressors.arima.ARIMAOpenstfRegressor"]], "customopenstfregressor (class in openstef.model.regressors.custom_regressor)": [[15, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor"]], "dazls (class in openstef.model.regressors.dazls)": [[15, "openstef.model.regressors.dazls.Dazls"]], "lgbmopenstfregressor (class in openstef.model.regressors.lgbm)": [[15, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor"]], "linearopenstfregressor (class in openstef.model.regressors.linear)": [[15, "openstef.model.regressors.linear.LinearOpenstfRegressor"]], "linearregressor (class in openstef.model.regressors.linear)": [[15, "openstef.model.regressors.linear.LinearRegressor"]], "openstfregressor (class in openstef.model.regressors.regressor)": [[15, "openstef.model.regressors.regressor.OpenstfRegressor"]], "xgbopenstfregressor (class in openstef.model.regressors.xgb)": [[15, "openstef.model.regressors.xgb.XGBOpenstfRegressor"]], "xgbquantileopenstfregressor (class in openstef.model.regressors.xgb_quantile)": [[15, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor"]], "can_predict_quantiles (openstef.model.regressors.arima.arimaopenstfregressor property)": [[15, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.lgbm.lgbmopenstfregressor property)": [[15, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.linear.linearopenstfregressor property)": [[15, "openstef.model.regressors.linear.LinearOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.regressor.openstfregressor property)": [[15, "openstef.model.regressors.regressor.OpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.xgb.xgbopenstfregressor property)": [[15, "openstef.model.regressors.xgb.XGBOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor property)": [[15, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.can_predict_quantiles"]], "create_custom_objective() (in module openstef.model.regressors.custom_regressor)": [[15, "openstef.model.regressors.custom_regressor.create_custom_objective"]], "feature_names (openstef.model.regressors.arima.arimaopenstfregressor property)": [[15, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.lgbm.lgbmopenstfregressor property)": [[15, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.linear.linearopenstfregressor property)": [[15, "openstef.model.regressors.linear.LinearOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.regressor.openstfregressor property)": [[15, "openstef.model.regressors.regressor.OpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.xgb.xgbopenstfregressor property)": [[15, "openstef.model.regressors.xgb.XGBOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor property)": [[15, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.feature_names"]], "fit() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[15, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.fit"]], "fit() (openstef.model.regressors.dazls.dazls method)": [[15, "openstef.model.regressors.dazls.Dazls.fit"]], "fit() (openstef.model.regressors.linear.linearopenstfregressor method)": [[15, "openstef.model.regressors.linear.LinearOpenstfRegressor.fit"]], "fit() (openstef.model.regressors.regressor.openstfregressor method)": [[15, "openstef.model.regressors.regressor.OpenstfRegressor.fit"]], "fit() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor method)": [[15, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.fit"]], "gain_importance_name (openstef.model.regressors.lgbm.lgbmopenstfregressor attribute)": [[15, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.gain_importance_name"]], "gain_importance_name (openstef.model.regressors.xgb.xgbopenstfregressor attribute)": [[15, "openstef.model.regressors.xgb.XGBOpenstfRegressor.gain_importance_name"]], "get_feature_importances_from_booster() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor class method)": [[15, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.get_feature_importances_from_booster"]], "is_custom_type() (in module openstef.model.regressors.custom_regressor)": [[15, "openstef.model.regressors.custom_regressor.is_custom_type"]], "load_custom_model() (in module openstef.model.regressors.custom_regressor)": [[15, "openstef.model.regressors.custom_regressor.load_custom_model"]], "objective() (openstef.model.regressors.custom_regressor.customopenstfregressor class method)": [[15, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor.objective"]], "openstef.model.regressors": [[15, "module-openstef.model.regressors"]], "openstef.model.regressors.arima": [[15, "module-openstef.model.regressors.arima"]], "openstef.model.regressors.custom_regressor": [[15, "module-openstef.model.regressors.custom_regressor"]], "openstef.model.regressors.dazls": [[15, "module-openstef.model.regressors.dazls"]], "openstef.model.regressors.lgbm": [[15, "module-openstef.model.regressors.lgbm"]], "openstef.model.regressors.linear": [[15, "module-openstef.model.regressors.linear"]], "openstef.model.regressors.regressor": [[15, "module-openstef.model.regressors.regressor"]], "openstef.model.regressors.xgb": [[15, "module-openstef.model.regressors.xgb"]], "openstef.model.regressors.xgb_quantile": [[15, "module-openstef.model.regressors.xgb_quantile"]], "predict() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[15, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.predict"]], "predict() (openstef.model.regressors.dazls.dazls method)": [[15, "openstef.model.regressors.dazls.Dazls.predict"]], "predict() (openstef.model.regressors.regressor.openstfregressor method)": [[15, "openstef.model.regressors.regressor.OpenstfRegressor.predict"]], "predict() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor method)": [[15, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.predict"]], "predict_quantile() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[15, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.predict_quantile"]], "score() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[15, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.score"]], "score() (openstef.model.regressors.dazls.dazls method)": [[15, "openstef.model.regressors.dazls.Dazls.score"]], "score() (openstef.model.regressors.regressor.openstfregressor method)": [[15, "openstef.model.regressors.regressor.OpenstfRegressor.score"]], "set_feature_importance() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[15, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.set_feature_importance"]], "set_feature_importance() (openstef.model.regressors.regressor.openstfregressor method)": [[15, "openstef.model.regressors.regressor.OpenstfRegressor.set_feature_importance"]], "update_historic_data() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[15, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.update_historic_data"]], "valid_kwargs() (openstef.model.regressors.custom_regressor.customopenstfregressor static method)": [[15, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor.valid_kwargs"]], "weight_importance_name (openstef.model.regressors.lgbm.lgbmopenstfregressor attribute)": [[15, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.weight_importance_name"]], "weight_importance_name (openstef.model.regressors.xgb.xgbopenstfregressor attribute)": [[15, "openstef.model.regressors.xgb.XGBOpenstfRegressor.weight_importance_name"]], "backtest_split_default() (in module openstef.model_selection.model_selection)": [[16, "openstef.model_selection.model_selection.backtest_split_default"]], "group_kfold() (in module openstef.model_selection.model_selection)": [[16, "openstef.model_selection.model_selection.group_kfold"]], "openstef.model_selection": [[16, "module-openstef.model_selection"]], "openstef.model_selection.model_selection": [[16, "module-openstef.model_selection.model_selection"]], "random_sample() (in module openstef.model_selection.model_selection)": [[16, "openstef.model_selection.model_selection.random_sample"]], "sample_indices_train_val() (in module openstef.model_selection.model_selection)": [[16, "openstef.model_selection.model_selection.sample_indices_train_val"]], "split_data_train_validation_test() (in module openstef.model_selection.model_selection)": [[16, "openstef.model_selection.model_selection.split_data_train_validation_test"]], "performancemeter (class in openstef.monitoring.performance_meter)": [[17, "openstef.monitoring.performance_meter.PerformanceMeter"]], "build_sql_query_string() (in module openstef.monitoring.teams)": [[17, "openstef.monitoring.teams.build_sql_query_string"]], "checkpoint() (openstef.monitoring.performance_meter.performancemeter method)": [[17, "openstef.monitoring.performance_meter.PerformanceMeter.checkpoint"]], "complete_level() (openstef.monitoring.performance_meter.performancemeter method)": [[17, "openstef.monitoring.performance_meter.PerformanceMeter.complete_level"]], "format_message() (in module openstef.monitoring.teams)": [[17, "openstef.monitoring.teams.format_message"]], "get_card_section() (in module openstef.monitoring.teams)": [[17, "openstef.monitoring.teams.get_card_section"]], "openstef.monitoring": [[17, "module-openstef.monitoring"]], "openstef.monitoring.performance_meter": [[17, "module-openstef.monitoring.performance_meter"]], "openstef.monitoring.teams": [[17, "module-openstef.monitoring.teams"]], "post_teams() (in module openstef.monitoring.teams)": [[17, "openstef.monitoring.teams.post_teams"]], "start_level() (openstef.monitoring.performance_meter.performancemeter method)": [[17, "openstef.monitoring.performance_meter.PerformanceMeter.start_level"]], "create_basecase_forecast_pipeline() (in module openstef.pipeline.create_basecase_forecast)": [[18, "openstef.pipeline.create_basecase_forecast.create_basecase_forecast_pipeline"]], "create_components_forecast_pipeline() (in module openstef.pipeline.create_component_forecast)": [[18, "openstef.pipeline.create_component_forecast.create_components_forecast_pipeline"]], "create_forecast_pipeline() (in module openstef.pipeline.create_forecast)": [[18, "openstef.pipeline.create_forecast.create_forecast_pipeline"]], "create_forecast_pipeline_core() (in module openstef.pipeline.create_forecast)": [[18, "openstef.pipeline.create_forecast.create_forecast_pipeline_core"]], "create_input() (in module openstef.pipeline.create_component_forecast)": [[18, "openstef.pipeline.create_component_forecast.create_input"]], "generate_basecase_confidence_interval() (in module openstef.pipeline.create_basecase_forecast)": [[18, "openstef.pipeline.create_basecase_forecast.generate_basecase_confidence_interval"]], "generate_forecast_datetime_range() (in module openstef.pipeline.utils)": [[18, "openstef.pipeline.utils.generate_forecast_datetime_range"]], "openstef.pipeline": [[18, "module-openstef.pipeline"]], "openstef.pipeline.create_basecase_forecast": [[18, "module-openstef.pipeline.create_basecase_forecast"]], "openstef.pipeline.create_component_forecast": [[18, "module-openstef.pipeline.create_component_forecast"]], "openstef.pipeline.create_forecast": [[18, "module-openstef.pipeline.create_forecast"]], "openstef.pipeline.optimize_hyperparameters": [[18, "module-openstef.pipeline.optimize_hyperparameters"]], "openstef.pipeline.train_create_forecast_backtest": [[18, "module-openstef.pipeline.train_create_forecast_backtest"]], "openstef.pipeline.train_model": [[18, "module-openstef.pipeline.train_model"]], "openstef.pipeline.utils": [[18, "module-openstef.pipeline.utils"]], "optimize_hyperparameters_pipeline() (in module openstef.pipeline.optimize_hyperparameters)": [[18, "openstef.pipeline.optimize_hyperparameters.optimize_hyperparameters_pipeline"]], "optimize_hyperparameters_pipeline_core() (in module openstef.pipeline.optimize_hyperparameters)": [[18, "openstef.pipeline.optimize_hyperparameters.optimize_hyperparameters_pipeline_core"]], "optuna_optimization() (in module openstef.pipeline.optimize_hyperparameters)": [[18, "openstef.pipeline.optimize_hyperparameters.optuna_optimization"]], "train_model_and_forecast_back_test() (in module openstef.pipeline.train_create_forecast_backtest)": [[18, "openstef.pipeline.train_create_forecast_backtest.train_model_and_forecast_back_test"]], "train_model_and_forecast_test_core() (in module openstef.pipeline.train_create_forecast_backtest)": [[18, "openstef.pipeline.train_create_forecast_backtest.train_model_and_forecast_test_core"]], "train_model_pipeline() (in module openstef.pipeline.train_model)": [[18, "openstef.pipeline.train_model.train_model_pipeline"]], "train_model_pipeline_core() (in module openstef.pipeline.train_model)": [[18, "openstef.pipeline.train_model.train_model_pipeline_core"]], "train_pipeline_common() (in module openstef.pipeline.train_model)": [[18, "openstef.pipeline.train_model.train_pipeline_common"]], "train_pipeline_step_compute_features() (in module openstef.pipeline.train_model)": [[18, "openstef.pipeline.train_model.train_pipeline_step_compute_features"]], "train_pipeline_step_split_data() (in module openstef.pipeline.train_model)": [[18, "openstef.pipeline.train_model.train_pipeline_step_split_data"]], "train_pipeline_step_train_model() (in module openstef.pipeline.train_model)": [[18, "openstef.pipeline.train_model.train_pipeline_step_train_model"]], "add_components_base_case_forecast() (in module openstef.postprocessing.postprocessing)": [[19, "openstef.postprocessing.postprocessing.add_components_base_case_forecast"]], "add_prediction_job_properties_to_forecast() (in module openstef.postprocessing.postprocessing)": [[19, "openstef.postprocessing.postprocessing.add_prediction_job_properties_to_forecast"]], "calculate_wind_power() (in module openstef.postprocessing.postprocessing)": [[19, "openstef.postprocessing.postprocessing.calculate_wind_power"]], "normalize_and_convert_weather_data_for_splitting() (in module openstef.postprocessing.postprocessing)": [[19, "openstef.postprocessing.postprocessing.normalize_and_convert_weather_data_for_splitting"]], "openstef.postprocessing": [[19, "module-openstef.postprocessing"]], "openstef.postprocessing.postprocessing": [[19, "module-openstef.postprocessing.postprocessing"]], "post_process_wind_solar() (in module openstef.postprocessing.postprocessing)": [[19, "openstef.postprocessing.postprocessing.post_process_wind_solar"]], "split_forecast_in_components() (in module openstef.postprocessing.postprocessing)": [[19, "openstef.postprocessing.postprocessing.split_forecast_in_components"]], "openstef.preprocessing": [[20, "module-openstef.preprocessing"]], "openstef.preprocessing.preprocessing": [[20, "module-openstef.preprocessing.preprocessing"]], "replace_repeated_values_with_nan() (in module openstef.preprocessing.preprocessing)": [[20, "openstef.preprocessing.preprocessing.replace_repeated_values_with_nan"]], "apply_fit_insol() (in module openstef.tasks.create_solar_forecast)": [[21, "openstef.tasks.create_solar_forecast.apply_fit_insol"]], "apply_persistence() (in module openstef.tasks.create_solar_forecast)": [[21, "openstef.tasks.create_solar_forecast.apply_persistence"]], "calc_kpi_for_specific_pid() (in module openstef.tasks.calculate_kpi)": [[21, "openstef.tasks.calculate_kpi.calc_kpi_for_specific_pid"]], "calc_norm() (in module openstef.tasks.create_solar_forecast)": [[21, "openstef.tasks.create_solar_forecast.calc_norm"]], "check_kpi_task() (in module openstef.tasks.calculate_kpi)": [[21, "openstef.tasks.calculate_kpi.check_kpi_task"]], "combine_forecasts() (in module openstef.tasks.create_solar_forecast)": [[21, "openstef.tasks.create_solar_forecast.combine_forecasts"]], "convert_coefdict_to_coefsdf() (in module openstef.tasks.split_forecast)": [[21, "openstef.tasks.split_forecast.convert_coefdict_to_coefsdf"]], "create_basecase_forecast_task() (in module openstef.tasks.create_basecase_forecast)": [[21, "openstef.tasks.create_basecase_forecast.create_basecase_forecast_task"]], "create_components_forecast_task() (in module openstef.tasks.create_components_forecast)": [[21, "openstef.tasks.create_components_forecast.create_components_forecast_task"]], "create_forecast_task() (in module openstef.tasks.create_forecast)": [[21, "openstef.tasks.create_forecast.create_forecast_task"]], "determine_invalid_coefs() (in module openstef.tasks.split_forecast)": [[21, "openstef.tasks.split_forecast.determine_invalid_coefs"]], "fides() (in module openstef.tasks.create_solar_forecast)": [[21, "openstef.tasks.create_solar_forecast.fides"]], "find_components() (in module openstef.tasks.split_forecast)": [[21, "openstef.tasks.split_forecast.find_components"]], "main() (in module openstef.tasks.calculate_kpi)": [[21, "openstef.tasks.calculate_kpi.main"]], "main() (in module openstef.tasks.create_basecase_forecast)": [[21, "openstef.tasks.create_basecase_forecast.main"]], "main() (in module openstef.tasks.create_components_forecast)": [[21, "openstef.tasks.create_components_forecast.main"]], "main() (in module openstef.tasks.create_forecast)": [[21, "openstef.tasks.create_forecast.main"]], "main() (in module openstef.tasks.create_solar_forecast)": [[21, "openstef.tasks.create_solar_forecast.main"]], "main() (in module openstef.tasks.create_wind_forecast)": [[21, "openstef.tasks.create_wind_forecast.main"]], "main() (in module openstef.tasks.optimize_hyperparameters)": [[21, "openstef.tasks.optimize_hyperparameters.main"]], "main() (in module openstef.tasks.run_tracy)": [[21, "openstef.tasks.run_tracy.main"]], "main() (in module openstef.tasks.split_forecast)": [[21, "openstef.tasks.split_forecast.main"]], "main() (in module openstef.tasks.train_model)": [[21, "openstef.tasks.train_model.main"]], "make_solar_prediction_pj() (in module openstef.tasks.create_solar_forecast)": [[21, "openstef.tasks.create_solar_forecast.make_solar_prediction_pj"]], "make_wind_forecast_pj() (in module openstef.tasks.create_wind_forecast)": [[21, "openstef.tasks.create_wind_forecast.make_wind_forecast_pj"]], "openstef.tasks": [[21, "module-openstef.tasks"]], "openstef.tasks.calculate_kpi": [[21, "module-openstef.tasks.calculate_kpi"]], "openstef.tasks.create_basecase_forecast": [[21, "module-openstef.tasks.create_basecase_forecast"]], "openstef.tasks.create_components_forecast": [[21, "module-openstef.tasks.create_components_forecast"]], "openstef.tasks.create_forecast": [[21, "module-openstef.tasks.create_forecast"]], "openstef.tasks.create_solar_forecast": [[21, "module-openstef.tasks.create_solar_forecast"]], "openstef.tasks.create_wind_forecast": [[21, "module-openstef.tasks.create_wind_forecast"]], "openstef.tasks.optimize_hyperparameters": [[21, "module-openstef.tasks.optimize_hyperparameters"]], "openstef.tasks.run_tracy": [[21, "module-openstef.tasks.run_tracy"]], "openstef.tasks.split_forecast": [[21, "module-openstef.tasks.split_forecast"]], "openstef.tasks.train_model": [[21, "module-openstef.tasks.train_model"]], "optimize_hyperparameters_task() (in module openstef.tasks.optimize_hyperparameters)": [[21, "openstef.tasks.optimize_hyperparameters.optimize_hyperparameters_task"]], "run_tracy() (in module openstef.tasks.run_tracy)": [[21, "openstef.tasks.run_tracy.run_tracy"]], "run_tracy_job() (in module openstef.tasks.run_tracy)": [[21, "openstef.tasks.run_tracy.run_tracy_job"]], "set_incomplete_kpi_to_nan() (in module openstef.tasks.calculate_kpi)": [[21, "openstef.tasks.calculate_kpi.set_incomplete_kpi_to_nan"]], "split_forecast_task() (in module openstef.tasks.split_forecast)": [[21, "openstef.tasks.split_forecast.split_forecast_task"]], "train_model_task() (in module openstef.tasks.train_model)": [[21, "openstef.tasks.train_model.train_model_task"]], "predictionjobloop (class in openstef.tasks.utils.predictionjobloop)": [[22, "openstef.tasks.utils.predictionjobloop.PredictionJobLoop"]], "taskcontext (class in openstef.tasks.utils.taskcontext)": [[22, "openstef.tasks.utils.taskcontext.TaskContext"]], "build_graph_structure() (in module openstef.tasks.utils.dependencies)": [[22, "openstef.tasks.utils.dependencies.build_graph_structure"]], "build_nx_graph() (in module openstef.tasks.utils.dependencies)": [[22, "openstef.tasks.utils.dependencies.build_nx_graph"]], "find_groups() (in module openstef.tasks.utils.dependencies)": [[22, "openstef.tasks.utils.dependencies.find_groups"]], "has_dependencies() (in module openstef.tasks.utils.dependencies)": [[22, "openstef.tasks.utils.dependencies.has_dependencies"]], "map() (openstef.tasks.utils.predictionjobloop.predictionjobloop method)": [[22, "openstef.tasks.utils.predictionjobloop.PredictionJobLoop.map"]], "openstef.tasks.utils": [[22, "module-openstef.tasks.utils"]], "openstef.tasks.utils.dependencies": [[22, "module-openstef.tasks.utils.dependencies"]], "openstef.tasks.utils.predictionjobloop": [[22, "module-openstef.tasks.utils.predictionjobloop"]], "openstef.tasks.utils.taskcontext": [[22, "module-openstef.tasks.utils.taskcontext"]], "calc_completeness_dataframe() (in module openstef.validation.validation)": [[23, "openstef.validation.validation.calc_completeness_dataframe"]], "calc_completeness_features() (in module openstef.validation.validation)": [[23, "openstef.validation.validation.calc_completeness_features"]], "check_data_for_each_trafo() (in module openstef.validation.validation)": [[23, "openstef.validation.validation.check_data_for_each_trafo"]], "drop_target_na() (in module openstef.validation.validation)": [[23, "openstef.validation.validation.drop_target_na"]], "find_nonzero_flatliner() (in module openstef.validation.validation)": [[23, "openstef.validation.validation.find_nonzero_flatliner"]], "find_zero_flatliner() (in module openstef.validation.validation)": [[23, "openstef.validation.validation.find_zero_flatliner"]], "is_data_sufficient() (in module openstef.validation.validation)": [[23, "openstef.validation.validation.is_data_sufficient"]], "openstef.validation": [[23, "module-openstef.validation"]], "openstef.validation.validation": [[23, "module-openstef.validation.validation"]], "validate() (in module openstef.validation.validation)": [[23, "openstef.validation.validation.validate"]]}})