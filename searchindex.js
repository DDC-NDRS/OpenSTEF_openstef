Search.setIndex({"docnames": ["about_openstef", "api_reference", "community", "concepts", "dashboard", "dazls", "index", "influx_database_diagram", "methodology_train_predict", "modules", "openstef", "openstef.data_classes", "openstef.feature_engineering", "openstef.metrics", "openstef.model", "openstef.model.metamodels", "openstef.model.regressors", "openstef.model_selection", "openstef.monitoring", "openstef.pipeline", "openstef.postprocessing", "openstef.preprocessing", "openstef.tasks", "openstef.tasks.utils", "openstef.validation", "pipelines_user_guide", "sql_database_diagram", "user_guides"], "filenames": ["about_openstef.rst", "api_reference.rst", "community.rst", "concepts.rst", "dashboard.rst", "dazls.rst", "index.rst", "influx_database_diagram.rst", "methodology_train_predict.rst", "modules.rst", "openstef.rst", "openstef.data_classes.rst", "openstef.feature_engineering.rst", "openstef.metrics.rst", "openstef.model.rst", "openstef.model.metamodels.rst", "openstef.model.regressors.rst", "openstef.model_selection.rst", "openstef.monitoring.rst", "openstef.pipeline.rst", "openstef.postprocessing.rst", "openstef.preprocessing.rst", "openstef.tasks.rst", "openstef.tasks.utils.rst", "openstef.validation.rst", "pipelines_user_guide.rst", "sql_database_diagram.rst", "user_guides.rst"], "titles": ["About OpenSTEF", "API reference", "Community", "Concepts", "&lt;no title&gt;", "Domain Adaptation for Zero Shot Learning in Sequence (DAZLS)", "Welcome to the OpenSTEF documentation!", "Overview of timeseries database schema", "High level methodology OpenSTEF", "openstef", "openstef package", "openstef.data_classes package", "openstef.feature_engineering package", "openstef.metrics package", "openstef.model package", "openstef.model.metamodels package", "openstef.model.regressors package", "openstef.model_selection package", "openstef.monitoring package", "openstef.pipeline package", "openstef.postprocessing package", "openstef.preprocessing package", "openstef.tasks package", "openstef.tasks.utils package", "openstef.validation package", "Pipelines user guide", "Overview of relational database", "User guides"], "terms": {"The": [0, 2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27], "energi": [0, 3, 5, 6, 20, 22, 26], "transit": 0, "pose": 0, "new": [0, 3, 6, 10, 12, 14, 15, 16, 18, 19, 22], "challeng": 0, "all": [0, 2, 3, 6, 7, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 25, 26, 27], "parti": 0, "sector": [0, 6], "For": [0, 2, 3, 5, 12, 14, 15, 16, 17, 18, 22, 23, 26, 27], "grid": [0, 3], "oper": [0, 11, 12, 15, 17, 19, 25, 27], "rise": 0, "renew": [0, 3, 5, 16], "electrif": 0, "consumpt": [0, 3, 20, 22, 26], "lead": 0, "its": [0, 3, 6, 7, 11, 12, 14], "physic": [0, 3, 26], "constraint": 0, "forecast": [0, 1, 3, 6, 8, 9, 10, 11, 12, 13, 14, 16, 19, 20, 22, 26], "load": [0, 3, 5, 10, 11, 12, 13, 14, 16, 19, 20, 22, 24, 25, 26], "next": [0, 14], "hour": [0, 10, 12, 14, 19, 22, 24], "dai": [0, 12, 14, 17, 19, 22], "i": [0, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27], "essenti": 0, "anticip": 0, "local": [0, 3, 27], "transmiss": 0, "congest": 0, "make": [0, 3, 6, 11, 12, 14, 15, 16, 19, 20, 22, 26], "most": [0, 14, 15, 16, 18, 19], "exist": [0, 12, 13, 14, 15, 16, 22], "asset": 0, "provid": [0, 3, 5, 8, 12, 14, 15, 16, 22, 26], "complet": [0, 3, 5, 12, 15, 16, 18, 22, 23, 24], "softwar": 0, "stack": 0, "which": [0, 3, 5, 6, 11, 12, 14, 16, 19, 20, 22, 24, 25, 26], "electr": [0, 3, 5, 16], "given": [0, 3, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23], "timeseri": [0, 6, 24, 26], "measur": [0, 3, 13, 24, 26], "net": [0, 3, 5], "gener": [0, 1, 2, 3, 9, 10, 11, 13, 14, 16, 17, 19, 20, 26, 27], "fulli": [0, 14, 24], "autom": [0, 3, 8, 16], "machin": [0, 3, 6, 8, 10, 14], "learn": [0, 6, 8, 10, 14, 16], "pipelin": [0, 1, 3, 5, 6, 9, 10, 11, 12, 14, 15, 16, 26], "execut": [0, 3, 22, 24, 26], "deliv": [0, 3, 26], "probabilist": 0, "futur": [0, 14], "combin": [0, 3, 5, 8, 17, 22], "both": [0, 16, 25], "perform": [0, 3, 13, 15, 16, 18, 19, 22, 27], "valid": [0, 1, 3, 9, 10, 11, 14, 15, 16, 17, 19, 22], "input": [0, 3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24], "data": [0, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27], "extern": [0, 16], "predictor": 0, "weather": [0, 3, 5, 12, 19, 20, 22, 26], "market": 0, "price": [0, 3, 22], "train": [0, 1, 3, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 24, 27], "ani": [0, 3, 11, 12, 14, 16, 18, 19, 22, 23, 25, 27], "scikit": [0, 16], "compat": [0, 14, 24], "model": [0, 1, 3, 5, 9, 10, 11, 12, 13, 19, 22, 24, 26, 27], "via": [0, 3, 14, 18, 26], "an": [0, 2, 3, 5, 10, 12, 14, 15, 16, 17, 19, 23, 25, 26, 27], "api": [0, 3, 6, 16, 25, 26], "expert": 0, "graphic": [0, 3, 27], "user": [0, 3, 6, 14, 15, 16, 22, 26], "interfac": [0, 3, 12, 16, 27], "base": [0, 3, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23], "open": [0, 2, 3], "sourc": [0, 3, 5, 8, 22], "technologi": 0, "standard": [0, 10, 14, 22], "organ": 0, "microservic": 0, "architectur": [0, 2, 27], "optim": [0, 14, 19, 22], "cloud": [0, 17], "deploy": 0, "resili": 0, "As": [0, 20, 25], "avail": [0, 3, 6, 8, 10, 11, 12, 13, 14, 16, 20, 22, 24, 27], "critic": 0, "applic": [0, 12, 25], "deploi": [0, 3, 5], "multipl": [0, 3, 5, 12, 17, 19, 26], "fallback": [0, 1, 9, 10, 18], "stategi": 0, "thi": [0, 2, 3, 5, 6, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27], "wai": [0, 12, 14, 19, 25, 27], "alwai": [0, 20, 22], "when": [0, 3, 5, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 26], "issu": [0, 2, 3, 5], "label": [0, 12, 16, 18, 24], "possibl": [0, 2, 3, 13, 26], "reconstruct": 0, "decis": 0, "platform": 0, "agnost": 0, "container": 0, "run": [0, 3, 5, 11, 15, 22, 23, 25, 26, 27], "contain": [0, 3, 6, 12, 13, 15, 16, 18, 19, 22, 24, 25, 26, 27], "A": [0, 3, 5, 7, 10, 12, 13, 15, 16, 19, 22, 23, 25, 26, 27], "refer": [0, 3, 6, 11, 13, 16, 22, 25, 26, 27], "implement": [0, 12, 14, 16, 17, 27], "can": [0, 2, 3, 5, 6, 13, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27], "directli": [0, 3, 22, 26], "howev": [0, 13, 14, 16, 25], "have": [0, 2, 3, 5, 10, 11, 12, 16, 17, 22, 23, 25, 27], "uniqu": [0, 13], "IT": 0, "landscap": 0, "case": [0, 3, 12, 13, 16, 19, 22, 26], "modular": 0, "natur": 0, "enabl": 0, "easili": 0, "addapt": 0, "environ": 0, "difficult": 0, "risk": 0, "work": [0, 12, 14, 15, 16, 22], "toward": 0, "polici": 0, "react": 0, "predict": [0, 5, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 22, 23, 24], "event": [0, 14], "split": [0, 3, 5, 11, 14, 16, 17, 19, 20, 22, 26], "compon": [0, 3, 5, 6, 10, 16, 19, 20, 22], "With": 0, "increas": 0, "fraction": [0, 11, 17, 19, 24], "mix": 0, "balanc": 0, "insight": [0, 3], "wind": [0, 1, 3, 5, 9, 10, 11, 12, 16, 20, 22, 26], "solar": [0, 1, 3, 5, 9, 10, 11, 12, 16, 20, 22], "power": [0, 3, 5, 12, 16, 20, 22, 26], "relev": [0, 12, 14, 15, 16], "eu": 0, "commis": 0, "regul": 0, "No": [0, 10], "543": 0, "2013": 0, "openstef": [1, 2, 5, 7, 25, 26, 27], "packag": [1, 3, 6, 9, 27], "subpackag": [1, 9], "data_class": [1, 9, 10, 25], "submodul": [1, 9], "data_prep": [1, 9, 10], "modul": [1, 9], "model_specif": [1, 9, 10, 25], "prediction_job": [1, 3, 9, 10, 22, 23, 25, 26], "split_funct": [1, 9, 10], "content": [1, 9], "feature_engin": [1, 3, 9, 10, 26], "apply_featur": [1, 9, 10], "data_prepar": [1, 9, 10], "feature_add": [1, 9, 10], "feature_appl": [1, 9, 10], "historic_featur": [1, 9, 10], "holiday_featur": [1, 9, 10], "lag_featur": [1, 9, 10], "weather_featur": [1, 3, 9, 10, 26], "metric": [1, 9, 10, 16, 22, 25], "figur": [1, 3, 8, 9, 10, 22], "report": [1, 9, 10, 14, 16, 19, 25], "basecas": [1, 9, 10, 11, 13, 19, 20, 22, 25], "confidence_interval_appl": [1, 9, 10], "model_cr": [1, 9, 10], "object": [1, 2, 9, 10, 11, 12, 13, 15, 16, 18, 19, 22, 23, 25], "objective_cr": [1, 9, 10], "serial": [1, 9, 10, 19], "standard_deviation_gener": [1, 9, 10], "model_select": [1, 9, 10, 16], "monitor": [1, 9, 10], "performance_met": [1, 9, 10], "team": [1, 2, 6, 9, 10, 22, 23], "create_basecase_forecast": [1, 9, 10, 25, 27], "create_component_forecast": [1, 3, 5, 9, 10, 27], "create_forecast": [1, 9, 10, 25, 27], "optimize_hyperparamet": [1, 9, 10, 25, 27], "train_create_forecast_backtest": [1, 9, 10, 27], "train_model": [1, 9, 10, 25, 27], "util": [1, 9, 10, 14, 15, 16, 22], "postprocess": [1, 9, 10], "preprocess": [1, 9, 10], "task": [1, 3, 9, 10, 11, 18], "calculate_kpi": [1, 9, 10], "create_components_forecast": [1, 9, 10, 25], "create_solar_forecast": [1, 9, 10, 11], "create_wind_forecast": [1, 9, 10, 11], "run_traci": [1, 9, 10], "split_forecast": [1, 9, 10], "enum": [1, 9, 20], "forecasttyp": [1, 9, 10, 20], "demand": [1, 3, 9, 10, 11, 26], "mlmodeltyp": [1, 9, 10, 14], "arima": [1, 9, 10, 14], "lgb": [1, 9, 10, 11, 14], "linear": [1, 9, 10, 11, 14, 22], "proloaf": [1, 9, 10, 11, 12, 14], "xgb": [1, 3, 9, 10, 11, 14, 26], "xgb_quantil": [1, 9, 10, 11, 14], "pipelinetyp": [1, 9, 10, 11], "hyper_parmat": [1, 9, 10], "tracyjobresult": [1, 9, 10, 22], "fail": [1, 9, 10, 14, 22], "success": [1, 9, 10, 18, 23], "unknown": [1, 3, 5, 9, 10], "except": [1, 3, 9, 23, 25], "componentforecasttooshorthorizonerror": [1, 9, 10], "inputdatainsufficienterror": [1, 9, 10, 19], "inputdatainvaliderror": [1, 9, 10], "inputdatawrongcolumnordererror": [1, 9, 10, 19], "modelwithoutstdev": [1, 9, 10], "nopredictedloaderror": [1, 9, 10, 22], "norealisedloaderror": [1, 9, 10, 22], "oldmodelhigherscoreerror": [1, 9, 10, 19], "predictionjobexcept": [1, 9, 10, 23], "skipsavetrainingforecast": [1, 9, 10], "here": [2, 3, 8, 16, 27], "you": [2, 3, 6, 10, 14, 15, 16, 27], "find": [2, 6, 23], "inform": [2, 3, 5, 6, 11, 12, 13, 16, 18, 22, 23, 24, 26, 27], "about": [2, 3, 5, 6, 11, 12, 13, 14, 26], "tsc": 2, "respons": 2, "ambit": 2, "goal": 2, "project": [2, 6], "guidelin": 2, "procedur": 2, "tool": 2, "select": [2, 3, 13, 17], "develop": [2, 3, 5, 13], "infrastructur": [2, 3], "choic": 2, "rais": [2, 3, 10, 14, 15, 16, 19, 22, 23, 25], "subject": 2, "ar": [2, 3, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "import": [2, 3, 5, 11, 12, 13, 15, 16, 20, 22, 24, 25, 26], "direct": [2, 12, 22, 23], "consist": [2, 12, 19], "follow": [2, 11, 12, 16, 17, 18, 22, 23, 27], "member": 2, "frank": [2, 13], "kreuwel": 2, "jan": 2, "maarten": 2, "van": [2, 3, 5, 16], "doorn": [2, 3, 5, 16], "jona": 2, "den": 2, "bogaard": 2, "david": 2, "swinkel": 2, "frederik": 2, "stoel": 2, "more": [2, 3, 5, 10, 12, 14, 15, 16, 18, 23, 25, 26, 27], "meet": 2, "note": [2, 14, 15, 16, 17, 18, 24, 25], "link": [2, 3, 5, 11, 18, 26, 27], "found": [2, 10, 12, 22, 23, 27], "govern": 2, "actual": [2, 3, 22, 26], "overview": [2, 6, 8], "welcom": 2, "form": [2, 12], "code": [2, 3, 5, 16, 22, 25, 26, 27], "look": [2, 3, 12, 23, 25, 26, 27], "If": [2, 3, 6, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24, 27], "bug": 2, "would": [2, 27], "like": [2, 12, 27], "request": [2, 6, 12, 14, 15, 16], "featur": [2, 3, 8, 11, 12, 13, 15, 16, 17, 18, 19, 22], "pleas": [2, 6, 14, 15, 16], "dure": [2, 11, 12, 14, 23, 24], "bi": 2, "weekli": 2, "refin": 2, "we": [2, 3, 5, 11, 13, 16, 17, 19, 27], "anyon": 2, "interest": 2, "detail": [2, 3, 6, 26], "t": [2, 10, 12, 14, 22, 24], "what": [2, 11, 27], "see": [2, 3, 5, 6, 11, 12, 13, 14, 15, 16, 18, 26, 27], "get": [2, 3, 10, 11, 13, 14, 16, 17, 18, 22, 23, 25, 27], "Or": [2, 13], "post": [2, 3, 18, 20, 22, 23, 26], "your": [2, 3, 12], "question": 2, "channel": [2, 6], "understand": 3, "help": 3, "gain": [3, 16], "how": [3, 5, 8, 13, 14, 15, 16, 22, 24, 25, 27], "us": [3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27], "better": [3, 10, 19, 22], "rest": [3, 11], "document": [3, 12, 27], "set": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "up": [3, 25, 26], "python": [3, 6, 11, 12, 15, 22], "order": [3, 10, 12, 13, 16, 17, 19, 22, 23], "It": [3, 5, 6, 12, 15, 16, 19, 22], "job": [3, 10, 11, 12, 14, 15, 19, 20, 22, 23, 24, 26], "configur": [3, 11, 14, 23, 25, 26], "e": [3, 11, 13, 14, 15, 16, 18, 22, 26], "g": [3, 11, 13, 14, 15, 16, 22], "certain": [3, 12, 25], "locat": [3, 5, 11, 12, 22, 26], "call": [3, 14, 22, 23], "evalu": [3, 13, 16, 27], "correspond": [3, 12, 15, 16, 17, 19, 26], "includ": [3, 5, 8, 12, 14, 16, 17, 19, 22, 25, 27], "from": [3, 5, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27], "write": [3, 13, 22, 25], "give": [3, 5, 14], "choos": [3, 11], "fetch": [3, 23], "requir": [3, 6, 11, 12, 13, 14, 16, 19, 25, 27], "yourself": 3, "check": [3, 12, 19, 22, 24, 27], "flatlin": [3, 11, 24], "engin": [3, 11, 12, 19], "creat": [3, 12, 13, 14, 16, 18, 19, 22, 26, 27], "yesterdai": 3, "last": [3, 12, 14, 16, 19, 22], "week": [3, 13, 14, 22], "quantil": [3, 10, 11, 13, 14, 16, 19, 22, 26], "storag": [3, 19, 22], "store": [3, 5, 7, 19, 22, 26], "mlflow": [3, 14, 19], "disk": [3, 13], "s3_bucket": 3, "aw": 3, "process": [3, 6, 11, 13, 15, 16, 20], "datafram": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25], "extra": [3, 11, 12, 20, 26], "usag": [3, 14], "separ": [3, 16, 23], "dbc": [3, 23, 25], "need": [3, 10, 11, 12, 16, 17, 19, 22, 26], "read": [3, 6, 13], "current": [3, 14, 16, 18], "support": [3, 18], "mysql": [3, 22], "influxdb": 3, "mani": [3, 8, 24], "typic": [3, 8, 22], "activ": [3, 8, 26], "These": [3, 8, 12, 19, 22, 25, 26], "prepar": [3, 8, 11, 19], "furthermor": [3, 8, 12], "allow": [3, 8, 11, 14, 15, 16], "singl": [3, 8], "multi": [3, 8], "horizon": [3, 8, 11, 12, 13, 14, 19, 24, 25, 26], "To": [3, 8, 16, 22, 25, 26], "function": [3, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26], "schemat": [3, 8], "depict": [3, 5, 8], "file": [3, 5, 8, 12, 13], "confid": [3, 8, 14, 16, 19], "estim": [3, 8, 13, 14, 15, 16, 17, 20], "": [3, 5, 6, 8, 13, 14, 15, 16, 19, 24, 25, 26, 27], "two": [3, 5, 8, 13, 14, 16, 25, 26], "method": [3, 5, 8, 12, 14, 15, 16, 23], "below": [3, 8, 25, 26], "explain": [3, 8], "differ": [3, 8, 14, 17, 24, 25], "similar": [3, 8, 11, 13, 21], "between": [3, 8, 12, 14, 17, 19, 22, 23, 24, 26], "well": [3, 8, 22, 25], "recommend": [3, 8], "should": [3, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 22, 23, 24, 25, 26], "simpli": 3, "librari": 3, "re": [3, 6], "full": [3, 16], "frontend": 3, "must": [3, 11, 16, 17], "addit": [3, 12, 22, 25, 26], "want": [3, 6, 16, 17], "github": [3, 13, 25, 27], "repositori": [3, 5, 25, 27], "fetcher": 3, "schedul": [3, 25], "cronjob": [3, 22, 25], "kubernet": 3, "other": [3, 5, 14, 15, 16, 18, 20, 23, 24], "config": [3, 10, 11, 22, 23, 25], "cron": [3, 22, 26], "ci": 3, "cd": 3, "continu": [3, 24], "integr": [3, 25], "deliveri": 3, "build": [3, 13, 18, 23], "test": [3, 11, 16, 17, 19, 22, 23], "jenkin": 3, "chef": 3, "puppet": 3, "tekton": 3, "etc": [3, 11, 25], "action": [3, 18], "publish": 3, "pypi": [3, 6], "time": [3, 5, 12, 14, 16, 18, 19, 22, 24, 26], "releas": 3, "version": [3, 6, 14, 15, 16], "comput": [3, 12, 13, 15, 16, 19, 23, 26], "resourc": [3, 27], "product": [3, 5, 16, 20, 26], "variou": [3, 12, 16], "azur": 3, "gcp": 3, "linod": 3, "sql": [3, 18, 22, 26], "dashboard": [3, 27], "uer": 3, "visual": 3, "histor": [3, 12, 14, 16, 22], "techniqu": [3, 5], "transfer": [3, 5], "knowledg": [3, 5], "substat": [3, 5, 16, 26], "incomplet": [3, 5, 24], "being": [3, 5], "known": [3, 5, 13, 16], "carri": [3, 5, 16, 22, 26], "out": [3, 5, 12, 16, 17, 20, 22, 23, 26, 27], "target": [3, 5, 13, 15, 16, 19, 24], "total": [3, 5, 18, 24], "each": [3, 5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27], "becaus": [3, 5, 13, 16, 19], "ha": [3, 5, 10, 11, 12, 14, 15, 16, 19], "purpos": [3, 5], "formul": [3, 5], "2": [3, 5, 6, 13, 15, 22, 26], "step": [3, 5, 22, 24], "approach": [3, 5], "bellow": [3, 5, 7, 26], "structur": [3, 5, 7], "everi": [3, 5, 12, 19, 22, 26], "metadata": [3, 5, 14, 15, 16, 20, 26], "output": [3, 5, 12, 16, 18, 19, 20, 22], "At": [3, 5], "first": [3, 5, 12, 13, 16, 19, 22, 24, 25], "feed": [3, 5], "togeth": [3, 5, 19, 25], "Then": [3, 5, 16], "final": [3, 5, 12, 15], "teng": [3, 5, 16], "y": [3, 5, 15, 16], "nooten": [3, 5, 16], "c": [3, 5, 12, 16, 26], "j": [3, 5, 16], "m": [3, 5, 12, 16, 26], "ottenbro": [3, 5, 16], "huijbregt": [3, 5, 16], "jansen": [3, 5, 16], "improv": [3, 5, 12, 16, 24], "Near": [3, 5, 16], "real": [3, 5, 16], "submit": [3, 5, 6, 16], "TO": [3, 5], "notebook": [3, 5], "05": [3, 5, 13, 19, 26], "ipynb": [3, 5], "dazls_stor": [3, 5], "sav": [3, 5], "produc": [3, 5, 11, 16, 20, 26], "whenev": [3, 5], "chang": [3, 5, 14, 15, 16, 26], "py": [3, 5, 12, 22, 26], "again": [3, 5], "newli": [3, 5, 18, 22], "er": [3, 26], "diagram": [3, 7, 26], "shown": [3, 7, 25, 26], "necessari": [3, 15, 19, 26], "tabl": [3, 18, 22, 24, 26], "describ": [3, 12, 13, 20, 26], "name": [3, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 26], "type": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26], "comment": [3, 26], "exampl": [3, 12, 14, 15, 19, 20, 22, 24, 25, 26], "id": [3, 10, 11, 14, 19, 22, 23, 26], "int": [3, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26], "307": [3, 26], "chr": [3, 26], "location_a": [3, 26], "vip": [3, 26], "bool": [3, 11, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26], "deprec": [3, 26], "1": [3, 12, 13, 14, 15, 16, 17, 19, 22, 24, 26], "statu": [3, 26], "collect": [3, 12, 22, 26], "belong": [3, 26], "also": [3, 6, 12, 13, 14, 16, 18, 19, 25, 26], "specif": [3, 11, 12, 14, 16, 18, 19, 22, 23, 26], "kei": [3, 11, 12, 14, 15, 18, 19, 22, 26, 27], "94": [3, 26], "cid": [3, 26], "apikei": [3, 26], "valu": [3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 26], "uuid": [3, 26], "retriev": [3, 16, 20, 26], "intern": [3, 26], "alliand": [3, 26], "customers_predict": [3, 26], "customer_id": [3, 26], "prediction_id": [3, 26], "313": [3, 26], "curv": [3, 12, 20, 26], "turbin": [3, 12, 26], "paramet": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26], "sigmoid": [3, 26], "center": [3, 26], "slope": [3, 26], "vesta": [3, 26], "v112": [3, 26], "cut_in": [3, 26], "float": [3, 11, 12, 13, 15, 16, 17, 19, 24, 25, 26], "min": [3, 13, 17, 26], "speed": [3, 20, 26], "3": [3, 12, 14, 15, 16, 22, 26], "cut_off": [3, 26], "max": [3, 17, 22, 24, 26], "25": [3, 12, 19, 26], "kind": [3, 25, 26], "onshor": [3, 26], "offshor": [3, 26], "manufactur": [3, 26], "enercon": [3, 26], "peak_capac": [3, 26], "w": [3, 26], "3040270": [3, 26], "rated_pow": [3, 12, 26], "rate": [3, 12, 26], "3000000": [3, 26], "slope_cent": [3, 12, 26], "50": [3, 26], "7": [3, 12, 22, 26], "91": [3, 26], "steep": [3, 12, 26], "formula": [3, 26], "0": [3, 6, 12, 13, 14, 15, 16, 17, 19, 22, 24, 26], "76": [3, 26], "In": [3, 12, 16, 17, 25, 26], "p": [3, 26], "v": [3, 26], "frac": [3, 26], "p_": [3, 26], "k": [3, 16, 17, 26], "where": [3, 12, 13, 15, 19, 24, 26], "windspe": [3, 12, 26], "hub": [3, 12, 26], "height": [3, 12, 26], "regioninput": [3, 26], "region": [3, 26], "leeuwarden": [3, 26], "lon": [3, 10, 11, 12, 22, 26], "decim": [3, 26], "longitud": [3, 11, 12, 26], "5": [3, 13, 16, 26], "800": [3, 26], "lat": [3, 10, 11, 12, 22, 26], "latitud": [3, 11, 12, 26], "53": [3, 26], "201": [3, 26], "coordin": [3, 26], "forecast_typ": [3, 10, 11, 20, 26], "datetim": [3, 10, 12, 14, 16, 19, 20, 22, 24, 26], "creation": [3, 12, 26], "2019": [3, 26], "16": [3, 26], "14": [3, 26], "38": [3, 26], "off": [3, 26], "horizon_minut": [3, 10, 11, 19, 22, 26], "minut": [3, 11, 12, 26], "2880": [3, 26], "resolution_minut": [3, 10, 11, 19, 22, 26], "resolut": [3, 11, 26], "15": [3, 12, 14, 17, 26], "train_compon": [3, 10, 11, 26], "option": [3, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 26], "ean": [3, 26], "connectionpoint": [3, 26], "connect": [3, 22, 25, 26], "point": [3, 17, 20, 26, 27], "http": [3, 6, 12, 13, 16, 18, 26], "en": [3, 12, 13, 18, 22, 26], "wikipedia": [3, 12, 26], "org": [3, 6, 12, 13, 16, 26], "wiki": [3, 12, 26], "international_article_numb": [3, 26], "000000000000000003": [3, 26], "core": [3, 19, 26], "larglei": [3, 26], "translat": [3, 26], "usuali": [3, 26], "coupl": [3, 26], "one": [3, 13, 14, 15, 16, 18, 19, 22, 23, 26], "made": [3, 11, 26], "22": [3, 26], "quantile_set_id": [3, 26], "317": [3, 26], "system_id": [3, 26], "location_a_system_1": [3, 26], "factor": [3, 26], "doubl": [3, 26], "multipli": [3, 26], "befor": [3, 14, 16, 24, 26], "mulitpl": [3, 22, 26], "ad": [3, 12, 14, 19, 20, 26], "sum": [3, 20, 26], "ffor": [3, 26], "whatev": [3, 26], "reason": [3, 13, 26], "subtract": [3, 26], "some": [3, 14, 15, 16, 23, 26, 27], "scale": [3, 16, 26], "default": [3, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26], "desir": [3, 11, 14, 16, 17, 21, 22, 23, 26], "repres": [3, 17, 26], "save": [3, 10, 11, 14, 22, 26], "influx": [3, 26], "json": [3, 26], "list": [3, 11, 12, 13, 15, 16, 17, 19, 23, 24, 25, 26, 27], "9": [3, 16, 26], "95": [3, 13, 26], "descript": [3, 10, 11, 19, 22, 24, 26], "pv": [3, 22, 26], "pid": [3, 10, 11, 19, 22, 23, 26], "123": [3, 26], "51": [3, 26], "9850343": [3, 26], "8956792": [3, 26], "radiu": [3, 22, 26], "km": [3, 26], "10": [3, 12, 14, 26], "peak_pow": [3, 22, 26], "1000": [3, 26], "none": [3, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26], "sid": [3, 10, 11, 26], "origin": [3, 14, 15, 16, 26], "em": [3, 26], "manag": [3, 22, 23, 26], "scada": [3, 26], "837": [3, 26], "813": [3, 26], "gelderland": [3, 26], "timezon": [3, 12, 26], "utc": [3, 26], "brand": [3, 6, 26], "accurate_inc": [3, 26], "freq": [3, 12, 22, 26], "qual": [3, 26], "lag": [3, 12, 26], "date": [3, 12, 16, 17, 26], "registr": [3, 26], "2021": [3, 19, 26], "01": [3, 12, 22, 26], "09": [3, 12, 22, 26], "44": [3, 26], "00": [3, 12, 19, 22, 26], "autoupd": [3, 26], "tinyint": [3, 26], "polar": [3, 26], "sign": [3, 26], "convent": [3, 26], "measurements_customer_api_key_id": [3, 26], "199": [3, 26], "compli": [3, 26], "posit": [3, 12, 13, 20, 26], "neg": [3, 13, 20, 22, 26], "arg": [3, 14, 22, 23, 26], "argument": [3, 10, 11, 14, 17, 22, 23, 26], "inprogress": [3, 26], "pick": [3, 11, 26], "traci": [3, 22, 26], "procc": [3, 11, 26], "manual": [3, 12, 23, 26], "respect": [3, 12, 16, 23, 26], "todo": [3, 24, 26], "station": [3, 24, 26], "2023": [3, 12, 26], "06": [3, 26], "08": [3, 12, 26], "18": [3, 26], "26": [3, 26], "input_c": [3, 26], "deelen": [3, 26], "52": [3, 26], "067": [3, 26], "8": [3, 22, 26], "countri": [3, 12, 26], "nl": [3, 12, 26], "empti": [3, 12, 19, 26], "turbine_typ": [3, 10, 11, 26], "field": [3, 12, 15, 26], "n_turbin": [3, 10, 11, 12, 26], "number": [3, 11, 12, 13, 15, 16, 17, 19, 22, 26], "hub_height": [3, 10, 11, 12, 26], "extrapol": [3, 12, 26], "correct": [3, 12, 24, 26], "schema": [5, 6], "level": [5, 6, 16, 18, 19, 22], "short": [6, 16], "term": [6, 25], "instal": [6, 27], "instruct": 6, "start": [6, 12, 14, 16, 17, 19, 22, 24, 27], "concept": [6, 25, 26, 27], "section": [6, 18, 25, 27], "otherwis": [6, 11, 12, 14, 15, 16, 19, 24], "readi": [6, 27], "checkout": 6, "guid": [6, 14, 15, 16], "high": 6, "methodologi": 6, "domain": [6, 16], "adapt": [6, 16], "zero": [6, 13, 15, 16, 20, 24], "shot": [6, 8], "sequenc": [6, 17, 21, 23], "dazl": [6, 10, 14, 19], "relat": [6, 12, 20], "databas": [6, 19, 22, 23, 25, 27], "commun": 6, "latest": [6, 13], "websit": 6, "watch": 6, "video": 6, "instead": [6, 13, 14, 15, 16], "join": 6, "discuss": 6, "our": [6, 13], "md": 6, "code_of_conduct": 6, "project_govern": 6, "pull": 6, "u": [6, 13, 18, 22], "under": 6, "mozilla": [6, 13], "public": 6, "dataprepdataclass": [10, 11], "klass": [10, 11], "modelspecificationdataclass": [10, 11, 14, 19, 25], "feature_modul": [10, 11, 12], "feature_nam": [10, 11, 12, 14, 15, 16, 19], "hyper_param": [10, 11, 19], "predictionjobdataclass": [10, 11, 12, 14, 19, 20, 22, 23, 25], "alternative_forecast_model_pid": [10, 11], "backtest_split_func": [10, 11], "completeness_treshold": [10, 11], "data_prep_class": [10, 11], "default_modelspec": [10, 11], "depends_on": [10, 11], "flatliner_treshold": [10, 11], "minimal_table_length": [10, 11, 24], "pipelines_to_run": [10, 11], "save_train_forecast": [10, 11, 19], "train_horizons_minut": [10, 11], "train_split_func": [10, 11], "splitfuncdataclass": [10, 11], "ardataprepar": [10, 12], "prepare_forecast_data": [10, 12], "prepare_train_data": [10, 12], "abstractdataprepar": [10, 11, 12], "check_model": [10, 12], "legacydataprepar": [10, 12], "featureadd": [10, 12], "parse_feature_nam": [10, 12], "required_featur": [10, 12], "featuredispatch": [10, 12], "dispatch_featur": [10, 12], "parsedfeatur": [10, 12], "param": [10, 12, 18], "adders_from_modul": [10, 12], "abstractfeatureappl": [10, 12], "add_featur": [10, 12], "operationalpredictfeatureappl": [10, 12], "trainfeatureappl": [10, 12], "add_missing_feature_column": [10, 12], "enforce_feature_ord": [10, 12], "remove_non_requested_feature_column": [10, 12], "add_historic_load_as_a_featur": [10, 12], "check_for_bridge_dai": [10, 12], "generate_holiday_feature_funct": [10, 12], "extract_lag_featur": [10, 12], "generate_lag_feature_funct": [10, 12], "generate_non_trivial_lag_tim": [10, 12], "generate_trivial_lag_featur": [10, 12], "add_additional_solar_featur": [10, 12], "add_additional_wind_featur": [10, 12], "add_humidity_featur": [10, 12], "calc_air_dens": [10, 12], "calc_dewpoint": [10, 12], "calc_saturation_pressur": [10, 12], "calc_vapour_pressur": [10, 12], "calculate_dni": [10, 12], "calculate_gti": [10, 12], "calculate_windspeed_at_hubheight": [10, 12], "calculate_windturbine_power_output": [10, 12], "humidity_calcul": [10, 12], "convert_to_base64_data_uri": [10, 13], "plot_data_seri": [10, 13], "plot_feature_import": [10, 13], "bia": [10, 13, 22], "frac_in_stdev": [10, 13], "franks_skill_scor": [10, 13], "franks_skill_score_peak": [10, 13], "get_eval_metric_funct": [10, 13], "mae": [10, 13, 14], "nsme": [10, 13, 22], "r_mae": [10, 13], "r_mae_highest": [10, 13], "r_mae_lowest": [10, 13], "r_mne_highest": [10, 13], "r_mpe_highest": [10, 13], "rmse": [10, 13, 16, 22], "skill_scor": [10, 13], "skill_score_positive_peak": [10, 13], "xgb_quantile_ev": [10, 13], "xgb_quantile_obj": [10, 13], "generate_report": [10, 13], "get_fiabl": [10, 13], "get_metr": [10, 13], "write_report_to_disk": [10, 13], "metamodel": [10, 14, 16], "grouped_regressor": [10, 14], "missing_values_handl": [10, 14], "regressor": [10, 14, 15, 25], "custom_regressor": [10, 14], "lgbm": [10, 14], "basecasemodel": [10, 14], "can_predict_quantil": [10, 14, 16], "fit": [10, 14, 15, 16, 19, 22], "make_basecase_forecast": [10, 14], "set_predict_request": [10, 14, 15, 16], "set_score_request": [10, 14, 15, 16], "confidenceintervalappl": [10, 14], "add_confidence_interv": [10, 14], "generate_fallback": [10, 14], "modelcr": [10, 14], "model_constructor": [10, 14], "create_model": [10, 14], "arimaregressorobject": [10, 14], "get_param": [10, 14], "lgbregressorobject": [10, 14], "get_pruning_callback": [10, 14], "linearregressorobject": [10, 14], "proloafregressorobject": [10, 14], "regressorobject": [10, 14, 16, 19], "create_report": [10, 14], "get_default_valu": [10, 14], "get_trial_track": [10, 14], "xgbquantileregressorobject": [10, 14], "xgbregressorobject": [10, 14], "objectivecr": [10, 14], "create_object": [10, 14], "mlflowseri": [10, 14], "get_model_ag": [10, 14], "load_model": [10, 14], "remove_old_model": [10, 14], "save_model": [10, 14], "standarddeviationgener": [10, 14], "generate_standard_deviation_data": [10, 14], "backtest_split_default": [10, 17], "group_kfold": [10, 17], "random_sampl": [10, 17], "sample_indices_train_v": [10, 17], "split_data_train_validation_test": [10, 17], "performancemet": [10, 18], "checkpoint": [10, 18], "complete_level": [10, 18], "start_level": [10, 18], "build_sql_query_str": [10, 18], "format_messag": [10, 18], "get_card_sect": [10, 18], "post_team": [10, 18], "create_basecase_forecast_pipelin": [10, 19, 25], "generate_basecase_confidence_interv": [10, 19], "create_components_forecast_pipelin": [10, 19], "create_input": [10, 19], "create_forecast_pipelin": [10, 19], "create_forecast_pipeline_cor": [10, 19, 25], "optimize_hyperparameters_pipelin": [10, 19, 25], "optimize_hyperparameters_pipeline_cor": [10, 19, 25], "optuna_optim": [10, 19], "train_model_and_forecast_back_test": [10, 19], "train_model_and_forecast_test_cor": [10, 19], "train_model_pipelin": [10, 19], "train_model_pipeline_cor": [10, 19, 25], "train_pipeline_common": [10, 19], "train_pipeline_step_compute_featur": [10, 19], "train_pipeline_step_load_model": [10, 19], "train_pipeline_step_split_data": [10, 19], "train_pipeline_step_train_model": [10, 19], "generate_forecast_datetime_rang": [10, 19], "add_components_base_case_forecast": [10, 20], "add_prediction_job_properties_to_forecast": [10, 20], "calculate_wind_pow": [10, 20], "normalize_and_convert_weather_data_for_split": [10, 20], "post_process_wind_solar": [10, 20], "split_forecast_in_compon": [10, 20], "replace_repeated_values_with_nan": [10, 21], "depend": [10, 11, 12, 14, 19, 22], "predictionjobloop": [10, 22], "taskcontext": [10, 22], "calc_kpi_for_specific_pid": [10, 22], "check_kpi_task": [10, 22], "main": [10, 22, 25, 27], "set_incomplete_kpi_to_nan": [10, 22], "create_basecase_forecast_task": [10, 22], "create_components_forecast_task": [10, 22], "create_forecast_task": [10, 22], "apply_fit_insol": [10, 22], "apply_persist": [10, 22], "calc_norm": [10, 22], "combine_forecast": [10, 22], "fide": [10, 22], "make_solar_prediction_pj": [10, 22], "make_wind_forecast_pj": [10, 22], "optimize_hyperparameters_task": [10, 22], "run_tracy_job": [10, 22], "convert_coefdict_to_coefsdf": [10, 22], "determine_invalid_coef": [10, 22], "find_compon": [10, 22], "split_forecast_task": [10, 22], "train_model_task": [10, 22], "calc_completeness_datafram": [10, 24], "calc_completeness_featur": [10, 24], "check_data_for_each_trafo": [10, 24], "drop_target_na": [10, 24], "find_nonzero_flatlin": [10, 24], "find_zero_flatlin": [10, 24], "is_data_suffici": [10, 24], "class": [10, 11, 12, 13, 14, 15, 16, 18, 23, 25], "enumer": 10, "hyper_paramet": 10, "custom": [10, 11, 12, 13, 16, 19, 22], "least": [10, 12, 20, 23], "30": [10, 22], "advanc": [10, 12], "insuffici": [10, 19], "invalid": [10, 12, 14, 18, 19, 22], "wrong": [10, 22], "column": [10, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 25], "deviat": [10, 14], "messag": [10, 18, 20, 22, 23], "datatim": [10, 22], "rang": [10, 13, 19, 22], "realis": [10, 13, 14, 22], "old": [10, 14, 19, 22], "higher": 10, "score": [10, 13, 14, 15, 16], "One": [10, 18], "too": [10, 19, 22], "young": [10, 19, 22], "don": [10, 12], "tra": 10, "forcast": 10, "specifi": [11, 12, 13, 14, 15, 18, 20, 22, 24], "dataclass": [11, 13, 19], "basemodel": 11, "str": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25], "dict": [11, 12, 13, 14, 18, 19, 20, 22, 25], "dataprepclass": 11, "required_argu": 11, "string": [11, 15, 16, 18, 19], "instan": 11, "attribut": [11, 16], "them": [11, 16, 22, 23], "just": [11, 16, 24], "return": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "instanc": [11, 14, 15, 25], "tupl": [11, 12, 13, 14, 15, 17, 19, 22, 23, 25], "typevar": 11, "hold": [11, 13, 22, 25], "regard": [11, 24], "hyperparamet": [11, 13, 14, 19, 22], "pydant": [11, 25], "prevent": [11, 12], "convert": [11, 13, 15, 16, 20, 22], "integ": [11, 15, 16], "smart_union": 11, "true": [11, 13, 14, 15, 16, 17, 18, 22, 23, 24], "anoth": [11, 23], "backtest": [11, 16, 19, 27], "minimum": 11, "regular": [11, 14], "prep": 11, "might": 11, "human": 11, "consecut": 11, "constant": [11, 15, 16], "detect": [11, 12, 24], "unsur": 11, "onli": [11, 12, 13, 14, 15, 16, 22, 23, 24], "often": [11, 14], "abrevi": 11, "degre": [11, 12], "length": [11, 17, 21, 24], "row": [11, 15, 24], "requier": [11, 12], "readm": 11, "pj": [11, 12, 14, 19, 20, 22, 23, 24], "indic": [11, 12, 13, 16, 17, 19, 22, 23, 24], "wether": [11, 16, 23], "whether": [11, 12, 18, 23], "taken": [11, 12], "account": 11, "callabl": [11, 13, 15, 23], "appli": [12, 15, 16, 17, 19, 22, 23], "accuraci": 12, "ago": 12, "same": [12, 25], "weekdai": 12, "holidai": 12, "100m": 12, "normalis": 12, "accord": [12, 13, 17, 19, 25], "24": [12, 22], "defin": [12, 13, 15, 16, 22], "feature_funct": 12, "recent": [12, 14, 19], "omit": 12, "deriven": 12, "onc": [12, 22], "But": 12, "present": [12, 14, 25], "unrequest": 12, "filter": 12, "later": 12, "panda": [12, 13, 15, 16, 19, 22, 25], "pd": [12, 15, 16, 19, 20, 22, 24, 25], "index": [12, 13, 14, 15, 16, 19, 20, 22, 24], "predictor_1": 12, "predictor_n": 12, "reuqest": 12, "limit": [12, 25], "feature_1": 12, "feature_m": 12, "numpi": [12, 13, 22], "np": [12, 13, 15, 16, 17, 22], "date_rang": [12, 22], "2017": [12, 22], "15t": [12, 22], "period": [12, 17, 22], "200": [12, 22], "sin": [12, 22], "pi": [12, 22], "random": [12, 17, 22, 23], "uniform": [12, 22], "model_spec": [12, 14, 19], "historical_depth": 12, "abc": 12, "abstract": [12, 16], "adder": 12, "basic": 12, "block": [12, 24], "handl": [12, 15, 16], "logic": [12, 24], "syntact": 12, "sugar": 12, "properli": 12, "df": [12, 15, 18, 21, 22, 24], "parsed_feature_nam": 12, "add": [12, 14, 20, 22], "properti": [12, 14, 16], "pars": [12, 16], "charg": 12, "dictionnari": [12, 15], "potenti": [12, 21], "doe": [12, 16, 22, 23, 25], "dictionari": [12, 14, 18, 22], "mai": [12, 24], "recogn": [12, 22], "calcul": [12, 13, 14, 19, 20, 22, 24], "orchestr": 12, "scan": 12, "assign": [12, 17], "proper": 12, "launch": 12, "effect": [12, 14, 15, 16, 24], "dispatch": 12, "alia": [12, 14, 15, 16], "module_nam": 12, "fly": 12, "sever": [12, 22], "featureappl": 12, "applicatior": 12, "latency_config": 12, "larger": [12, 19], "horzion": 12, "thei": [12, 19], "720min": 12, "720": 12, "due": [12, 17], "latenc": 12, "apx": [12, 22], "sort": [12, 17], "modelu": 12, "helper": 12, "input_data": [12, 14, 17, 19, 25], "featurelist": 12, "nan": [12, 15, 16, 21, 22, 24], "especi": 12, "useful": [12, 22], "sure": [12, 13, 22], "place": 12, "intend": [12, 17], "error": [12, 13, 14, 15, 16, 22], "predicion": [12, 15], "ideal": 12, "world": 12, "nescarri": 12, "miss": [12, 15, 16, 22, 24], "fill": [12, 15], "n": 12, "enforc": [12, 20], "alphabet": 12, "remain": 12, "everyth": 12, "eventu": 12, "assum": [12, 16, 17, 22], "variabl": [12, 16], "move": 12, "pressent": 12, "requested_featur": 12, "remov": [12, 14, 15, 22], "nescesarri": 12, "serv": 12, "failsav": 12, "prediciton": [12, 13, 16, 20], "historic_load": 12, "equal": [12, 13, 20, 22, 24], "holiday_nam": 12, "year": 12, "holiday_funct": 12, "bridge_dai": 12, "bridgedai": 12, "associ": 12, "append": [12, 18], "dto": 12, "holidayfunciton": 12, "featurefunct": 12, "path_to_school_holidays_csv": 12, "posixpath": 12, "home": 12, "runner": 12, "openstef_openstef": 12, "dutch_holidays_2020": 12, "2022": 12, "csv": 12, "2020": 12, "nieuwjaarsdag": 12, "12": 12, "kerstvakanti": 12, "23": 12, "herfstvakantienoord": 12, "www": [12, 16], "schoolvakanti": 12, "nederland": 12, "offici": 12, "ducth": 12, "until": 12, "meivakanti": 12, "herstvakanti": 12, "bouwvak": 12, "zomervakanti": 12, "voorjaarsvakanti": 12, "pasen": 12, "koningsdag": 12, "hemelvaart": 12, "pinksteren": 12, "kerst": 12, "brugdagen": 12, "updat": [12, 14, 15, 16], "dec": 12, "agenda": 12, "filepath": 12, "school": 12, "the_name_of_the_holiday_to_be_check": 12, "were": 12, "dataset": [12, 16, 17, 19, 22], "lagtim": 12, "automat": [12, 13, 23], "lag_funct": 12, "generate_lag_funct": 12, "minute_list": 12, "h_ahead": 12, "height_treshold": 12, "autocorrel": 12, "trace": 12, "subsequ": 12, "minim": [12, 24], "peak": [12, 13, 17, 22], "adit": 12, "non": [12, 13, 14], "trivial": 12, "mostli": 12, "wheather": 12, "humid": 12, "determin": [12, 14, 20, 22], "humidti": 12, "temperatur": 12, "pressur": 12, "rh": 12, "dewpoint": 12, "union": [12, 13, 14, 15, 18, 19, 23, 24], "ndarrai": [12, 13, 15, 16], "atmospher": 12, "pa": 12, "rel": [12, 13], "air": 12, "densiti": 12, "kg": 12, "vapour_pressur": 12, "dew_point": 12, "mroe": 12, "info": [12, 13], "vapour": 12, "water": 12, "vaisala": 12, "com": [12, 13, 18], "site": 12, "humidity_conversion_formulas_b210973en": 12, "f": 12, "pdf": 12, "satur": 12, "psat": 12, "radiat": [12, 19, 20], "normal": [12, 14, 16, 20], "irradi": 12, "dni": 12, "deriv": [12, 13, 14], "obtain": [12, 19], "seri": [12, 13, 16, 20, 22, 24], "datetimeindex": [12, 24], "right": 12, "zone": 12, "predictjob": 12, "surface_tilt": 12, "34": 12, "surface_azimuth": 12, "180": 12, "gti": 12, "poa": 12, "global": [12, 15], "tilt": 12, "plane": 12, "arrai": [12, 13, 15, 16, 17, 24], "surfac": 12, "photovolta": 12, "system": [12, 22], "face": 12, "south": 12, "north": 12, "east": 12, "90": 12, "west": 12, "270": 12, "fromheight": 12, "100": [12, 16, 19], "hubheight": 12, "hubheigh": 12, "law": 12, "wind_profile_power_law": 12, "OR": 12, "10m": 12, "turbine_data": [12, 20], "through": [12, 20, 25], "result": [12, 15, 16, 19, 22], "1mwp": [12, 20], "windspeedhub": 12, "nturbin": 12, "turbinedata": 12, "hpa": 12, "moistur": 12, "numer": [12, 15, 16], "path_in": 13, "path_out": 13, "content_typ": 13, "data_uri": 13, "path": [13, 19, 25], "uri": [13, 19], "doc": [13, 18], "web": 13, "header": 13, "predict_data": 13, "47": [13, 19], "plot": 13, "pass": [13, 14, 15, 16, 18, 23], "There": 13, "either": [13, 19], "match": 13, "legend": 13, "line": 13, "feature_import": 13, "treemap": 13, "weight": [13, 16, 24], "assess": 13, "qualiti": [13, 14, 20], "absolut": [13, 22], "stdev": [13, 14], "amount": [13, 24], "within": [13, 16, 25], "range_": 13, "skill": 13, "metric_nam": 13, "mean": [13, 14, 15, 16, 22, 23, 24, 25], "nash": 13, "sutcliff": 13, "effici": [13, 22], "previou": [13, 18, 23], "percentil": 13, "percent": 13, "highest": 13, "lowest": 13, "quantifi": 13, "much": 13, "underestim": 13, "overestim": 13, "root": 13, "squar": 13, "thise": 13, "pred": 13, "dmatrix": 13, "regress": [13, 14], "loss": 13, "pinbal": 13, "distribut": [13, 14], "condit": 13, "xgboost": [13, 16], "gist": 13, "nikolai": 13, "lysenko": 13, "06769d701c1d9c9acb9a66f2f9d7a6c7": 13, "fucntion": 13, "degener": 13, "substitut": [13, 14], "second": 13, "page": [13, 27], "dmlc": [13, 16], "1825": 13, "why": 13, "trick": 13, "max_delta_step": [13, 16], "small": 13, "enough": [13, 24], "satisfi": 13, "gradient": 13, "hessian": 13, "gistcom": 13, "2322558": 13, "feature_importance_figur": 13, "data_series_figur": 13, "signatur": 13, "train_data": [13, 19], "validation_data": [13, 14, 19], "test_data": [13, 19], "openstfregressor": [13, 14, 16, 19, 24, 25], "static": [13, 14, 16], "y_true": 13, "y_pred": 13, "report_fold": 13, "view": 13, "grafana": 13, "groupedregressor": [14, 15], "feature_names_": [14, 15], "estimators_": [14, 15], "grouped_comput": [14, 15], "set_fit_request": [14, 15, 16], "missingvalueshandl": [14, 15, 16], "non_null_columns_": [14, 15], "n_features_in_": [14, 15], "regressor_": [14, 15], "imputer_": [14, 15], "pipeline_": [14, 15], "feature_importances_": [14, 15], "arimaopenstfregressor": [14, 16], "predict_quantil": [14, 16], "set_feature_import": [14, 16], "update_historic_data": [14, 16], "customopenstfregressor": [14, 16], "valid_kwarg": [14, 16], "create_custom_object": [14, 16], "is_custom_typ": [14, 16], "load_custom_model": [14, 16], "lgbmopenstfregressor": [14, 16], "gain_importance_nam": [14, 16], "weight_importance_nam": [14, 16], "linearopenstfregressor": [14, 16], "linearregressor": [14, 16], "xgbopenstfregressor": [14, 16], "xgbquantileopenstfregressor": [14, 16], "get_feature_importances_from_boost": [14, 16], "baseestim": [14, 15, 16], "regressormixin": [14, 15, 16], "forecast_input_data": 14, "overwrite_delay_hour": 14, "48": 14, "idea": 14, "els": 14, "still": 14, "valueerror": [14, 16, 19], "7d": 14, "14d": 14, "comat": 14, "sklearn": [14, 15, 16], "unchang": [14, 15, 16], "enable_metadata_rout": [14, 15, 16], "set_config": [14, 15, 16], "rout": [14, 15, 16], "mechan": [14, 15, 16], "ignor": [14, 15, 16, 22, 24], "fals": [14, 15, 16, 17, 19, 22, 23, 24], "meta": [14, 15, 16, 20], "metadata_rout": [14, 15, 16], "retain": [14, 15, 16], "sub": [14, 15, 16], "insid": [14, 15, 16], "self": [14, 15, 16, 18, 25], "sample_weight": [14, 15, 16], "interv": [14, 16, 19], "confidencegener": 14, "precis": 14, "defenit": 14, "group": [14, 15, 17, 23], "assumpt": [14, 20], "forecast_input": 14, "fallback_strategi": 14, "extreme_dai": 14, "fall": 14, "back": [14, 17, 19], "extrem": [14, 17], "profil": [14, 22], "strategi": [14, 15, 16, 17], "daili": 14, "len": [14, 22], "notimplementederror": 14, "factori": 14, "model_typ": [14, 16, 22], "kwarg": [14, 15, 16, 18, 22, 23], "construct": 14, "keyword": [14, 16, 23], "trial": [14, 19], "temporari": 14, "seem": 14, "strang": 14, "optuna": [14, 19], "usual": 14, "done": [14, 19, 25], "statist": 14, "analysi": [14, 16], "heurist": 14, "hyperparam": 14, "split_func": 14, "split_arg": 14, "test_fract": [14, 17, 19], "validation_fract": [14, 17], "eval_metr": [14, 16], "verbos": [14, 16], "studi": [14, 19], "constructor": 14, "he": [14, 16], "initi": [14, 25], "classmethod": [14, 15, 16], "without": [14, 15, 19, 27], "al": 14, "xgbquantil": [14, 16], "mlflow_tracking_uri": [14, 19], "experiment_nam": 14, "hyperparameter_optimization_onli": 14, "ag": [14, 22], "experi": 14, "predit": 14, "optimais": 14, "consid": [14, 24], "max_n_model": 14, "artifact_fold": [14, 19], "per": [14, 17, 22, 24], "incorpor": 14, "nativ": 14, "2152": 14, "phase": 14, "std": 14, "base_estim": 15, "group_column": 15, "n_job": [15, 16], "metaestimatormixin": 15, "groupbi": 15, "moreov": 15, "parallel": [15, 23], "thank": 15, "joblib": 15, "x0": 15, "x1": 15, "x3": 15, "x": [15, 16, 24], "maximum": [15, 21, 22], "concurr": 15, "worker": 15, "backend": [15, 27], "multiprocess": 15, "size": [15, 24], "thread": 15, "pool": 15, "stock": 15, "eval_set": [15, 16], "func": 15, "df_re": 15, "aggreg": 15, "group_r": 15, "gb": 15, "take": [15, 19], "conrrespond": 15, "dataframegroupbi": 15, "handler": 15, "missing_valu": [15, 16], "imputation_strategi": [15, 16], "fill_valu": [15, 16], "exclus": 15, "imput": [15, 16], "transform": 15, "placehold": [15, 16], "occurr": [15, 16], "nullabl": [15, 16], "dtype": [15, 16], "sinc": [15, 16, 23], "na": [15, 16, 22, 24], "replac": [15, 16, 21, 24], "along": [15, 16], "median": [15, 16, 24], "most_frequ": [15, 16], "frequent": [15, 16], "than": [15, 16, 19, 22, 24, 25], "smallest": [15, 16], "left": [15, 16, 24], "simpleimput": 15, "missig": 15, "chain": 15, "sarimax": 16, "wrapper": [16, 25], "around": [16, 25, 27], "statsmodel": 16, "backtest_max_horizon": 16, "1440": 16, "seasonal_ord": 16, "trend": 16, "statmodel": 16, "dev": 16, "tsa": 16, "arimaresult": 16, "html": 16, "ie": 16, "past": 16, "endogen": 16, "exogen": 16, "unrel": 16, "interchang": 16, "terminologi": 16, "equival": 16, "exog": 16, "endog": 16, "stabl": 16, "endog_exog": 16, "matrix": 16, "after": [16, 24], "been": [16, 23], "end": [16, 19, 22, 24], "reli": [16, 25], "observ": [16, 24], "zeroth": 16, "fix": 16, "frequenc": 16, "sampl": [16, 17], "r2": 16, "cross": [16, 17, 19], "fold": [16, 17, 19], "th": 16, "kth": 16, "timeseriessplit": 16, "x_past": 16, "y_past": 16, "coeffici": [16, 18, 22], "pvalu": 16, "nulliti": 16, "side": 16, "wedg": 16, "timestamp": [16, 24], "custom_model_path": 16, "unseen": 16, "driven": 16, "plug": 16, "domain_model_input": 16, "adaptation_model_input": 16, "expect": [16, 19, 22], "y_train": 16, "domain_model_input_column": 16, "adaptation_model_input_column": 16, "domain_model_test_data": 16, "adaptation_model_test_data": 16, "truth": 16, "boosting_typ": 16, "gbdt": 16, "num_leav": 16, "31": 16, "max_depth": 16, "learning_r": 16, "n_estim": 16, "subsample_for_bin": 16, "200000": 16, "class_weight": 16, "min_split_gain": 16, "min_child_weight": 16, "001": 16, "min_child_sampl": 16, "20": 16, "subsampl": 16, "subsample_freq": 16, "colsample_bytre": 16, "reg_alpha": 16, "reg_lambda": 16, "random_st": 16, "silent": 16, "warn": 16, "importance_typ": 16, "lgbmregressor": 16, "openstf": 16, "particular": 16, "callback": [16, 23], "categorical_featur": 16, "early_stopping_round": 16, "eval_init_scor": 16, "eval_nam": 16, "eval_sample_weight": 16, "init_model": 16, "init_scor": 16, "num_iter": 16, "pred_contrib": 16, "pred_leaf": 16, "raw_scor": 16, "start_iter": 16, "wrap": 16, "ml": 16, "adher": 16, "abstractmethod": 16, "concret": 16, "definit": [16, 27], "common": [16, 19], "reg": 16, "squarederror": 16, "xgbregressor": 16, "total_gain": 16, "base_margin": 16, "base_margin_eval_set": 16, "feature_weight": 16, "sample_weight_eval_set": 16, "xgb_model": 16, "iteration_rang": 16, "ntree_limit": 16, "output_margin": 16, "validate_featur": 16, "gamma": 16, "6": [16, 22], "alpha": 16, "booster": 16, "feautur": 16, "feature_importance_": 16, "prefer": [16, 23], "n_fold": [17, 19], "stratification_min_max": 17, "randomize_fold_split": 17, "iter": [17, 23], "val": [17, 19], "lazi": 17, "avoid": 17, "copi": 17, "all_peak": 17, "secur": [17, 18], "sonar": 17, "accept": 17, "built": 17, "evenli": 17, "spread": 17, "clean": [17, 19, 24], "frame": [17, 19], "data_": 17, "back_test": 17, "stratif": 17, "ratio": 17, "ensur": [17, 20], "logger": 18, "name_checkpoint": 18, "log": [18, 22, 23, 24, 25], "runtim": 18, "inner": 18, "wa": [18, 23], "level_label": 18, "level_nam": 18, "enter": [18, 23], "meter": 18, "could": [18, 24, 27], "tracy_todo": 18, "insert": [18, 22], "queri": 18, "statement": [18, 24], "titl": 18, "color": 18, "section_dict": 18, "card": 18, "cardsect": 18, "msg": 18, "invalid_coeffici": 18, "coefficients_df": 18, "url": 18, "proxi": 18, "ktp": [18, 20], "authent": 18, "occur": 18, "keep": 18, "secret": [18, 25], "therefor": [18, 19, 25], "refrain": 18, "enhanc": 18, "button": 18, "simpl": [18, 20], "complex": 18, "text": 18, "imag": 18, "fact": 18, "markdown": 18, "microsoft": 18, "outlook": 18, "send": [18, 20, 22], "connector": [18, 25], "webhook": 18, "optinon": 18, "namespac": 18, "data_with_featur": 19, "weather_data": [19, 20], "windspeed_100m": [19, 20], "forecast_wind_on_shor": 19, "forecast_solar": 19, "forecast_oth": [19, 20], "algtyp": 19, "so": 19, "top": [19, 22], "track": 19, "persisit": 19, "n_trial": [19, 25], "raw": 19, "servic": 19, "artifact": 19, "input_d": 19, "best": [19, 22], "round": 19, "validated_data_with_featur": 19, "modelspec": [19, 25], "training_horizon": 19, "entir": 19, "kfold": 19, "testset": 19, "whole": 19, "randomli": 19, "do": [19, 22], "NOT": 19, "FOR": 19, "check_old_model_ag": [19, 22], "middl": 19, "care": 19, "persist": [19, 22], "skip": [19, 22, 24], "old_model": [19, 25], "compar": 19, "fitted_model": 19, "datafrma": 19, "test_data_predefin": 19, "share": 19, "boolean": [19, 22], "predefin": 19, "forecast_data": 19, "cluster": 19, "null": 19, "11": 19, "19": 19, "17": 19, "04": 19, "basecase_forecast": 20, "glmd": 20, "correctli": 20, "tennet": 20, "algorithm_typ": 20, "forecast_qu": 20, "algirithm": 20, "windenergi": 20, "windpow": 20, "cari": [20, 22], "consupt": 20, "split_coef": 20, "previous": 20, "coef": 20, "max_length": 21, "column_nam": 21, "sequenti": 21, "repeat": [21, 24], "abov": [21, 22, 24], "build_graph_structur": [22, 23], "build_nx_graph": [22, 23], "find_group": [22, 23], "has_depend": [22, 23], "map": [22, 23], "kpi": 22, "prognos": 22, "folow": 22, "splitenergi": 22, "meant": 22, "altern": 22, "predicted_load": 22, "inf": 22, "dictonari": 22, "t_ahead": 22, "enddat": 22, "window": 22, "clarif": 22, "rmae": 22, "ahead": 22, "24h": 22, "context": [22, 23], "start_tim": 22, "end_tim": 22, "t_ahead_h": 22, "less": 22, "accur": 22, "almost": 22, "now": 22, "earlier": 22, "datapoint": 22, "interpol": 22, "k8": 22, "folder": 22, "On": 22, "resolv": 22, "contect": 22, "model_train": 22, "tdcv": 22, "someth": 22, "goe": 22, "contribut": 22, "add_to_df": 22, "hours_delta": 22, "polynomi": 22, "insol": 22, "yield": 22, "2nd": 22, "hoursdelta": 22, "knmi": 22, "addtodf": 22, "norm": 22, "forecaopenstefitinsol": 22, "nb": 22, "300": 22, "loc": 22, "smooth_entri": 22, "4": 22, "colnam": 22, "script": 22, "ab": 22, "smoothentri": 22, "entri": 22, "over": [22, 23], "smooth": 22, "combination_coef": 22, "independ": 22, "predetermin": 22, "algorithm1": 22, "algorithmn": 22, "combinationcoef": 22, "param1": 22, "paramn": 22, "all_forecast": 22, "180961000": 22, "optimize_hyper_param": 22, "prognosi": 22, "check_hyper_param_ag": 22, "exce": 22, "todolist": 22, "tri": 22, "her": 22, "alreadi": [22, 23], "progress": 22, "acquir": 22, "interpret": 22, "abl": 22, "available_funct": 22, "jon": 22, "achiev": 22, "domest": 22, "coefici": 22, "input_split_funct": 22, "coefdict": 22, "db": 22, "household": 22, "new_coef": 22, "last_coef": 22, "zero_bound": 22, "exactli": 22, "wind_ref": 22, "pv_ref": 22, "colum": 22, "retrain": 22, "slack": 22, "datetime_start": 22, "datetime_end": 22, "beast": 22, "graph": 23, "node": 23, "edg": 23, "networkx": 23, "digraph": 23, "randomize_group": 23, "treat": 23, "subgroup": 23, "stop_on_except": 23, "random_ord": 23, "on_exception_callback": 23, "on_successful_callback": 23, "on_end_callback": 23, "debug_pid": 23, "pj_kwarg": 23, "conveni": 23, "behaviour": 23, "tip": 23, "debug": 23, "specific_pid": 23, "loop": 23, "break": 23, "everytim": 23, "willed": 23, "highli": 23, "suppress_except": 23, "post_teams_on_except": 23, "on_except": 23, "on_success": 23, "on_end": 23, "my_task_nam": 23, "encount": 23, "exc_typ": 23, "exc_info": 23, "stack_info": 23, "time_delai": 24, "homogenis": 24, "count": 24, "resampl": 24, "delta": 24, "excl": 24, "col": 24, "dataframa": 24, "load1": 24, "loadn": 24, "load_correct": 24, "lc_": 24, "threshold": 24, "stationflatlin": 24, "timestep": 24, "moment": 24, "lot": 24, "mnt": 24, "scipi": 24, "ndimag": 24, "flatliner_window": 24, "flatliner_load_threshold": 24, "compens": 24, "trafo": 24, "timedelta": 24, "big": 24, "completeness_threshold": 24, "anyth": 24, "suffici": 24, "pj_id": 24, "flatliner_threshold": 24, "longer": 24, "suggest": 24, "appear": 24, "ind": 24, "identifi": 24, "repetit": 24, "mention": 25, "extens": 25, "leverag": 25, "fuction": 25, "easier": 25, "wherea": 25, "offer": [25, 27], "flexibl": 25, "design": [25, 27], "scalabl": 25, "illustr": 25, "snippet": 25, "show": [25, 27], "let": 25, "tune": 25, "suppos": 25, "ran": 25, "easi": [25, 27], "addition": 25, "demonstr": [25, 27], "apart": [25, 27], "baseset": 25, "relevanyt": 25, "usernam": 25, "host": 25, "sy": 25, "pathlib": 25, "openstef_dbc": 25, "def": 25, "configure_log": 25, "loglevel": 25, "runtime_env": 25, "env": 25, "__name__": 25, "__main__": 25, "setup": [25, 27], "unlik": 25, "arguabl": 25, "neat": 25, "expos": 25, "fastapi": 25, "framework": 25, "pattern": 25, "openstefrepositori": 25, "interact": 25, "forecast_pipelin": 25, "basecase_forecast_pipelin": 25, "train_pipelin": 25, "great": 27, "becom": 27, "familiar": 27, "assort": 27, "even": 27, "encourag": 27, "depth": 27, "datastor": 27, "frontent": 27, "screenshot": 27, "offlin": 27}, "objects": {"": [[10, 0, 0, "-", "openstef"]], "openstef": [[11, 0, 0, "-", "data_classes"], [10, 0, 0, "-", "enums"], [10, 0, 0, "-", "exceptions"], [12, 0, 0, "-", "feature_engineering"], [13, 0, 0, "-", "metrics"], [14, 0, 0, "-", "model"], [17, 0, 0, "-", "model_selection"], [18, 0, 0, "-", "monitoring"], [19, 0, 0, "-", "pipeline"], [20, 0, 0, "-", "postprocessing"], [21, 0, 0, "-", "preprocessing"], [22, 0, 0, "-", "tasks"], [24, 0, 0, "-", "validation"]], "openstef.data_classes": [[11, 0, 0, "-", "data_prep"], [11, 0, 0, "-", "model_specifications"], [11, 0, 0, "-", "prediction_job"], [11, 0, 0, "-", "split_function"]], "openstef.data_classes.data_prep": [[11, 1, 1, "", "DataPrepDataClass"]], "openstef.data_classes.data_prep.DataPrepDataClass": [[11, 2, 1, "", "arguments"], [11, 2, 1, "", "klass"], [11, 3, 1, "", "load"]], "openstef.data_classes.model_specifications": [[11, 1, 1, "", "ModelSpecificationDataClass"]], "openstef.data_classes.model_specifications.ModelSpecificationDataClass": [[11, 2, 1, "", "feature_modules"], [11, 2, 1, "", "feature_names"], [11, 2, 1, "", "hyper_params"], [11, 2, 1, "", "id"]], "openstef.data_classes.prediction_job": [[11, 1, 1, "", "PredictionJobDataClass"]], "openstef.data_classes.prediction_job.PredictionJobDataClass": [[11, 1, 1, "", "Config"], [11, 2, 1, "", "alternative_forecast_model_pid"], [11, 2, 1, "", "backtest_split_func"], [11, 2, 1, "", "completeness_treshold"], [11, 2, 1, "", "data_prep_class"], [11, 2, 1, "", "default_modelspecs"], [11, 2, 1, "", "depends_on"], [11, 2, 1, "", "description"], [11, 2, 1, "", "flatliner_treshold"], [11, 2, 1, "", "forecast_type"], [11, 3, 1, "", "get"], [11, 2, 1, "", "horizon_minutes"], [11, 2, 1, "", "hub_height"], [11, 2, 1, "", "id"], [11, 2, 1, "", "lat"], [11, 2, 1, "", "lon"], [11, 2, 1, "", "minimal_table_length"], [11, 2, 1, "", "model"], [11, 2, 1, "", "n_turbines"], [11, 2, 1, "", "name"], [11, 2, 1, "", "pipelines_to_run"], [11, 2, 1, "", "quantiles"], [11, 2, 1, "", "resolution_minutes"], [11, 2, 1, "", "save_train_forecasts"], [11, 2, 1, "", "sid"], [11, 2, 1, "", "train_components"], [11, 2, 1, "", "train_horizons_minutes"], [11, 2, 1, "", "train_split_func"], [11, 2, 1, "", "turbine_type"]], "openstef.data_classes.prediction_job.PredictionJobDataClass.Config": [[11, 2, 1, "", "smart_union"]], "openstef.data_classes.split_function": [[11, 1, 1, "", "SplitFuncDataClass"]], "openstef.data_classes.split_function.SplitFuncDataClass": [[11, 2, 1, "", "arguments"], [11, 2, 1, "", "function"], [11, 3, 1, "", "load"]], "openstef.enums": [[10, 1, 1, "", "ForecastType"], [10, 1, 1, "", "MLModelType"], [10, 1, 1, "", "PipelineType"], [10, 1, 1, "", "TracyJobResult"]], "openstef.enums.ForecastType": [[10, 2, 1, "", "BASECASE"], [10, 2, 1, "", "DEMAND"], [10, 2, 1, "", "SOLAR"], [10, 2, 1, "", "WIND"]], "openstef.enums.MLModelType": [[10, 2, 1, "", "ARIMA"], [10, 2, 1, "", "LGB"], [10, 2, 1, "", "LINEAR"], [10, 2, 1, "", "ProLoaf"], [10, 2, 1, "", "XGB"], [10, 2, 1, "", "XGB_QUANTILE"]], "openstef.enums.PipelineType": [[10, 2, 1, "", "FORECAST"], [10, 2, 1, "", "HYPER_PARMATERS"], [10, 2, 1, "", "TRAIN"]], "openstef.enums.TracyJobResult": [[10, 2, 1, "", "FAILED"], [10, 2, 1, "", "SUCCESS"], [10, 2, 1, "", "UNKNOWN"]], "openstef.exceptions": [[10, 4, 1, "", "ComponentForecastTooShortHorizonError"], [10, 4, 1, "", "InputDataInsufficientError"], [10, 4, 1, "", "InputDataInvalidError"], [10, 4, 1, "", "InputDataWrongColumnOrderError"], [10, 4, 1, "", "ModelWithoutStDev"], [10, 4, 1, "", "NoPredictedLoadError"], [10, 4, 1, "", "NoRealisedLoadError"], [10, 4, 1, "", "OldModelHigherScoreError"], [10, 4, 1, "", "PredictionJobException"], [10, 4, 1, "", "SkipSaveTrainingForecasts"]], "openstef.feature_engineering": [[12, 0, 0, "-", "apply_features"], [12, 0, 0, "-", "data_preparation"], [12, 0, 0, "-", "feature_adder"], [12, 0, 0, "-", "feature_applicator"], [12, 0, 0, "-", "general"], [12, 0, 0, "-", "historic_features"], [12, 0, 0, "-", "holiday_features"], [12, 0, 0, "-", "lag_features"], [12, 0, 0, "-", "weather_features"]], "openstef.feature_engineering.apply_features": [[12, 5, 1, "", "apply_features"]], "openstef.feature_engineering.data_preparation": [[12, 1, 1, "", "ARDataPreparation"], [12, 1, 1, "", "AbstractDataPreparation"], [12, 1, 1, "", "LegacyDataPreparation"]], "openstef.feature_engineering.data_preparation.ARDataPreparation": [[12, 3, 1, "", "prepare_forecast_data"], [12, 3, 1, "", "prepare_train_data"]], "openstef.feature_engineering.data_preparation.AbstractDataPreparation": [[12, 3, 1, "", "check_model"], [12, 3, 1, "", "prepare_forecast_data"], [12, 3, 1, "", "prepare_train_data"]], "openstef.feature_engineering.data_preparation.LegacyDataPreparation": [[12, 3, 1, "", "prepare_forecast_data"], [12, 3, 1, "", "prepare_train_data"]], "openstef.feature_engineering.feature_adder": [[12, 1, 1, "", "FeatureAdder"], [12, 1, 1, "", "FeatureDispatcher"], [12, 1, 1, "", "ParsedFeature"], [12, 5, 1, "", "adders_from_module"], [12, 5, 1, "", "adders_from_modules"]], "openstef.feature_engineering.feature_adder.FeatureAdder": [[12, 3, 1, "", "apply_features"], [12, 6, 1, "", "name"], [12, 3, 1, "", "parse_feature_name"], [12, 3, 1, "", "required_features"]], "openstef.feature_engineering.feature_adder.FeatureDispatcher": [[12, 3, 1, "", "apply_features"], [12, 3, 1, "", "dispatch_features"]], "openstef.feature_engineering.feature_adder.ParsedFeature": [[12, 2, 1, "", "name"], [12, 2, 1, "", "params"]], "openstef.feature_engineering.feature_applicator": [[12, 1, 1, "", "AbstractFeatureApplicator"], [12, 1, 1, "", "OperationalPredictFeatureApplicator"], [12, 1, 1, "", "TrainFeatureApplicator"]], "openstef.feature_engineering.feature_applicator.AbstractFeatureApplicator": [[12, 3, 1, "", "add_features"]], "openstef.feature_engineering.feature_applicator.OperationalPredictFeatureApplicator": [[12, 3, 1, "", "add_features"]], "openstef.feature_engineering.feature_applicator.TrainFeatureApplicator": [[12, 3, 1, "", "add_features"]], "openstef.feature_engineering.general": [[12, 5, 1, "", "add_missing_feature_columns"], [12, 5, 1, "", "enforce_feature_order"], [12, 5, 1, "", "remove_non_requested_feature_columns"]], "openstef.feature_engineering.historic_features": [[12, 5, 1, "", "add_historic_load_as_a_feature"]], "openstef.feature_engineering.holiday_features": [[12, 5, 1, "", "check_for_bridge_day"], [12, 5, 1, "", "generate_holiday_feature_functions"]], "openstef.feature_engineering.lag_features": [[12, 5, 1, "", "extract_lag_features"], [12, 5, 1, "", "generate_lag_feature_functions"], [12, 5, 1, "", "generate_non_trivial_lag_times"], [12, 5, 1, "", "generate_trivial_lag_features"]], "openstef.feature_engineering.weather_features": [[12, 5, 1, "", "add_additional_solar_features"], [12, 5, 1, "", "add_additional_wind_features"], [12, 5, 1, "", "add_humidity_features"], [12, 5, 1, "", "calc_air_density"], [12, 5, 1, "", "calc_dewpoint"], [12, 5, 1, "", "calc_saturation_pressure"], [12, 5, 1, "", "calc_vapour_pressure"], [12, 5, 1, "", "calculate_dni"], [12, 5, 1, "", "calculate_gti"], [12, 5, 1, "", "calculate_windspeed_at_hubheight"], [12, 5, 1, "", "calculate_windturbine_power_output"], [12, 5, 1, "", "humidity_calculations"]], "openstef.metrics": [[13, 0, 0, "-", "figure"], [13, 0, 0, "-", "metrics"], [13, 0, 0, "-", "reporter"]], "openstef.metrics.figure": [[13, 5, 1, "", "convert_to_base64_data_uri"], [13, 5, 1, "", "plot_data_series"], [13, 5, 1, "", "plot_feature_importance"]], "openstef.metrics.metrics": [[13, 5, 1, "", "bias"], [13, 5, 1, "", "frac_in_stdev"], [13, 5, 1, "", "franks_skill_score"], [13, 5, 1, "", "franks_skill_score_peaks"], [13, 5, 1, "", "get_eval_metric_function"], [13, 5, 1, "", "mae"], [13, 5, 1, "", "nsme"], [13, 5, 1, "", "r_mae"], [13, 5, 1, "", "r_mae_highest"], [13, 5, 1, "", "r_mae_lowest"], [13, 5, 1, "", "r_mne_highest"], [13, 5, 1, "", "r_mpe_highest"], [13, 5, 1, "", "rmse"], [13, 5, 1, "", "skill_score"], [13, 5, 1, "", "skill_score_positive_peaks"], [13, 5, 1, "", "xgb_quantile_eval"], [13, 5, 1, "", "xgb_quantile_obj"]], "openstef.metrics.reporter": [[13, 1, 1, "", "Report"], [13, 1, 1, "", "Reporter"]], "openstef.metrics.reporter.Reporter": [[13, 3, 1, "", "generate_report"], [13, 3, 1, "", "get_fiabilities"], [13, 3, 1, "", "get_metrics"], [13, 3, 1, "", "write_report_to_disk"]], "openstef.model": [[14, 0, 0, "-", "basecase"], [14, 0, 0, "-", "confidence_interval_applicator"], [14, 0, 0, "-", "fallback"], [15, 0, 0, "-", "metamodels"], [14, 0, 0, "-", "model_creator"], [14, 0, 0, "-", "objective"], [14, 0, 0, "-", "objective_creator"], [16, 0, 0, "-", "regressors"], [14, 0, 0, "-", "serializer"], [14, 0, 0, "-", "standard_deviation_generator"]], "openstef.model.basecase": [[14, 1, 1, "", "BaseCaseModel"]], "openstef.model.basecase.BaseCaseModel": [[14, 6, 1, "", "can_predict_quantiles"], [14, 3, 1, "", "fit"], [14, 3, 1, "", "make_basecase_forecast"], [14, 3, 1, "", "predict"], [14, 3, 1, "", "set_predict_request"], [14, 3, 1, "", "set_score_request"]], "openstef.model.confidence_interval_applicator": [[14, 1, 1, "", "ConfidenceIntervalApplicator"]], "openstef.model.confidence_interval_applicator.ConfidenceIntervalApplicator": [[14, 3, 1, "", "add_confidence_interval"]], "openstef.model.fallback": [[14, 5, 1, "", "generate_fallback"]], "openstef.model.metamodels": [[15, 0, 0, "-", "grouped_regressor"], [15, 0, 0, "-", "missing_values_handler"]], "openstef.model.metamodels.grouped_regressor": [[15, 1, 1, "", "GroupedRegressor"]], "openstef.model.metamodels.grouped_regressor.GroupedRegressor": [[15, 2, 1, "", "estimators_"], [15, 2, 1, "", "feature_names_"], [15, 3, 1, "", "fit"], [15, 3, 1, "", "grouped_compute"], [15, 3, 1, "", "predict"], [15, 3, 1, "", "set_fit_request"], [15, 3, 1, "", "set_predict_request"], [15, 3, 1, "", "set_score_request"]], "openstef.model.metamodels.missing_values_handler": [[15, 1, 1, "", "MissingValuesHandler"]], "openstef.model.metamodels.missing_values_handler.MissingValuesHandler": [[15, 2, 1, "", "feature_importances_"], [15, 2, 1, "", "feature_names"], [15, 3, 1, "", "fit"], [15, 2, 1, "", "imputer_"], [15, 2, 1, "", "n_features_in_"], [15, 2, 1, "", "non_null_columns_"], [15, 2, 1, "", "pipeline_"], [15, 3, 1, "", "predict"], [15, 2, 1, "", "regressor_"], [15, 3, 1, "", "set_fit_request"], [15, 3, 1, "", "set_predict_request"], [15, 3, 1, "", "set_score_request"]], "openstef.model.model_creator": [[14, 1, 1, "", "ModelCreator"]], "openstef.model.model_creator.ModelCreator": [[14, 2, 1, "", "MODEL_CONSTRUCTORS"], [14, 3, 1, "", "create_model"]], "openstef.model.objective": [[14, 1, 1, "", "ARIMARegressorObjective"], [14, 1, 1, "", "LGBRegressorObjective"], [14, 1, 1, "", "LinearRegressorObjective"], [14, 1, 1, "", "ProLoafRegressorObjective"], [14, 1, 1, "", "RegressorObjective"], [14, 1, 1, "", "XGBQuantileRegressorObjective"], [14, 1, 1, "", "XGBRegressorObjective"]], "openstef.model.objective.ARIMARegressorObjective": [[14, 3, 1, "", "get_params"]], "openstef.model.objective.LGBRegressorObjective": [[14, 3, 1, "", "get_params"], [14, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective.LinearRegressorObjective": [[14, 3, 1, "", "get_params"]], "openstef.model.objective.ProLoafRegressorObjective": [[14, 3, 1, "", "get_params"], [14, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective.RegressorObjective": [[14, 3, 1, "", "create_report"], [14, 3, 1, "", "get_default_values"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "get_pruning_callback"], [14, 3, 1, "", "get_trial_track"]], "openstef.model.objective.XGBQuantileRegressorObjective": [[14, 3, 1, "", "get_params"], [14, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective.XGBRegressorObjective": [[14, 3, 1, "", "get_default_values"], [14, 3, 1, "", "get_params"], [14, 3, 1, "", "get_pruning_callback"]], "openstef.model.objective_creator": [[14, 1, 1, "", "ObjectiveCreator"]], "openstef.model.objective_creator.ObjectiveCreator": [[14, 2, 1, "", "OBJECTIVES"], [14, 3, 1, "", "create_objective"]], "openstef.model.regressors": [[16, 0, 0, "-", "arima"], [16, 0, 0, "-", "custom_regressor"], [16, 0, 0, "-", "dazls"], [16, 0, 0, "-", "lgbm"], [16, 0, 0, "-", "linear"], [16, 0, 0, "-", "regressor"], [16, 0, 0, "-", "xgb"], [16, 0, 0, "-", "xgb_quantile"]], "openstef.model.regressors.arima": [[16, 1, 1, "", "ARIMAOpenstfRegressor"]], "openstef.model.regressors.arima.ARIMAOpenstfRegressor": [[16, 6, 1, "", "can_predict_quantiles"], [16, 6, 1, "", "feature_names"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "predict_quantile"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_feature_importance"], [16, 3, 1, "", "set_fit_request"], [16, 3, 1, "", "set_predict_request"], [16, 3, 1, "", "set_score_request"], [16, 3, 1, "", "update_historic_data"]], "openstef.model.regressors.custom_regressor": [[16, 1, 1, "", "CustomOpenstfRegressor"], [16, 5, 1, "", "create_custom_objective"], [16, 5, 1, "", "is_custom_type"], [16, 5, 1, "", "load_custom_model"]], "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor": [[16, 3, 1, "", "objective"], [16, 3, 1, "", "set_fit_request"], [16, 3, 1, "", "set_predict_request"], [16, 3, 1, "", "valid_kwargs"]], "openstef.model.regressors.dazls": [[16, 1, 1, "", "Dazls"]], "openstef.model.regressors.dazls.Dazls": [[16, 3, 1, "", "fit"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_fit_request"], [16, 3, 1, "", "set_predict_request"], [16, 3, 1, "", "set_score_request"]], "openstef.model.regressors.lgbm": [[16, 1, 1, "", "LGBMOpenstfRegressor"]], "openstef.model.regressors.lgbm.LGBMOpenstfRegressor": [[16, 6, 1, "", "can_predict_quantiles"], [16, 6, 1, "", "feature_names"], [16, 2, 1, "", "gain_importance_name"], [16, 3, 1, "", "set_fit_request"], [16, 3, 1, "", "set_predict_request"], [16, 3, 1, "", "set_score_request"], [16, 2, 1, "", "weight_importance_name"]], "openstef.model.regressors.linear": [[16, 1, 1, "", "LinearOpenstfRegressor"], [16, 1, 1, "", "LinearRegressor"]], "openstef.model.regressors.linear.LinearOpenstfRegressor": [[16, 6, 1, "", "can_predict_quantiles"], [16, 6, 1, "", "feature_names"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "set_fit_request"], [16, 3, 1, "", "set_predict_request"]], "openstef.model.regressors.linear.LinearRegressor": [[16, 3, 1, "", "set_fit_request"], [16, 3, 1, "", "set_predict_request"], [16, 3, 1, "", "set_score_request"]], "openstef.model.regressors.regressor": [[16, 1, 1, "", "OpenstfRegressor"]], "openstef.model.regressors.regressor.OpenstfRegressor": [[16, 6, 1, "", "can_predict_quantiles"], [16, 6, 1, "", "feature_names"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "score"], [16, 3, 1, "", "set_feature_importance"], [16, 3, 1, "", "set_fit_request"], [16, 3, 1, "", "set_predict_request"]], "openstef.model.regressors.xgb": [[16, 1, 1, "", "XGBOpenstfRegressor"]], "openstef.model.regressors.xgb.XGBOpenstfRegressor": [[16, 6, 1, "", "can_predict_quantiles"], [16, 6, 1, "", "feature_names"], [16, 2, 1, "", "gain_importance_name"], [16, 3, 1, "", "set_fit_request"], [16, 3, 1, "", "set_predict_request"], [16, 2, 1, "", "weight_importance_name"]], "openstef.model.regressors.xgb_quantile": [[16, 1, 1, "", "XGBQuantileOpenstfRegressor"]], "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor": [[16, 6, 1, "", "can_predict_quantiles"], [16, 6, 1, "", "feature_names"], [16, 3, 1, "", "fit"], [16, 3, 1, "", "get_feature_importances_from_booster"], [16, 3, 1, "", "predict"], [16, 3, 1, "", "set_fit_request"], [16, 3, 1, "", "set_predict_request"]], "openstef.model.serializer": [[14, 1, 1, "", "MLflowSerializer"]], "openstef.model.serializer.MLflowSerializer": [[14, 3, 1, "", "get_model_age"], [14, 3, 1, "", "load_model"], [14, 3, 1, "", "remove_old_models"], [14, 3, 1, "", "save_model"]], "openstef.model.standard_deviation_generator": [[14, 1, 1, "", "StandardDeviationGenerator"]], "openstef.model.standard_deviation_generator.StandardDeviationGenerator": [[14, 3, 1, "", "generate_standard_deviation_data"]], "openstef.model_selection": [[17, 0, 0, "-", "model_selection"]], "openstef.model_selection.model_selection": [[17, 5, 1, "", "backtest_split_default"], [17, 5, 1, "", "group_kfold"], [17, 5, 1, "", "random_sample"], [17, 5, 1, "", "sample_indices_train_val"], [17, 5, 1, "", "split_data_train_validation_test"]], "openstef.monitoring": [[18, 0, 0, "-", "performance_meter"], [18, 0, 0, "-", "teams"]], "openstef.monitoring.performance_meter": [[18, 1, 1, "", "PerformanceMeter"]], "openstef.monitoring.performance_meter.PerformanceMeter": [[18, 3, 1, "", "checkpoint"], [18, 3, 1, "", "complete_level"], [18, 3, 1, "", "start_level"]], "openstef.monitoring.teams": [[18, 5, 1, "", "build_sql_query_string"], [18, 5, 1, "", "format_message"], [18, 5, 1, "", "get_card_section"], [18, 5, 1, "", "post_teams"]], "openstef.pipeline": [[19, 0, 0, "-", "create_basecase_forecast"], [19, 0, 0, "-", "create_component_forecast"], [19, 0, 0, "-", "create_forecast"], [19, 0, 0, "-", "optimize_hyperparameters"], [19, 0, 0, "-", "train_create_forecast_backtest"], [19, 0, 0, "-", "train_model"], [19, 0, 0, "-", "utils"]], "openstef.pipeline.create_basecase_forecast": [[19, 5, 1, "", "create_basecase_forecast_pipeline"], [19, 5, 1, "", "generate_basecase_confidence_interval"]], "openstef.pipeline.create_component_forecast": [[19, 5, 1, "", "create_components_forecast_pipeline"], [19, 5, 1, "", "create_input"]], "openstef.pipeline.create_forecast": [[19, 5, 1, "", "create_forecast_pipeline"], [19, 5, 1, "", "create_forecast_pipeline_core"]], "openstef.pipeline.optimize_hyperparameters": [[19, 5, 1, "", "optimize_hyperparameters_pipeline"], [19, 5, 1, "", "optimize_hyperparameters_pipeline_core"], [19, 5, 1, "", "optuna_optimization"]], "openstef.pipeline.train_create_forecast_backtest": [[19, 5, 1, "", "train_model_and_forecast_back_test"], [19, 5, 1, "", "train_model_and_forecast_test_core"]], "openstef.pipeline.train_model": [[19, 5, 1, "", "train_model_pipeline"], [19, 5, 1, "", "train_model_pipeline_core"], [19, 5, 1, "", "train_pipeline_common"], [19, 5, 1, "", "train_pipeline_step_compute_features"], [19, 5, 1, "", "train_pipeline_step_load_model"], [19, 5, 1, "", "train_pipeline_step_split_data"], [19, 5, 1, "", "train_pipeline_step_train_model"]], "openstef.pipeline.utils": [[19, 5, 1, "", "generate_forecast_datetime_range"]], "openstef.postprocessing": [[20, 0, 0, "-", "postprocessing"]], "openstef.postprocessing.postprocessing": [[20, 5, 1, "", "add_components_base_case_forecast"], [20, 5, 1, "", "add_prediction_job_properties_to_forecast"], [20, 5, 1, "", "calculate_wind_power"], [20, 5, 1, "", "normalize_and_convert_weather_data_for_splitting"], [20, 5, 1, "", "post_process_wind_solar"], [20, 5, 1, "", "split_forecast_in_components"]], "openstef.preprocessing": [[21, 0, 0, "-", "preprocessing"]], "openstef.preprocessing.preprocessing": [[21, 5, 1, "", "replace_repeated_values_with_nan"]], "openstef.tasks": [[22, 0, 0, "-", "calculate_kpi"], [22, 0, 0, "-", "create_basecase_forecast"], [22, 0, 0, "-", "create_components_forecast"], [22, 0, 0, "-", "create_forecast"], [22, 0, 0, "-", "create_solar_forecast"], [22, 0, 0, "-", "create_wind_forecast"], [22, 0, 0, "-", "optimize_hyperparameters"], [22, 0, 0, "-", "run_tracy"], [22, 0, 0, "-", "split_forecast"], [22, 0, 0, "-", "train_model"], [23, 0, 0, "-", "utils"]], "openstef.tasks.calculate_kpi": [[22, 5, 1, "", "calc_kpi_for_specific_pid"], [22, 5, 1, "", "check_kpi_task"], [22, 5, 1, "", "main"], [22, 5, 1, "", "set_incomplete_kpi_to_nan"]], "openstef.tasks.create_basecase_forecast": [[22, 5, 1, "", "create_basecase_forecast_task"], [22, 5, 1, "", "main"]], "openstef.tasks.create_components_forecast": [[22, 5, 1, "", "create_components_forecast_task"], [22, 5, 1, "", "main"]], "openstef.tasks.create_forecast": [[22, 5, 1, "", "create_forecast_task"], [22, 5, 1, "", "main"]], "openstef.tasks.create_solar_forecast": [[22, 5, 1, "", "apply_fit_insol"], [22, 5, 1, "", "apply_persistence"], [22, 5, 1, "", "calc_norm"], [22, 5, 1, "", "combine_forecasts"], [22, 5, 1, "", "fides"], [22, 5, 1, "", "main"], [22, 5, 1, "", "make_solar_prediction_pj"]], "openstef.tasks.create_wind_forecast": [[22, 5, 1, "", "main"], [22, 5, 1, "", "make_wind_forecast_pj"]], "openstef.tasks.optimize_hyperparameters": [[22, 5, 1, "", "main"], [22, 5, 1, "", "optimize_hyperparameters_task"]], "openstef.tasks.run_tracy": [[22, 5, 1, "", "main"], [22, 5, 1, "", "run_tracy"], [22, 5, 1, "", "run_tracy_job"]], "openstef.tasks.split_forecast": [[22, 5, 1, "", "convert_coefdict_to_coefsdf"], [22, 5, 1, "", "determine_invalid_coefs"], [22, 5, 1, "", "find_components"], [22, 5, 1, "", "main"], [22, 5, 1, "", "split_forecast_task"]], "openstef.tasks.train_model": [[22, 5, 1, "", "main"], [22, 5, 1, "", "train_model_task"]], "openstef.tasks.utils": [[23, 0, 0, "-", "dependencies"], [23, 0, 0, "-", "predictionjobloop"], [23, 0, 0, "-", "taskcontext"]], "openstef.tasks.utils.dependencies": [[23, 5, 1, "", "build_graph_structure"], [23, 5, 1, "", "build_nx_graph"], [23, 5, 1, "", "find_groups"], [23, 5, 1, "", "has_dependencies"]], "openstef.tasks.utils.predictionjobloop": [[23, 1, 1, "", "PredictionJobLoop"]], "openstef.tasks.utils.predictionjobloop.PredictionJobLoop": [[23, 3, 1, "", "map"]], "openstef.tasks.utils.taskcontext": [[23, 1, 1, "", "TaskContext"]], "openstef.validation": [[24, 0, 0, "-", "validation"]], "openstef.validation.validation": [[24, 5, 1, "", "calc_completeness_dataframe"], [24, 5, 1, "", "calc_completeness_features"], [24, 5, 1, "", "check_data_for_each_trafo"], [24, 5, 1, "", "drop_target_na"], [24, 5, 1, "", "find_nonzero_flatliner"], [24, 5, 1, "", "find_zero_flatliner"], [24, 5, 1, "", "is_data_sufficient"], [24, 5, 1, "", "validate"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:function", "6": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"]}, "titleterms": {"about": 0, "openstef": [0, 3, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "featur": 0, "api": 1, "refer": 1, "commun": 2, "technic": 2, "steer": 2, "committe": 2, "roadmap": 2, "contribut": [2, 6], "support": 2, "concept": 3, "softwar": 3, "architectur": 3, "high": [3, 8, 27], "level": [3, 8, 27], "methodologi": [3, 8], "applic": [3, 27], "domain": [3, 5], "adapt": [3, 5], "zero": [3, 5], "shot": [3, 5], "learn": [3, 5], "sequenc": [3, 5], "dazl": [3, 5, 16], "overview": [3, 7, 26], "relat": [3, 26], "databas": [3, 7, 26], "custom": [3, 26], "customersapikei": [3, 26], "genericpowercurv": [3, 26], "nametolatlon": [3, 26], "predict": [3, 26], "predictions_quantiles_set": [3, 26], "predictions_system": [3, 26], "quantiles_set": [3, 26], "solarspec": [3, 26], "system": [3, 26], "systemsapikei": [3, 26], "todolist": [3, 26], "weatherforecastloc": [3, 26], "windspec": [3, 26], "timeseri": [3, 7], "schema": [3, 7], "welcom": 6, "document": 6, "more": 6, "licens": 6, "packag": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "subpackag": [10, 14, 22], "submodul": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "enum": 10, "modul": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "except": 10, "content": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "data_class": 11, "data_prep": 11, "model_specif": 11, "prediction_job": 11, "split_funct": 11, "feature_engin": 12, "apply_featur": 12, "data_prepar": 12, "feature_add": 12, "feature_appl": 12, "gener": 12, "historic_featur": 12, "holiday_featur": 12, "lag_featur": 12, "weather_featur": 12, "metric": 13, "figur": 13, "report": 13, "model": [14, 15, 16, 25], "basecas": 14, "confidence_interval_appl": 14, "fallback": 14, "model_cr": 14, "object": 14, "objective_cr": 14, "serial": 14, "standard_deviation_gener": 14, "metamodel": 15, "grouped_regressor": 15, "missing_values_handl": 15, "regressor": 16, "arima": 16, "custom_regressor": 16, "lgbm": 16, "linear": 16, "proloaf": 16, "xgb": 16, "xgb_quantil": 16, "model_select": 17, "monitor": 18, "performance_met": 18, "team": 18, "pipelin": [19, 25, 27], "create_basecase_forecast": [19, 22], "create_component_forecast": 19, "create_forecast": [19, 22], "optimize_hyperparamet": [19, 22], "train_create_forecast_backtest": 19, "train_model": [19, 22], "util": [19, 23], "postprocess": 20, "preprocess": 21, "task": [22, 23, 25], "calculate_kpi": 22, "create_components_forecast": 22, "create_solar_forecast": 22, "create_wind_forecast": 22, "run_traci": 22, "split_forecast": 22, "depend": 23, "predictionjobloop": 23, "taskcontext": 23, "valid": 24, "user": [25, 27], "guid": [25, 27], "implement": 25, "train": 25, "creat": 25, "forecast": [25, 27], "optim": 25, "hyperparamet": 25, "compon": 25, "base": 25, "case": 25, "function": 27, "deploi": 27, "full": 27, "exampl": 27, "jupyt": 27, "notebook": 27}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"About OpenSTEF": [[0, "about-openstef"]], "Features:": [[0, "features"]], "API reference": [[1, "api-reference"]], "Community": [[2, "community"]], "Technical Steering Committee": [[2, "technical-steering-committee"]], "Roadmap": [[2, "roadmap"]], "Contributing": [[2, "contributing"], [6, "contributing"]], "Support": [[2, "support"]], "Concepts": [[3, "concepts"]], "Software architecture": [[3, "software-architecture"]], "High level methodology OpenSTEF": [[3, "high-level-methodology-openstef"], [8, "high-level-methodology-openstef"]], "Application architecture": [[3, "application-architecture"]], "Domain Adaptation for Zero Shot Learning in Sequence (DAZLS)": [[3, "domain-adaptation-for-zero-shot-learning-in-sequence-dazls"], [5, "domain-adaptation-for-zero-shot-learning-in-sequence-dazls"]], "Overview of relational database": [[3, "overview-of-relational-database"], [26, "overview-of-relational-database"]], "customers": [[3, "customers"], [26, "customers"]], "customersApiKeys": [[3, "customersapikeys"], [26, "customersapikeys"]], "genericpowercurves": [[3, "genericpowercurves"], [26, "genericpowercurves"]], "NameToLatLon": [[3, "nametolatlon"], [26, "nametolatlon"]], "predictions": [[3, "predictions"], [26, "predictions"]], "predictions_quantiles_sets": [[3, "predictions-quantiles-sets"], [26, "predictions-quantiles-sets"]], "predictions_systems": [[3, "predictions-systems"], [26, "predictions-systems"]], "quantiles_sets": [[3, "quantiles-sets"], [26, "quantiles-sets"]], "solarspecs": [[3, "solarspecs"], [26, "solarspecs"]], "systems": [[3, "systems"], [26, "systems"]], "systemsApiKeys": [[3, "systemsapikeys"], [26, "systemsapikeys"]], "todolist": [[3, "todolist"], [26, "todolist"]], "weatherforecastlocations": [[3, "weatherforecastlocations"], [26, "weatherforecastlocations"]], "windspecs": [[3, "windspecs"], [26, "windspecs"]], "Overview of timeseries database schema": [[3, "overview-of-timeseries-database-schema"], [7, "overview-of-timeseries-database-schema"]], "Welcome to the OpenSTEF documentation!": [[6, "welcome-to-the-openstef-documentation"]], "More on OpenSTEF": [[6, "more-on-openstef"]], "License": [[6, "license"]], "openstef": [[9, "openstef"]], "openstef package": [[10, "openstef-package"]], "Subpackages": [[10, "subpackages"], [14, "subpackages"], [22, "subpackages"]], "Submodules": [[10, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [22, "submodules"], [23, "submodules"], [24, "submodules"]], "openstef.enums module": [[10, "openstef-enums-module"]], "openstef.exceptions module": [[10, "openstef-exceptions-module"]], "Module contents": [[10, "module-contents"], [11, "module-contents"], [12, "module-contents"], [13, "module-contents"], [14, "module-contents"], [15, "module-contents"], [16, "module-contents"], [17, "module-contents"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-contents"], [22, "module-contents"], [23, "module-contents"], [24, "module-contents"]], "openstef.data_classes package": [[11, "openstef-data-classes-package"]], "openstef.data_classes.data_prep module": [[11, "openstef-data-classes-data-prep-module"]], "openstef.data_classes.model_specifications module": [[11, "openstef-data-classes-model-specifications-module"]], "openstef.data_classes.prediction_job module": [[11, "openstef-data-classes-prediction-job-module"]], "openstef.data_classes.split_function module": [[11, "openstef-data-classes-split-function-module"]], "openstef.feature_engineering package": [[12, "openstef-feature-engineering-package"]], "openstef.feature_engineering.apply_features module": [[12, "openstef-feature-engineering-apply-features-module"]], "openstef.feature_engineering.data_preparation module": [[12, "openstef-feature-engineering-data-preparation-module"]], "openstef.feature_engineering.feature_adder module": [[12, "openstef-feature-engineering-feature-adder-module"]], "openstef.feature_engineering.feature_applicator module": [[12, "openstef-feature-engineering-feature-applicator-module"]], "openstef.feature_engineering.general module": [[12, "openstef-feature-engineering-general-module"]], "openstef.feature_engineering.historic_features module": [[12, "openstef-feature-engineering-historic-features-module"]], "openstef.feature_engineering.holiday_features module": [[12, "openstef-feature-engineering-holiday-features-module"]], "openstef.feature_engineering.lag_features module": [[12, "openstef-feature-engineering-lag-features-module"]], "openstef.feature_engineering.weather_features module": [[12, "openstef-feature-engineering-weather-features-module"]], "openstef.metrics package": [[13, "openstef-metrics-package"]], "openstef.metrics.figure module": [[13, "openstef-metrics-figure-module"]], "openstef.metrics.metrics module": [[13, "openstef-metrics-metrics-module"]], "openstef.metrics.reporter module": [[13, "openstef-metrics-reporter-module"]], "openstef.model package": [[14, "openstef-model-package"]], "openstef.model.basecase module": [[14, "openstef-model-basecase-module"]], "openstef.model.confidence_interval_applicator module": [[14, "openstef-model-confidence-interval-applicator-module"]], "openstef.model.fallback module": [[14, "openstef-model-fallback-module"]], "openstef.model.model_creator module": [[14, "openstef-model-model-creator-module"]], "openstef.model.objective module": [[14, "openstef-model-objective-module"]], "openstef.model.objective_creator module": [[14, "openstef-model-objective-creator-module"]], "openstef.model.serializer module": [[14, "openstef-model-serializer-module"]], "openstef.model.standard_deviation_generator module": [[14, "openstef-model-standard-deviation-generator-module"]], "openstef.model.metamodels package": [[15, "openstef-model-metamodels-package"]], "openstef.model.metamodels.grouped_regressor module": [[15, "openstef-model-metamodels-grouped-regressor-module"]], "openstef.model.metamodels.missing_values_handler module": [[15, "openstef-model-metamodels-missing-values-handler-module"]], "openstef.model.regressors package": [[16, "openstef-model-regressors-package"]], "openstef.model.regressors.arima module": [[16, "openstef-model-regressors-arima-module"]], "openstef.model.regressors.custom_regressor module": [[16, "openstef-model-regressors-custom-regressor-module"]], "openstef.model.regressors.dazls module": [[16, "openstef-model-regressors-dazls-module"]], "openstef.model.regressors.lgbm module": [[16, "openstef-model-regressors-lgbm-module"]], "openstef.model.regressors.linear module": [[16, "openstef-model-regressors-linear-module"]], "openstef.model.regressors.proloaf module": [[16, "openstef-model-regressors-proloaf-module"]], "openstef.model.regressors.regressor module": [[16, "openstef-model-regressors-regressor-module"]], "openstef.model.regressors.xgb module": [[16, "openstef-model-regressors-xgb-module"]], "openstef.model.regressors.xgb_quantile module": [[16, "openstef-model-regressors-xgb-quantile-module"]], "openstef.model_selection package": [[17, "openstef-model-selection-package"]], "openstef.model_selection.model_selection module": [[17, "openstef-model-selection-model-selection-module"]], "openstef.monitoring package": [[18, "openstef-monitoring-package"]], "openstef.monitoring.performance_meter module": [[18, "openstef-monitoring-performance-meter-module"]], "openstef.monitoring.teams module": [[18, "openstef-monitoring-teams-module"]], "openstef.pipeline package": [[19, "openstef-pipeline-package"]], "openstef.pipeline.create_basecase_forecast module": [[19, "openstef-pipeline-create-basecase-forecast-module"]], "openstef.pipeline.create_component_forecast module": [[19, "openstef-pipeline-create-component-forecast-module"]], "openstef.pipeline.create_forecast module": [[19, "openstef-pipeline-create-forecast-module"]], "openstef.pipeline.optimize_hyperparameters module": [[19, "openstef-pipeline-optimize-hyperparameters-module"]], "openstef.pipeline.train_create_forecast_backtest module": [[19, "openstef-pipeline-train-create-forecast-backtest-module"]], "openstef.pipeline.train_model module": [[19, "openstef-pipeline-train-model-module"]], "openstef.pipeline.utils module": [[19, "openstef-pipeline-utils-module"]], "openstef.postprocessing package": [[20, "openstef-postprocessing-package"]], "openstef.postprocessing.postprocessing module": [[20, "openstef-postprocessing-postprocessing-module"]], "openstef.preprocessing package": [[21, "openstef-preprocessing-package"]], "openstef.preprocessing.preprocessing module": [[21, "openstef-preprocessing-preprocessing-module"]], "openstef.tasks package": [[22, "openstef-tasks-package"]], "openstef.tasks.calculate_kpi module": [[22, "openstef-tasks-calculate-kpi-module"]], "openstef.tasks.create_basecase_forecast module": [[22, "openstef-tasks-create-basecase-forecast-module"]], "openstef.tasks.create_components_forecast module": [[22, "openstef-tasks-create-components-forecast-module"]], "openstef.tasks.create_forecast module": [[22, "openstef-tasks-create-forecast-module"]], "openstef.tasks.create_solar_forecast module": [[22, "openstef-tasks-create-solar-forecast-module"]], "openstef.tasks.create_wind_forecast module": [[22, "openstef-tasks-create-wind-forecast-module"]], "openstef.tasks.optimize_hyperparameters module": [[22, "openstef-tasks-optimize-hyperparameters-module"]], "openstef.tasks.run_tracy module": [[22, "openstef-tasks-run-tracy-module"]], "openstef.tasks.split_forecast module": [[22, "openstef-tasks-split-forecast-module"]], "openstef.tasks.train_model module": [[22, "openstef-tasks-train-model-module"]], "openstef.tasks.utils package": [[23, "openstef-tasks-utils-package"]], "openstef.tasks.utils.dependencies module": [[23, "openstef-tasks-utils-dependencies-module"]], "openstef.tasks.utils.predictionjobloop module": [[23, "openstef-tasks-utils-predictionjobloop-module"]], "openstef.tasks.utils.taskcontext module": [[23, "openstef-tasks-utils-taskcontext-module"]], "openstef.validation package": [[24, "openstef-validation-package"]], "openstef.validation.validation module": [[24, "openstef-validation-validation-module"]], "Pipelines user guide": [[25, "pipelines-user-guide"]], "Task implementation": [[25, "task-implementation"]], "Train model task implementation": [[25, "train-model-task-implementation"]], "Create forecast task implementation": [[25, "create-forecast-task-implementation"]], "Optimize hyperparameters task implementation": [[25, "optimize-hyperparameters-task-implementation"]], "Create components forecast task implementation": [[25, "create-components-forecast-task-implementation"]], "Create base case forecast task implementation": [[25, "create-base-case-forecast-task-implementation"]], "Pipeline implementation": [[25, "pipeline-implementation"]], "User guides": [[27, "user-guides"]], "Pipelines - high level functionality": [[27, "pipelines-high-level-functionality"]], "Deploy as a full Forecasting application": [[27, "deploy-as-a-full-forecasting-application"]], "Example Jupyter notebooks": [[27, "example-jupyter-notebooks"]]}, "indexentries": {"arima (openstef.enums.mlmodeltype attribute)": [[10, "openstef.enums.MLModelType.ARIMA"]], "basecase (openstef.enums.forecasttype attribute)": [[10, "openstef.enums.ForecastType.BASECASE"]], "componentforecasttooshorthorizonerror": [[10, "openstef.exceptions.ComponentForecastTooShortHorizonError"]], "demand (openstef.enums.forecasttype attribute)": [[10, "openstef.enums.ForecastType.DEMAND"]], "failed (openstef.enums.tracyjobresult attribute)": [[10, "openstef.enums.TracyJobResult.FAILED"]], "forecast (openstef.enums.pipelinetype attribute)": [[10, "openstef.enums.PipelineType.FORECAST"]], "forecasttype (class in openstef.enums)": [[10, "openstef.enums.ForecastType"]], "hyper_parmaters (openstef.enums.pipelinetype attribute)": [[10, "openstef.enums.PipelineType.HYPER_PARMATERS"]], "inputdatainsufficienterror": [[10, "openstef.exceptions.InputDataInsufficientError"]], "inputdatainvaliderror": [[10, "openstef.exceptions.InputDataInvalidError"]], "inputdatawrongcolumnordererror": [[10, "openstef.exceptions.InputDataWrongColumnOrderError"]], "lgb (openstef.enums.mlmodeltype attribute)": [[10, "openstef.enums.MLModelType.LGB"]], "linear (openstef.enums.mlmodeltype attribute)": [[10, "openstef.enums.MLModelType.LINEAR"]], "mlmodeltype (class in openstef.enums)": [[10, "openstef.enums.MLModelType"]], "modelwithoutstdev": [[10, "openstef.exceptions.ModelWithoutStDev"]], "nopredictedloaderror": [[10, "openstef.exceptions.NoPredictedLoadError"]], "norealisedloaderror": [[10, "openstef.exceptions.NoRealisedLoadError"]], "oldmodelhigherscoreerror": [[10, "openstef.exceptions.OldModelHigherScoreError"]], "pipelinetype (class in openstef.enums)": [[10, "openstef.enums.PipelineType"]], "predictionjobexception": [[10, "openstef.exceptions.PredictionJobException"]], "proloaf (openstef.enums.mlmodeltype attribute)": [[10, "openstef.enums.MLModelType.ProLoaf"]], "solar (openstef.enums.forecasttype attribute)": [[10, "openstef.enums.ForecastType.SOLAR"]], "success (openstef.enums.tracyjobresult attribute)": [[10, "openstef.enums.TracyJobResult.SUCCESS"]], "skipsavetrainingforecasts": [[10, "openstef.exceptions.SkipSaveTrainingForecasts"]], "train (openstef.enums.pipelinetype attribute)": [[10, "openstef.enums.PipelineType.TRAIN"]], "tracyjobresult (class in openstef.enums)": [[10, "openstef.enums.TracyJobResult"]], "unknown (openstef.enums.tracyjobresult attribute)": [[10, "openstef.enums.TracyJobResult.UNKNOWN"]], "wind (openstef.enums.forecasttype attribute)": [[10, "openstef.enums.ForecastType.WIND"]], "xgb (openstef.enums.mlmodeltype attribute)": [[10, "openstef.enums.MLModelType.XGB"]], "xgb_quantile (openstef.enums.mlmodeltype attribute)": [[10, "openstef.enums.MLModelType.XGB_QUANTILE"]], "module": [[10, "module-openstef"], [10, "module-openstef.enums"], [10, "module-openstef.exceptions"], [11, "module-openstef.data_classes"], [11, "module-openstef.data_classes.data_prep"], [11, "module-openstef.data_classes.model_specifications"], [11, "module-openstef.data_classes.prediction_job"], [11, "module-openstef.data_classes.split_function"], [12, "module-openstef.feature_engineering"], [12, "module-openstef.feature_engineering.apply_features"], [12, "module-openstef.feature_engineering.data_preparation"], [12, "module-openstef.feature_engineering.feature_adder"], [12, "module-openstef.feature_engineering.feature_applicator"], [12, "module-openstef.feature_engineering.general"], [12, "module-openstef.feature_engineering.historic_features"], [12, "module-openstef.feature_engineering.holiday_features"], [12, "module-openstef.feature_engineering.lag_features"], [12, "module-openstef.feature_engineering.weather_features"], [13, "module-openstef.metrics"], [13, "module-openstef.metrics.figure"], [13, "module-openstef.metrics.metrics"], [13, "module-openstef.metrics.reporter"], [14, "module-openstef.model"], [14, "module-openstef.model.basecase"], [14, "module-openstef.model.confidence_interval_applicator"], [14, "module-openstef.model.fallback"], [14, "module-openstef.model.model_creator"], [14, "module-openstef.model.objective"], [14, "module-openstef.model.objective_creator"], [14, "module-openstef.model.serializer"], [14, "module-openstef.model.standard_deviation_generator"], [15, "module-openstef.model.metamodels"], [15, "module-openstef.model.metamodels.grouped_regressor"], [15, "module-openstef.model.metamodels.missing_values_handler"], [16, "module-openstef.model.regressors"], [16, "module-openstef.model.regressors.arima"], [16, "module-openstef.model.regressors.custom_regressor"], [16, "module-openstef.model.regressors.dazls"], [16, "module-openstef.model.regressors.lgbm"], [16, "module-openstef.model.regressors.linear"], [16, "module-openstef.model.regressors.regressor"], [16, "module-openstef.model.regressors.xgb"], [16, "module-openstef.model.regressors.xgb_quantile"], [17, "module-openstef.model_selection"], [17, "module-openstef.model_selection.model_selection"], [18, "module-openstef.monitoring"], [18, "module-openstef.monitoring.performance_meter"], [18, "module-openstef.monitoring.teams"], [19, "module-openstef.pipeline"], [19, "module-openstef.pipeline.create_basecase_forecast"], [19, "module-openstef.pipeline.create_component_forecast"], [19, "module-openstef.pipeline.create_forecast"], [19, "module-openstef.pipeline.optimize_hyperparameters"], [19, "module-openstef.pipeline.train_create_forecast_backtest"], [19, "module-openstef.pipeline.train_model"], [19, "module-openstef.pipeline.utils"], [20, "module-openstef.postprocessing"], [20, "module-openstef.postprocessing.postprocessing"], [21, "module-openstef.preprocessing"], [21, "module-openstef.preprocessing.preprocessing"], [22, "module-openstef.tasks"], [22, "module-openstef.tasks.calculate_kpi"], [22, "module-openstef.tasks.create_basecase_forecast"], [22, "module-openstef.tasks.create_components_forecast"], [22, "module-openstef.tasks.create_forecast"], [22, "module-openstef.tasks.create_solar_forecast"], [22, "module-openstef.tasks.create_wind_forecast"], [22, "module-openstef.tasks.optimize_hyperparameters"], [22, "module-openstef.tasks.run_tracy"], [22, "module-openstef.tasks.split_forecast"], [22, "module-openstef.tasks.train_model"], [23, "module-openstef.tasks.utils"], [23, "module-openstef.tasks.utils.dependencies"], [23, "module-openstef.tasks.utils.predictionjobloop"], [23, "module-openstef.tasks.utils.taskcontext"], [24, "module-openstef.validation"], [24, "module-openstef.validation.validation"]], "openstef": [[10, "module-openstef"]], "openstef.enums": [[10, "module-openstef.enums"]], "openstef.exceptions": [[10, "module-openstef.exceptions"]], "dataprepdataclass (class in openstef.data_classes.data_prep)": [[11, "openstef.data_classes.data_prep.DataPrepDataClass"]], "modelspecificationdataclass (class in openstef.data_classes.model_specifications)": [[11, "openstef.data_classes.model_specifications.ModelSpecificationDataClass"]], "predictionjobdataclass (class in openstef.data_classes.prediction_job)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass"]], "predictionjobdataclass.config (class in openstef.data_classes.prediction_job)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.Config"]], "splitfuncdataclass (class in openstef.data_classes.split_function)": [[11, "openstef.data_classes.split_function.SplitFuncDataClass"]], "alternative_forecast_model_pid (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.alternative_forecast_model_pid"]], "arguments (openstef.data_classes.data_prep.dataprepdataclass attribute)": [[11, "openstef.data_classes.data_prep.DataPrepDataClass.arguments"]], "arguments (openstef.data_classes.split_function.splitfuncdataclass attribute)": [[11, "openstef.data_classes.split_function.SplitFuncDataClass.arguments"]], "backtest_split_func (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.backtest_split_func"]], "completeness_treshold (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.completeness_treshold"]], "data_prep_class (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.data_prep_class"]], "default_modelspecs (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.default_modelspecs"]], "depends_on (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.depends_on"]], "description (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.description"]], "feature_modules (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[11, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.feature_modules"]], "feature_names (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[11, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.feature_names"]], "flatliner_treshold (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.flatliner_treshold"]], "forecast_type (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.forecast_type"]], "function (openstef.data_classes.split_function.splitfuncdataclass attribute)": [[11, "openstef.data_classes.split_function.SplitFuncDataClass.function"]], "get() (openstef.data_classes.prediction_job.predictionjobdataclass method)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.get"]], "horizon_minutes (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.horizon_minutes"]], "hub_height (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.hub_height"]], "hyper_params (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[11, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.hyper_params"]], "id (openstef.data_classes.model_specifications.modelspecificationdataclass attribute)": [[11, "openstef.data_classes.model_specifications.ModelSpecificationDataClass.id"]], "id (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.id"]], "klass (openstef.data_classes.data_prep.dataprepdataclass attribute)": [[11, "openstef.data_classes.data_prep.DataPrepDataClass.klass"]], "lat (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.lat"]], "load() (openstef.data_classes.data_prep.dataprepdataclass method)": [[11, "openstef.data_classes.data_prep.DataPrepDataClass.load"]], "load() (openstef.data_classes.split_function.splitfuncdataclass method)": [[11, "openstef.data_classes.split_function.SplitFuncDataClass.load"]], "lon (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.lon"]], "minimal_table_length (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.minimal_table_length"]], "model (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.model"]], "n_turbines (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.n_turbines"]], "name (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.name"]], "openstef.data_classes": [[11, "module-openstef.data_classes"]], "openstef.data_classes.data_prep": [[11, "module-openstef.data_classes.data_prep"]], "openstef.data_classes.model_specifications": [[11, "module-openstef.data_classes.model_specifications"]], "openstef.data_classes.prediction_job": [[11, "module-openstef.data_classes.prediction_job"]], "openstef.data_classes.split_function": [[11, "module-openstef.data_classes.split_function"]], "pipelines_to_run (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.pipelines_to_run"]], "quantiles (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.quantiles"]], "resolution_minutes (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.resolution_minutes"]], "save_train_forecasts (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.save_train_forecasts"]], "sid (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.sid"]], "smart_union (openstef.data_classes.prediction_job.predictionjobdataclass.config attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.Config.smart_union"]], "train_components (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.train_components"]], "train_horizons_minutes (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.train_horizons_minutes"]], "train_split_func (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.train_split_func"]], "turbine_type (openstef.data_classes.prediction_job.predictionjobdataclass attribute)": [[11, "openstef.data_classes.prediction_job.PredictionJobDataClass.turbine_type"]], "ardatapreparation (class in openstef.feature_engineering.data_preparation)": [[12, "openstef.feature_engineering.data_preparation.ARDataPreparation"]], "abstractdatapreparation (class in openstef.feature_engineering.data_preparation)": [[12, "openstef.feature_engineering.data_preparation.AbstractDataPreparation"]], "abstractfeatureapplicator (class in openstef.feature_engineering.feature_applicator)": [[12, "openstef.feature_engineering.feature_applicator.AbstractFeatureApplicator"]], "featureadder (class in openstef.feature_engineering.feature_adder)": [[12, "openstef.feature_engineering.feature_adder.FeatureAdder"]], "featuredispatcher (class in openstef.feature_engineering.feature_adder)": [[12, "openstef.feature_engineering.feature_adder.FeatureDispatcher"]], "legacydatapreparation (class in openstef.feature_engineering.data_preparation)": [[12, "openstef.feature_engineering.data_preparation.LegacyDataPreparation"]], "operationalpredictfeatureapplicator (class in openstef.feature_engineering.feature_applicator)": [[12, "openstef.feature_engineering.feature_applicator.OperationalPredictFeatureApplicator"]], "parsedfeature (class in openstef.feature_engineering.feature_adder)": [[12, "openstef.feature_engineering.feature_adder.ParsedFeature"]], "trainfeatureapplicator (class in openstef.feature_engineering.feature_applicator)": [[12, "openstef.feature_engineering.feature_applicator.TrainFeatureApplicator"]], "add_additional_solar_features() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.add_additional_solar_features"]], "add_additional_wind_features() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.add_additional_wind_features"]], "add_features() (openstef.feature_engineering.feature_applicator.abstractfeatureapplicator method)": [[12, "openstef.feature_engineering.feature_applicator.AbstractFeatureApplicator.add_features"]], "add_features() (openstef.feature_engineering.feature_applicator.operationalpredictfeatureapplicator method)": [[12, "openstef.feature_engineering.feature_applicator.OperationalPredictFeatureApplicator.add_features"]], "add_features() (openstef.feature_engineering.feature_applicator.trainfeatureapplicator method)": [[12, "openstef.feature_engineering.feature_applicator.TrainFeatureApplicator.add_features"]], "add_historic_load_as_a_feature() (in module openstef.feature_engineering.historic_features)": [[12, "openstef.feature_engineering.historic_features.add_historic_load_as_a_feature"]], "add_humidity_features() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.add_humidity_features"]], "add_missing_feature_columns() (in module openstef.feature_engineering.general)": [[12, "openstef.feature_engineering.general.add_missing_feature_columns"]], "adders_from_module() (in module openstef.feature_engineering.feature_adder)": [[12, "openstef.feature_engineering.feature_adder.adders_from_module"]], "adders_from_modules() (in module openstef.feature_engineering.feature_adder)": [[12, "openstef.feature_engineering.feature_adder.adders_from_modules"]], "apply_features() (in module openstef.feature_engineering.apply_features)": [[12, "openstef.feature_engineering.apply_features.apply_features"]], "apply_features() (openstef.feature_engineering.feature_adder.featureadder method)": [[12, "openstef.feature_engineering.feature_adder.FeatureAdder.apply_features"]], "apply_features() (openstef.feature_engineering.feature_adder.featuredispatcher method)": [[12, "openstef.feature_engineering.feature_adder.FeatureDispatcher.apply_features"]], "calc_air_density() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.calc_air_density"]], "calc_dewpoint() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.calc_dewpoint"]], "calc_saturation_pressure() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.calc_saturation_pressure"]], "calc_vapour_pressure() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.calc_vapour_pressure"]], "calculate_dni() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.calculate_dni"]], "calculate_gti() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.calculate_gti"]], "calculate_windspeed_at_hubheight() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.calculate_windspeed_at_hubheight"]], "calculate_windturbine_power_output() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.calculate_windturbine_power_output"]], "check_for_bridge_day() (in module openstef.feature_engineering.holiday_features)": [[12, "openstef.feature_engineering.holiday_features.check_for_bridge_day"]], "check_model() (openstef.feature_engineering.data_preparation.abstractdatapreparation method)": [[12, "openstef.feature_engineering.data_preparation.AbstractDataPreparation.check_model"]], "dispatch_features() (openstef.feature_engineering.feature_adder.featuredispatcher method)": [[12, "openstef.feature_engineering.feature_adder.FeatureDispatcher.dispatch_features"]], "enforce_feature_order() (in module openstef.feature_engineering.general)": [[12, "openstef.feature_engineering.general.enforce_feature_order"]], "extract_lag_features() (in module openstef.feature_engineering.lag_features)": [[12, "openstef.feature_engineering.lag_features.extract_lag_features"]], "generate_holiday_feature_functions() (in module openstef.feature_engineering.holiday_features)": [[12, "openstef.feature_engineering.holiday_features.generate_holiday_feature_functions"]], "generate_lag_feature_functions() (in module openstef.feature_engineering.lag_features)": [[12, "openstef.feature_engineering.lag_features.generate_lag_feature_functions"]], "generate_non_trivial_lag_times() (in module openstef.feature_engineering.lag_features)": [[12, "openstef.feature_engineering.lag_features.generate_non_trivial_lag_times"]], "generate_trivial_lag_features() (in module openstef.feature_engineering.lag_features)": [[12, "openstef.feature_engineering.lag_features.generate_trivial_lag_features"]], "humidity_calculations() (in module openstef.feature_engineering.weather_features)": [[12, "openstef.feature_engineering.weather_features.humidity_calculations"]], "name (openstef.feature_engineering.feature_adder.featureadder property)": [[12, "openstef.feature_engineering.feature_adder.FeatureAdder.name"]], "name (openstef.feature_engineering.feature_adder.parsedfeature attribute)": [[12, "openstef.feature_engineering.feature_adder.ParsedFeature.name"]], "openstef.feature_engineering": [[12, "module-openstef.feature_engineering"]], "openstef.feature_engineering.apply_features": [[12, "module-openstef.feature_engineering.apply_features"]], "openstef.feature_engineering.data_preparation": [[12, "module-openstef.feature_engineering.data_preparation"]], "openstef.feature_engineering.feature_adder": [[12, "module-openstef.feature_engineering.feature_adder"]], "openstef.feature_engineering.feature_applicator": [[12, "module-openstef.feature_engineering.feature_applicator"]], "openstef.feature_engineering.general": [[12, "module-openstef.feature_engineering.general"]], "openstef.feature_engineering.historic_features": [[12, "module-openstef.feature_engineering.historic_features"]], "openstef.feature_engineering.holiday_features": [[12, "module-openstef.feature_engineering.holiday_features"]], "openstef.feature_engineering.lag_features": [[12, "module-openstef.feature_engineering.lag_features"]], "openstef.feature_engineering.weather_features": [[12, "module-openstef.feature_engineering.weather_features"]], "params (openstef.feature_engineering.feature_adder.parsedfeature attribute)": [[12, "openstef.feature_engineering.feature_adder.ParsedFeature.params"]], "parse_feature_name() (openstef.feature_engineering.feature_adder.featureadder method)": [[12, "openstef.feature_engineering.feature_adder.FeatureAdder.parse_feature_name"]], "prepare_forecast_data() (openstef.feature_engineering.data_preparation.ardatapreparation method)": [[12, "openstef.feature_engineering.data_preparation.ARDataPreparation.prepare_forecast_data"]], "prepare_forecast_data() (openstef.feature_engineering.data_preparation.abstractdatapreparation method)": [[12, "openstef.feature_engineering.data_preparation.AbstractDataPreparation.prepare_forecast_data"]], "prepare_forecast_data() (openstef.feature_engineering.data_preparation.legacydatapreparation method)": [[12, "openstef.feature_engineering.data_preparation.LegacyDataPreparation.prepare_forecast_data"]], "prepare_train_data() (openstef.feature_engineering.data_preparation.ardatapreparation method)": [[12, "openstef.feature_engineering.data_preparation.ARDataPreparation.prepare_train_data"]], "prepare_train_data() (openstef.feature_engineering.data_preparation.abstractdatapreparation method)": [[12, "openstef.feature_engineering.data_preparation.AbstractDataPreparation.prepare_train_data"]], "prepare_train_data() (openstef.feature_engineering.data_preparation.legacydatapreparation method)": [[12, "openstef.feature_engineering.data_preparation.LegacyDataPreparation.prepare_train_data"]], "remove_non_requested_feature_columns() (in module openstef.feature_engineering.general)": [[12, "openstef.feature_engineering.general.remove_non_requested_feature_columns"]], "required_features() (openstef.feature_engineering.feature_adder.featureadder method)": [[12, "openstef.feature_engineering.feature_adder.FeatureAdder.required_features"]], "report (class in openstef.metrics.reporter)": [[13, "openstef.metrics.reporter.Report"]], "reporter (class in openstef.metrics.reporter)": [[13, "openstef.metrics.reporter.Reporter"]], "bias() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.bias"]], "convert_to_base64_data_uri() (in module openstef.metrics.figure)": [[13, "openstef.metrics.figure.convert_to_base64_data_uri"]], "frac_in_stdev() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.frac_in_stdev"]], "franks_skill_score() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.franks_skill_score"]], "franks_skill_score_peaks() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.franks_skill_score_peaks"]], "generate_report() (openstef.metrics.reporter.reporter method)": [[13, "openstef.metrics.reporter.Reporter.generate_report"]], "get_eval_metric_function() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.get_eval_metric_function"]], "get_fiabilities() (openstef.metrics.reporter.reporter static method)": [[13, "openstef.metrics.reporter.Reporter.get_fiabilities"]], "get_metrics() (openstef.metrics.reporter.reporter static method)": [[13, "openstef.metrics.reporter.Reporter.get_metrics"]], "mae() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.mae"]], "nsme() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.nsme"]], "openstef.metrics": [[13, "module-openstef.metrics"]], "openstef.metrics.figure": [[13, "module-openstef.metrics.figure"]], "openstef.metrics.metrics": [[13, "module-openstef.metrics.metrics"]], "openstef.metrics.reporter": [[13, "module-openstef.metrics.reporter"]], "plot_data_series() (in module openstef.metrics.figure)": [[13, "openstef.metrics.figure.plot_data_series"]], "plot_feature_importance() (in module openstef.metrics.figure)": [[13, "openstef.metrics.figure.plot_feature_importance"]], "r_mae() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.r_mae"]], "r_mae_highest() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.r_mae_highest"]], "r_mae_lowest() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.r_mae_lowest"]], "r_mne_highest() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.r_mne_highest"]], "r_mpe_highest() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.r_mpe_highest"]], "rmse() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.rmse"]], "skill_score() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.skill_score"]], "skill_score_positive_peaks() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.skill_score_positive_peaks"]], "write_report_to_disk() (openstef.metrics.reporter.reporter static method)": [[13, "openstef.metrics.reporter.Reporter.write_report_to_disk"]], "xgb_quantile_eval() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.xgb_quantile_eval"]], "xgb_quantile_obj() (in module openstef.metrics.metrics)": [[13, "openstef.metrics.metrics.xgb_quantile_obj"]], "arimaregressorobjective (class in openstef.model.objective)": [[14, "openstef.model.objective.ARIMARegressorObjective"]], "basecasemodel (class in openstef.model.basecase)": [[14, "openstef.model.basecase.BaseCaseModel"]], "confidenceintervalapplicator (class in openstef.model.confidence_interval_applicator)": [[14, "openstef.model.confidence_interval_applicator.ConfidenceIntervalApplicator"]], "lgbregressorobjective (class in openstef.model.objective)": [[14, "openstef.model.objective.LGBRegressorObjective"]], "linearregressorobjective (class in openstef.model.objective)": [[14, "openstef.model.objective.LinearRegressorObjective"]], "mlflowserializer (class in openstef.model.serializer)": [[14, "openstef.model.serializer.MLflowSerializer"]], "model_constructors (openstef.model.model_creator.modelcreator attribute)": [[14, "openstef.model.model_creator.ModelCreator.MODEL_CONSTRUCTORS"]], "modelcreator (class in openstef.model.model_creator)": [[14, "openstef.model.model_creator.ModelCreator"]], "objectives (openstef.model.objective_creator.objectivecreator attribute)": [[14, "openstef.model.objective_creator.ObjectiveCreator.OBJECTIVES"]], "objectivecreator (class in openstef.model.objective_creator)": [[14, "openstef.model.objective_creator.ObjectiveCreator"]], "proloafregressorobjective (class in openstef.model.objective)": [[14, "openstef.model.objective.ProLoafRegressorObjective"]], "regressorobjective (class in openstef.model.objective)": [[14, "openstef.model.objective.RegressorObjective"]], "standarddeviationgenerator (class in openstef.model.standard_deviation_generator)": [[14, "openstef.model.standard_deviation_generator.StandardDeviationGenerator"]], "xgbquantileregressorobjective (class in openstef.model.objective)": [[14, "openstef.model.objective.XGBQuantileRegressorObjective"]], "xgbregressorobjective (class in openstef.model.objective)": [[14, "openstef.model.objective.XGBRegressorObjective"]], "add_confidence_interval() (openstef.model.confidence_interval_applicator.confidenceintervalapplicator method)": [[14, "openstef.model.confidence_interval_applicator.ConfidenceIntervalApplicator.add_confidence_interval"]], "can_predict_quantiles (openstef.model.basecase.basecasemodel property)": [[14, "openstef.model.basecase.BaseCaseModel.can_predict_quantiles"]], "create_model() (openstef.model.model_creator.modelcreator static method)": [[14, "openstef.model.model_creator.ModelCreator.create_model"]], "create_objective() (openstef.model.objective_creator.objectivecreator static method)": [[14, "openstef.model.objective_creator.ObjectiveCreator.create_objective"]], "create_report() (openstef.model.objective.regressorobjective method)": [[14, "openstef.model.objective.RegressorObjective.create_report"]], "fit() (openstef.model.basecase.basecasemodel method)": [[14, "openstef.model.basecase.BaseCaseModel.fit"]], "generate_fallback() (in module openstef.model.fallback)": [[14, "openstef.model.fallback.generate_fallback"]], "generate_standard_deviation_data() (openstef.model.standard_deviation_generator.standarddeviationgenerator method)": [[14, "openstef.model.standard_deviation_generator.StandardDeviationGenerator.generate_standard_deviation_data"]], "get_default_values() (openstef.model.objective.regressorobjective class method)": [[14, "openstef.model.objective.RegressorObjective.get_default_values"]], "get_default_values() (openstef.model.objective.xgbregressorobjective class method)": [[14, "openstef.model.objective.XGBRegressorObjective.get_default_values"]], "get_model_age() (openstef.model.serializer.mlflowserializer method)": [[14, "openstef.model.serializer.MLflowSerializer.get_model_age"]], "get_params() (openstef.model.objective.arimaregressorobjective method)": [[14, "openstef.model.objective.ARIMARegressorObjective.get_params"]], "get_params() (openstef.model.objective.lgbregressorobjective method)": [[14, "openstef.model.objective.LGBRegressorObjective.get_params"]], "get_params() (openstef.model.objective.linearregressorobjective method)": [[14, "openstef.model.objective.LinearRegressorObjective.get_params"]], "get_params() (openstef.model.objective.proloafregressorobjective method)": [[14, "openstef.model.objective.ProLoafRegressorObjective.get_params"]], "get_params() (openstef.model.objective.regressorobjective method)": [[14, "openstef.model.objective.RegressorObjective.get_params"]], "get_params() (openstef.model.objective.xgbquantileregressorobjective method)": [[14, "openstef.model.objective.XGBQuantileRegressorObjective.get_params"]], "get_params() (openstef.model.objective.xgbregressorobjective method)": [[14, "openstef.model.objective.XGBRegressorObjective.get_params"]], "get_pruning_callback() (openstef.model.objective.lgbregressorobjective method)": [[14, "openstef.model.objective.LGBRegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.proloafregressorobjective method)": [[14, "openstef.model.objective.ProLoafRegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.regressorobjective method)": [[14, "openstef.model.objective.RegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.xgbquantileregressorobjective method)": [[14, "openstef.model.objective.XGBQuantileRegressorObjective.get_pruning_callback"]], "get_pruning_callback() (openstef.model.objective.xgbregressorobjective method)": [[14, "openstef.model.objective.XGBRegressorObjective.get_pruning_callback"]], "get_trial_track() (openstef.model.objective.regressorobjective method)": [[14, "openstef.model.objective.RegressorObjective.get_trial_track"]], "load_model() (openstef.model.serializer.mlflowserializer method)": [[14, "openstef.model.serializer.MLflowSerializer.load_model"]], "make_basecase_forecast() (openstef.model.basecase.basecasemodel static method)": [[14, "openstef.model.basecase.BaseCaseModel.make_basecase_forecast"]], "openstef.model": [[14, "module-openstef.model"]], "openstef.model.basecase": [[14, "module-openstef.model.basecase"]], "openstef.model.confidence_interval_applicator": [[14, "module-openstef.model.confidence_interval_applicator"]], "openstef.model.fallback": [[14, "module-openstef.model.fallback"]], "openstef.model.model_creator": [[14, "module-openstef.model.model_creator"]], "openstef.model.objective": [[14, "module-openstef.model.objective"]], "openstef.model.objective_creator": [[14, "module-openstef.model.objective_creator"]], "openstef.model.serializer": [[14, "module-openstef.model.serializer"]], "openstef.model.standard_deviation_generator": [[14, "module-openstef.model.standard_deviation_generator"]], "predict() (openstef.model.basecase.basecasemodel method)": [[14, "openstef.model.basecase.BaseCaseModel.predict"]], "remove_old_models() (openstef.model.serializer.mlflowserializer method)": [[14, "openstef.model.serializer.MLflowSerializer.remove_old_models"]], "save_model() (openstef.model.serializer.mlflowserializer method)": [[14, "openstef.model.serializer.MLflowSerializer.save_model"]], "set_predict_request() (openstef.model.basecase.basecasemodel method)": [[14, "openstef.model.basecase.BaseCaseModel.set_predict_request"]], "set_score_request() (openstef.model.basecase.basecasemodel method)": [[14, "openstef.model.basecase.BaseCaseModel.set_score_request"]], "groupedregressor (class in openstef.model.metamodels.grouped_regressor)": [[15, "openstef.model.metamodels.grouped_regressor.GroupedRegressor"]], "missingvalueshandler (class in openstef.model.metamodels.missing_values_handler)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler"]], "estimators_ (openstef.model.metamodels.grouped_regressor.groupedregressor attribute)": [[15, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.estimators_"]], "feature_importances_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.feature_importances_"]], "feature_names (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.feature_names"]], "feature_names_ (openstef.model.metamodels.grouped_regressor.groupedregressor attribute)": [[15, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.feature_names_"]], "fit() (openstef.model.metamodels.grouped_regressor.groupedregressor method)": [[15, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.fit"]], "fit() (openstef.model.metamodels.missing_values_handler.missingvalueshandler method)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.fit"]], "grouped_compute() (openstef.model.metamodels.grouped_regressor.groupedregressor class method)": [[15, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.grouped_compute"]], "imputer_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.imputer_"]], "n_features_in_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.n_features_in_"]], "non_null_columns_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.non_null_columns_"]], "openstef.model.metamodels": [[15, "module-openstef.model.metamodels"]], "openstef.model.metamodels.grouped_regressor": [[15, "module-openstef.model.metamodels.grouped_regressor"]], "openstef.model.metamodels.missing_values_handler": [[15, "module-openstef.model.metamodels.missing_values_handler"]], "pipeline_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.pipeline_"]], "predict() (openstef.model.metamodels.grouped_regressor.groupedregressor method)": [[15, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.predict"]], "predict() (openstef.model.metamodels.missing_values_handler.missingvalueshandler method)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.predict"]], "regressor_ (openstef.model.metamodels.missing_values_handler.missingvalueshandler attribute)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.regressor_"]], "set_fit_request() (openstef.model.metamodels.grouped_regressor.groupedregressor method)": [[15, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.set_fit_request"]], "set_fit_request() (openstef.model.metamodels.missing_values_handler.missingvalueshandler method)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.set_fit_request"]], "set_predict_request() (openstef.model.metamodels.grouped_regressor.groupedregressor method)": [[15, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.set_predict_request"]], "set_predict_request() (openstef.model.metamodels.missing_values_handler.missingvalueshandler method)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.set_predict_request"]], "set_score_request() (openstef.model.metamodels.grouped_regressor.groupedregressor method)": [[15, "openstef.model.metamodels.grouped_regressor.GroupedRegressor.set_score_request"]], "set_score_request() (openstef.model.metamodels.missing_values_handler.missingvalueshandler method)": [[15, "openstef.model.metamodels.missing_values_handler.MissingValuesHandler.set_score_request"]], "arimaopenstfregressor (class in openstef.model.regressors.arima)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor"]], "customopenstfregressor (class in openstef.model.regressors.custom_regressor)": [[16, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor"]], "dazls (class in openstef.model.regressors.dazls)": [[16, "openstef.model.regressors.dazls.Dazls"]], "lgbmopenstfregressor (class in openstef.model.regressors.lgbm)": [[16, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor"]], "linearopenstfregressor (class in openstef.model.regressors.linear)": [[16, "openstef.model.regressors.linear.LinearOpenstfRegressor"]], "linearregressor (class in openstef.model.regressors.linear)": [[16, "openstef.model.regressors.linear.LinearRegressor"]], "openstfregressor (class in openstef.model.regressors.regressor)": [[16, "openstef.model.regressors.regressor.OpenstfRegressor"]], "xgbopenstfregressor (class in openstef.model.regressors.xgb)": [[16, "openstef.model.regressors.xgb.XGBOpenstfRegressor"]], "xgbquantileopenstfregressor (class in openstef.model.regressors.xgb_quantile)": [[16, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor"]], "can_predict_quantiles (openstef.model.regressors.arima.arimaopenstfregressor property)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.lgbm.lgbmopenstfregressor property)": [[16, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.linear.linearopenstfregressor property)": [[16, "openstef.model.regressors.linear.LinearOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.regressor.openstfregressor property)": [[16, "openstef.model.regressors.regressor.OpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.xgb.xgbopenstfregressor property)": [[16, "openstef.model.regressors.xgb.XGBOpenstfRegressor.can_predict_quantiles"]], "can_predict_quantiles (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor property)": [[16, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.can_predict_quantiles"]], "create_custom_objective() (in module openstef.model.regressors.custom_regressor)": [[16, "openstef.model.regressors.custom_regressor.create_custom_objective"]], "feature_names (openstef.model.regressors.arima.arimaopenstfregressor property)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.lgbm.lgbmopenstfregressor property)": [[16, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.linear.linearopenstfregressor property)": [[16, "openstef.model.regressors.linear.LinearOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.regressor.openstfregressor property)": [[16, "openstef.model.regressors.regressor.OpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.xgb.xgbopenstfregressor property)": [[16, "openstef.model.regressors.xgb.XGBOpenstfRegressor.feature_names"]], "feature_names (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor property)": [[16, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.feature_names"]], "fit() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.fit"]], "fit() (openstef.model.regressors.dazls.dazls method)": [[16, "openstef.model.regressors.dazls.Dazls.fit"]], "fit() (openstef.model.regressors.linear.linearopenstfregressor method)": [[16, "openstef.model.regressors.linear.LinearOpenstfRegressor.fit"]], "fit() (openstef.model.regressors.regressor.openstfregressor method)": [[16, "openstef.model.regressors.regressor.OpenstfRegressor.fit"]], "fit() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor method)": [[16, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.fit"]], "gain_importance_name (openstef.model.regressors.lgbm.lgbmopenstfregressor attribute)": [[16, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.gain_importance_name"]], "gain_importance_name (openstef.model.regressors.xgb.xgbopenstfregressor attribute)": [[16, "openstef.model.regressors.xgb.XGBOpenstfRegressor.gain_importance_name"]], "get_feature_importances_from_booster() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor class method)": [[16, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.get_feature_importances_from_booster"]], "is_custom_type() (in module openstef.model.regressors.custom_regressor)": [[16, "openstef.model.regressors.custom_regressor.is_custom_type"]], "load_custom_model() (in module openstef.model.regressors.custom_regressor)": [[16, "openstef.model.regressors.custom_regressor.load_custom_model"]], "objective() (openstef.model.regressors.custom_regressor.customopenstfregressor class method)": [[16, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor.objective"]], "openstef.model.regressors": [[16, "module-openstef.model.regressors"]], "openstef.model.regressors.arima": [[16, "module-openstef.model.regressors.arima"]], "openstef.model.regressors.custom_regressor": [[16, "module-openstef.model.regressors.custom_regressor"]], "openstef.model.regressors.dazls": [[16, "module-openstef.model.regressors.dazls"]], "openstef.model.regressors.lgbm": [[16, "module-openstef.model.regressors.lgbm"]], "openstef.model.regressors.linear": [[16, "module-openstef.model.regressors.linear"]], "openstef.model.regressors.regressor": [[16, "module-openstef.model.regressors.regressor"]], "openstef.model.regressors.xgb": [[16, "module-openstef.model.regressors.xgb"]], "openstef.model.regressors.xgb_quantile": [[16, "module-openstef.model.regressors.xgb_quantile"]], "predict() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.predict"]], "predict() (openstef.model.regressors.dazls.dazls method)": [[16, "openstef.model.regressors.dazls.Dazls.predict"]], "predict() (openstef.model.regressors.regressor.openstfregressor method)": [[16, "openstef.model.regressors.regressor.OpenstfRegressor.predict"]], "predict() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor method)": [[16, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.predict"]], "predict_quantile() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.predict_quantile"]], "score() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.score"]], "score() (openstef.model.regressors.dazls.dazls method)": [[16, "openstef.model.regressors.dazls.Dazls.score"]], "score() (openstef.model.regressors.regressor.openstfregressor method)": [[16, "openstef.model.regressors.regressor.OpenstfRegressor.score"]], "set_feature_importance() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.set_feature_importance"]], "set_feature_importance() (openstef.model.regressors.regressor.openstfregressor method)": [[16, "openstef.model.regressors.regressor.OpenstfRegressor.set_feature_importance"]], "set_fit_request() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.set_fit_request"]], "set_fit_request() (openstef.model.regressors.custom_regressor.customopenstfregressor method)": [[16, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor.set_fit_request"]], "set_fit_request() (openstef.model.regressors.dazls.dazls method)": [[16, "openstef.model.regressors.dazls.Dazls.set_fit_request"]], "set_fit_request() (openstef.model.regressors.lgbm.lgbmopenstfregressor method)": [[16, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.set_fit_request"]], "set_fit_request() (openstef.model.regressors.linear.linearopenstfregressor method)": [[16, "openstef.model.regressors.linear.LinearOpenstfRegressor.set_fit_request"]], "set_fit_request() (openstef.model.regressors.linear.linearregressor method)": [[16, "openstef.model.regressors.linear.LinearRegressor.set_fit_request"]], "set_fit_request() (openstef.model.regressors.regressor.openstfregressor method)": [[16, "openstef.model.regressors.regressor.OpenstfRegressor.set_fit_request"]], "set_fit_request() (openstef.model.regressors.xgb.xgbopenstfregressor method)": [[16, "openstef.model.regressors.xgb.XGBOpenstfRegressor.set_fit_request"]], "set_fit_request() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor method)": [[16, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.set_fit_request"]], "set_predict_request() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.set_predict_request"]], "set_predict_request() (openstef.model.regressors.custom_regressor.customopenstfregressor method)": [[16, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor.set_predict_request"]], "set_predict_request() (openstef.model.regressors.dazls.dazls method)": [[16, "openstef.model.regressors.dazls.Dazls.set_predict_request"]], "set_predict_request() (openstef.model.regressors.lgbm.lgbmopenstfregressor method)": [[16, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.set_predict_request"]], "set_predict_request() (openstef.model.regressors.linear.linearopenstfregressor method)": [[16, "openstef.model.regressors.linear.LinearOpenstfRegressor.set_predict_request"]], "set_predict_request() (openstef.model.regressors.linear.linearregressor method)": [[16, "openstef.model.regressors.linear.LinearRegressor.set_predict_request"]], "set_predict_request() (openstef.model.regressors.regressor.openstfregressor method)": [[16, "openstef.model.regressors.regressor.OpenstfRegressor.set_predict_request"]], "set_predict_request() (openstef.model.regressors.xgb.xgbopenstfregressor method)": [[16, "openstef.model.regressors.xgb.XGBOpenstfRegressor.set_predict_request"]], "set_predict_request() (openstef.model.regressors.xgb_quantile.xgbquantileopenstfregressor method)": [[16, "openstef.model.regressors.xgb_quantile.XGBQuantileOpenstfRegressor.set_predict_request"]], "set_score_request() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.set_score_request"]], "set_score_request() (openstef.model.regressors.dazls.dazls method)": [[16, "openstef.model.regressors.dazls.Dazls.set_score_request"]], "set_score_request() (openstef.model.regressors.lgbm.lgbmopenstfregressor method)": [[16, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.set_score_request"]], "set_score_request() (openstef.model.regressors.linear.linearregressor method)": [[16, "openstef.model.regressors.linear.LinearRegressor.set_score_request"]], "update_historic_data() (openstef.model.regressors.arima.arimaopenstfregressor method)": [[16, "openstef.model.regressors.arima.ARIMAOpenstfRegressor.update_historic_data"]], "valid_kwargs() (openstef.model.regressors.custom_regressor.customopenstfregressor static method)": [[16, "openstef.model.regressors.custom_regressor.CustomOpenstfRegressor.valid_kwargs"]], "weight_importance_name (openstef.model.regressors.lgbm.lgbmopenstfregressor attribute)": [[16, "openstef.model.regressors.lgbm.LGBMOpenstfRegressor.weight_importance_name"]], "weight_importance_name (openstef.model.regressors.xgb.xgbopenstfregressor attribute)": [[16, "openstef.model.regressors.xgb.XGBOpenstfRegressor.weight_importance_name"]], "backtest_split_default() (in module openstef.model_selection.model_selection)": [[17, "openstef.model_selection.model_selection.backtest_split_default"]], "group_kfold() (in module openstef.model_selection.model_selection)": [[17, "openstef.model_selection.model_selection.group_kfold"]], "openstef.model_selection": [[17, "module-openstef.model_selection"]], "openstef.model_selection.model_selection": [[17, "module-openstef.model_selection.model_selection"]], "random_sample() (in module openstef.model_selection.model_selection)": [[17, "openstef.model_selection.model_selection.random_sample"]], "sample_indices_train_val() (in module openstef.model_selection.model_selection)": [[17, "openstef.model_selection.model_selection.sample_indices_train_val"]], "split_data_train_validation_test() (in module openstef.model_selection.model_selection)": [[17, "openstef.model_selection.model_selection.split_data_train_validation_test"]], "performancemeter (class in openstef.monitoring.performance_meter)": [[18, "openstef.monitoring.performance_meter.PerformanceMeter"]], "build_sql_query_string() (in module openstef.monitoring.teams)": [[18, "openstef.monitoring.teams.build_sql_query_string"]], "checkpoint() (openstef.monitoring.performance_meter.performancemeter method)": [[18, "openstef.monitoring.performance_meter.PerformanceMeter.checkpoint"]], "complete_level() (openstef.monitoring.performance_meter.performancemeter method)": [[18, "openstef.monitoring.performance_meter.PerformanceMeter.complete_level"]], "format_message() (in module openstef.monitoring.teams)": [[18, "openstef.monitoring.teams.format_message"]], "get_card_section() (in module openstef.monitoring.teams)": [[18, "openstef.monitoring.teams.get_card_section"]], "openstef.monitoring": [[18, "module-openstef.monitoring"]], "openstef.monitoring.performance_meter": [[18, "module-openstef.monitoring.performance_meter"]], "openstef.monitoring.teams": [[18, "module-openstef.monitoring.teams"]], "post_teams() (in module openstef.monitoring.teams)": [[18, "openstef.monitoring.teams.post_teams"]], "start_level() (openstef.monitoring.performance_meter.performancemeter method)": [[18, "openstef.monitoring.performance_meter.PerformanceMeter.start_level"]], "create_basecase_forecast_pipeline() (in module openstef.pipeline.create_basecase_forecast)": [[19, "openstef.pipeline.create_basecase_forecast.create_basecase_forecast_pipeline"]], "create_components_forecast_pipeline() (in module openstef.pipeline.create_component_forecast)": [[19, "openstef.pipeline.create_component_forecast.create_components_forecast_pipeline"]], "create_forecast_pipeline() (in module openstef.pipeline.create_forecast)": [[19, "openstef.pipeline.create_forecast.create_forecast_pipeline"]], "create_forecast_pipeline_core() (in module openstef.pipeline.create_forecast)": [[19, "openstef.pipeline.create_forecast.create_forecast_pipeline_core"]], "create_input() (in module openstef.pipeline.create_component_forecast)": [[19, "openstef.pipeline.create_component_forecast.create_input"]], "generate_basecase_confidence_interval() (in module openstef.pipeline.create_basecase_forecast)": [[19, "openstef.pipeline.create_basecase_forecast.generate_basecase_confidence_interval"]], "generate_forecast_datetime_range() (in module openstef.pipeline.utils)": [[19, "openstef.pipeline.utils.generate_forecast_datetime_range"]], "openstef.pipeline": [[19, "module-openstef.pipeline"]], "openstef.pipeline.create_basecase_forecast": [[19, "module-openstef.pipeline.create_basecase_forecast"]], "openstef.pipeline.create_component_forecast": [[19, "module-openstef.pipeline.create_component_forecast"]], "openstef.pipeline.create_forecast": [[19, "module-openstef.pipeline.create_forecast"]], "openstef.pipeline.optimize_hyperparameters": [[19, "module-openstef.pipeline.optimize_hyperparameters"]], "openstef.pipeline.train_create_forecast_backtest": [[19, "module-openstef.pipeline.train_create_forecast_backtest"]], "openstef.pipeline.train_model": [[19, "module-openstef.pipeline.train_model"]], "openstef.pipeline.utils": [[19, "module-openstef.pipeline.utils"]], "optimize_hyperparameters_pipeline() (in module openstef.pipeline.optimize_hyperparameters)": [[19, "openstef.pipeline.optimize_hyperparameters.optimize_hyperparameters_pipeline"]], "optimize_hyperparameters_pipeline_core() (in module openstef.pipeline.optimize_hyperparameters)": [[19, "openstef.pipeline.optimize_hyperparameters.optimize_hyperparameters_pipeline_core"]], "optuna_optimization() (in module openstef.pipeline.optimize_hyperparameters)": [[19, "openstef.pipeline.optimize_hyperparameters.optuna_optimization"]], "train_model_and_forecast_back_test() (in module openstef.pipeline.train_create_forecast_backtest)": [[19, "openstef.pipeline.train_create_forecast_backtest.train_model_and_forecast_back_test"]], "train_model_and_forecast_test_core() (in module openstef.pipeline.train_create_forecast_backtest)": [[19, "openstef.pipeline.train_create_forecast_backtest.train_model_and_forecast_test_core"]], "train_model_pipeline() (in module openstef.pipeline.train_model)": [[19, "openstef.pipeline.train_model.train_model_pipeline"]], "train_model_pipeline_core() (in module openstef.pipeline.train_model)": [[19, "openstef.pipeline.train_model.train_model_pipeline_core"]], "train_pipeline_common() (in module openstef.pipeline.train_model)": [[19, "openstef.pipeline.train_model.train_pipeline_common"]], "train_pipeline_step_compute_features() (in module openstef.pipeline.train_model)": [[19, "openstef.pipeline.train_model.train_pipeline_step_compute_features"]], "train_pipeline_step_load_model() (in module openstef.pipeline.train_model)": [[19, "openstef.pipeline.train_model.train_pipeline_step_load_model"]], "train_pipeline_step_split_data() (in module openstef.pipeline.train_model)": [[19, "openstef.pipeline.train_model.train_pipeline_step_split_data"]], "train_pipeline_step_train_model() (in module openstef.pipeline.train_model)": [[19, "openstef.pipeline.train_model.train_pipeline_step_train_model"]], "add_components_base_case_forecast() (in module openstef.postprocessing.postprocessing)": [[20, "openstef.postprocessing.postprocessing.add_components_base_case_forecast"]], "add_prediction_job_properties_to_forecast() (in module openstef.postprocessing.postprocessing)": [[20, "openstef.postprocessing.postprocessing.add_prediction_job_properties_to_forecast"]], "calculate_wind_power() (in module openstef.postprocessing.postprocessing)": [[20, "openstef.postprocessing.postprocessing.calculate_wind_power"]], "normalize_and_convert_weather_data_for_splitting() (in module openstef.postprocessing.postprocessing)": [[20, "openstef.postprocessing.postprocessing.normalize_and_convert_weather_data_for_splitting"]], "openstef.postprocessing": [[20, "module-openstef.postprocessing"]], "openstef.postprocessing.postprocessing": [[20, "module-openstef.postprocessing.postprocessing"]], "post_process_wind_solar() (in module openstef.postprocessing.postprocessing)": [[20, "openstef.postprocessing.postprocessing.post_process_wind_solar"]], "split_forecast_in_components() (in module openstef.postprocessing.postprocessing)": [[20, "openstef.postprocessing.postprocessing.split_forecast_in_components"]], "openstef.preprocessing": [[21, "module-openstef.preprocessing"]], "openstef.preprocessing.preprocessing": [[21, "module-openstef.preprocessing.preprocessing"]], "replace_repeated_values_with_nan() (in module openstef.preprocessing.preprocessing)": [[21, "openstef.preprocessing.preprocessing.replace_repeated_values_with_nan"]], "apply_fit_insol() (in module openstef.tasks.create_solar_forecast)": [[22, "openstef.tasks.create_solar_forecast.apply_fit_insol"]], "apply_persistence() (in module openstef.tasks.create_solar_forecast)": [[22, "openstef.tasks.create_solar_forecast.apply_persistence"]], "calc_kpi_for_specific_pid() (in module openstef.tasks.calculate_kpi)": [[22, "openstef.tasks.calculate_kpi.calc_kpi_for_specific_pid"]], "calc_norm() (in module openstef.tasks.create_solar_forecast)": [[22, "openstef.tasks.create_solar_forecast.calc_norm"]], "check_kpi_task() (in module openstef.tasks.calculate_kpi)": [[22, "openstef.tasks.calculate_kpi.check_kpi_task"]], "combine_forecasts() (in module openstef.tasks.create_solar_forecast)": [[22, "openstef.tasks.create_solar_forecast.combine_forecasts"]], "convert_coefdict_to_coefsdf() (in module openstef.tasks.split_forecast)": [[22, "openstef.tasks.split_forecast.convert_coefdict_to_coefsdf"]], "create_basecase_forecast_task() (in module openstef.tasks.create_basecase_forecast)": [[22, "openstef.tasks.create_basecase_forecast.create_basecase_forecast_task"]], "create_components_forecast_task() (in module openstef.tasks.create_components_forecast)": [[22, "openstef.tasks.create_components_forecast.create_components_forecast_task"]], "create_forecast_task() (in module openstef.tasks.create_forecast)": [[22, "openstef.tasks.create_forecast.create_forecast_task"]], "determine_invalid_coefs() (in module openstef.tasks.split_forecast)": [[22, "openstef.tasks.split_forecast.determine_invalid_coefs"]], "fides() (in module openstef.tasks.create_solar_forecast)": [[22, "openstef.tasks.create_solar_forecast.fides"]], "find_components() (in module openstef.tasks.split_forecast)": [[22, "openstef.tasks.split_forecast.find_components"]], "main() (in module openstef.tasks.calculate_kpi)": [[22, "openstef.tasks.calculate_kpi.main"]], "main() (in module openstef.tasks.create_basecase_forecast)": [[22, "openstef.tasks.create_basecase_forecast.main"]], "main() (in module openstef.tasks.create_components_forecast)": [[22, "openstef.tasks.create_components_forecast.main"]], "main() (in module openstef.tasks.create_forecast)": [[22, "openstef.tasks.create_forecast.main"]], "main() (in module openstef.tasks.create_solar_forecast)": [[22, "openstef.tasks.create_solar_forecast.main"]], "main() (in module openstef.tasks.create_wind_forecast)": [[22, "openstef.tasks.create_wind_forecast.main"]], "main() (in module openstef.tasks.optimize_hyperparameters)": [[22, "openstef.tasks.optimize_hyperparameters.main"]], "main() (in module openstef.tasks.run_tracy)": [[22, "openstef.tasks.run_tracy.main"]], "main() (in module openstef.tasks.split_forecast)": [[22, "openstef.tasks.split_forecast.main"]], "main() (in module openstef.tasks.train_model)": [[22, "openstef.tasks.train_model.main"]], "make_solar_prediction_pj() (in module openstef.tasks.create_solar_forecast)": [[22, "openstef.tasks.create_solar_forecast.make_solar_prediction_pj"]], "make_wind_forecast_pj() (in module openstef.tasks.create_wind_forecast)": [[22, "openstef.tasks.create_wind_forecast.make_wind_forecast_pj"]], "openstef.tasks": [[22, "module-openstef.tasks"]], "openstef.tasks.calculate_kpi": [[22, "module-openstef.tasks.calculate_kpi"]], "openstef.tasks.create_basecase_forecast": [[22, "module-openstef.tasks.create_basecase_forecast"]], "openstef.tasks.create_components_forecast": [[22, "module-openstef.tasks.create_components_forecast"]], "openstef.tasks.create_forecast": [[22, "module-openstef.tasks.create_forecast"]], "openstef.tasks.create_solar_forecast": [[22, "module-openstef.tasks.create_solar_forecast"]], "openstef.tasks.create_wind_forecast": [[22, "module-openstef.tasks.create_wind_forecast"]], "openstef.tasks.optimize_hyperparameters": [[22, "module-openstef.tasks.optimize_hyperparameters"]], "openstef.tasks.run_tracy": [[22, "module-openstef.tasks.run_tracy"]], "openstef.tasks.split_forecast": [[22, "module-openstef.tasks.split_forecast"]], "openstef.tasks.train_model": [[22, "module-openstef.tasks.train_model"]], "optimize_hyperparameters_task() (in module openstef.tasks.optimize_hyperparameters)": [[22, "openstef.tasks.optimize_hyperparameters.optimize_hyperparameters_task"]], "run_tracy() (in module openstef.tasks.run_tracy)": [[22, "openstef.tasks.run_tracy.run_tracy"]], "run_tracy_job() (in module openstef.tasks.run_tracy)": [[22, "openstef.tasks.run_tracy.run_tracy_job"]], "set_incomplete_kpi_to_nan() (in module openstef.tasks.calculate_kpi)": [[22, "openstef.tasks.calculate_kpi.set_incomplete_kpi_to_nan"]], "split_forecast_task() (in module openstef.tasks.split_forecast)": [[22, "openstef.tasks.split_forecast.split_forecast_task"]], "train_model_task() (in module openstef.tasks.train_model)": [[22, "openstef.tasks.train_model.train_model_task"]], "predictionjobloop (class in openstef.tasks.utils.predictionjobloop)": [[23, "openstef.tasks.utils.predictionjobloop.PredictionJobLoop"]], "taskcontext (class in openstef.tasks.utils.taskcontext)": [[23, "openstef.tasks.utils.taskcontext.TaskContext"]], "build_graph_structure() (in module openstef.tasks.utils.dependencies)": [[23, "openstef.tasks.utils.dependencies.build_graph_structure"]], "build_nx_graph() (in module openstef.tasks.utils.dependencies)": [[23, "openstef.tasks.utils.dependencies.build_nx_graph"]], "find_groups() (in module openstef.tasks.utils.dependencies)": [[23, "openstef.tasks.utils.dependencies.find_groups"]], "has_dependencies() (in module openstef.tasks.utils.dependencies)": [[23, "openstef.tasks.utils.dependencies.has_dependencies"]], "map() (openstef.tasks.utils.predictionjobloop.predictionjobloop method)": [[23, "openstef.tasks.utils.predictionjobloop.PredictionJobLoop.map"]], "openstef.tasks.utils": [[23, "module-openstef.tasks.utils"]], "openstef.tasks.utils.dependencies": [[23, "module-openstef.tasks.utils.dependencies"]], "openstef.tasks.utils.predictionjobloop": [[23, "module-openstef.tasks.utils.predictionjobloop"]], "openstef.tasks.utils.taskcontext": [[23, "module-openstef.tasks.utils.taskcontext"]], "calc_completeness_dataframe() (in module openstef.validation.validation)": [[24, "openstef.validation.validation.calc_completeness_dataframe"]], "calc_completeness_features() (in module openstef.validation.validation)": [[24, "openstef.validation.validation.calc_completeness_features"]], "check_data_for_each_trafo() (in module openstef.validation.validation)": [[24, "openstef.validation.validation.check_data_for_each_trafo"]], "drop_target_na() (in module openstef.validation.validation)": [[24, "openstef.validation.validation.drop_target_na"]], "find_nonzero_flatliner() (in module openstef.validation.validation)": [[24, "openstef.validation.validation.find_nonzero_flatliner"]], "find_zero_flatliner() (in module openstef.validation.validation)": [[24, "openstef.validation.validation.find_zero_flatliner"]], "is_data_sufficient() (in module openstef.validation.validation)": [[24, "openstef.validation.validation.is_data_sufficient"]], "openstef.validation": [[24, "module-openstef.validation"]], "openstef.validation.validation": [[24, "module-openstef.validation.validation"]], "validate() (in module openstef.validation.validation)": [[24, "openstef.validation.validation.validate"]]}})